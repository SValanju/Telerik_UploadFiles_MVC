{"version":3,"file":"kendo.pivot.common.min.js","sources":["kendo.pivot.common.js"],"sourcesContent":["(function(f, define){\n    define('pivotgrid/common',[\n        \"kendo.core\"\n    ], f);\n})(function(){\n\n(function () {\n\nwindow.kendo.pivotgrid = window.kendo.pivotgrid || {};\nwindow.kendo.pivotgrid.common = (function (exports) {\n    \n\n    var filterFunctionFormats = {\n        contains: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\") > 0\",\n        doesnotcontain: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\")\",\n        endswith: \", Right({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n        eq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\",\n        neq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\",\n        startswith: \", Left({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\"\n    };\n    var operators = {\n        doesnotcontain: 'doesnotcontain',\n        in: 'in',\n        neq: \"neq\"\n    };\n    /**\n     * @hidden\n     */\n    function serializeFilters(filters, cube) {\n        var command = \"\";\n        var current = \"\";\n        for (var idx = filters.length - 1; idx >= 0; idx--) {\n            current = \"SELECT (\";\n            current += serializeExpression(filters[idx]);\n            current += \") ON 0\";\n            if (idx === filters.length - 1) {\n                current += \" FROM [\" + cube + \"]\";\n                command = current;\n            }\n            else {\n                command = current + \" FROM ( \" + command + \" )\";\n            }\n        }\n        return command;\n    }\n    function serializeExpression(expression) {\n        var command = '';\n        var value = String(expression.value);\n        var field = expression.field;\n        var operator = expression.operator;\n        if (operator === operators.in) {\n            command += \"{\";\n            command += value;\n            command += \"}\";\n        }\n        else {\n            command += operator === operators.neq || operator === operators.doesnotcontain ? '-' : '';\n            command += \"Filter(\";\n            command += field + \".MEMBERS\";\n            command += formatString(filterFunctionFormats[operator], field, value);\n            command += \")\";\n        }\n        return command;\n    }\n    function formatString(str) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        values.forEach(function (value, index) {\n            str = str.replace(new RegExp(\"\\\\{\" + index + \"\\\\}\", 'g'), value);\n        });\n        return str;\n    }\n\n    /**\n     * @hidden\n     */\n    function serializeMembers(members, measures, sort) {\n        var command = \"\";\n        members = members || [];\n        var parsed = parseDescriptors(members);\n        var expanded = parsed.expanded;\n        var rootNames = getRootNames(parsed.root);\n        var crossJoinCommands = [];\n        var length = expanded.length;\n        var idx = 0;\n        var memberName;\n        var names = [];\n        if (rootNames.length > 1 || measures.length > 1) {\n            crossJoinCommands.push(crossJoinCommand(rootNames, measures));\n            for (; idx < length; idx++) {\n                memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                names = mapNames(memberName, rootNames);\n                crossJoinCommands.push(crossJoinCommand(names, measures));\n            }\n            command += crossJoinCommands.join(\",\");\n        }\n        else {\n            for (; idx < length; idx++) {\n                memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                names.push(memberName[0]);\n            }\n            command += rootNames.concat(names).join(\",\");\n        }\n        return command;\n    }\n    /**\n     * @hidden\n     */\n    function measureNames(measures) {\n        var length = measures.length;\n        var result = [];\n        var measure;\n        for (var idx = 0; idx < length; idx++) {\n            measure = measures[idx];\n            result.push(measure.name !== undefined ? measure.name : measure);\n        }\n        return result;\n    }\n    function getRootNames(members) {\n        var root = [];\n        members.forEach(function (member) {\n            var name = member.name[0];\n            var hierarchyName = baseHierarchyPath(name);\n            if (!root.some(function (n) { return n.indexOf(hierarchyName) === 0; })) {\n                root.push(name);\n            }\n        });\n        return root;\n    }\n    function parseDescriptors(members) {\n        var expanded = [];\n        var child = [];\n        var root = [];\n        var idx = 0;\n        var found;\n        for (; idx < members.length; idx++) {\n            var member = members[idx];\n            var name_1 = member.name;\n            found = false;\n            if (name_1.length > 1) {\n                child.push(member);\n            }\n            else {\n                var hierarchyName = baseHierarchyPath(name_1[0]);\n                for (var j = 0, l = root.length; j < l; j++) {\n                    if (root[j].name[0].indexOf(hierarchyName) === 0) {\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) {\n                    root.push(member);\n                }\n                if (member.expand) {\n                    expanded.push(member);\n                }\n            }\n        }\n        expanded = expanded.concat(child);\n        return {\n            expanded: expanded,\n            root: root\n        };\n    }\n    function mapNames(names, rootNames) {\n        var rootLength = rootNames.length;\n        rootNames = rootNames.slice(0);\n        for (var idx = 0; idx < names.length; idx++) {\n            var name_2 = names[idx];\n            for (var j = 0; j < rootLength; j++) {\n                var rootName = baseHierarchyPath(rootNames[j]);\n                if (name_2.indexOf(rootName) !== -1) {\n                    rootNames[j] = name_2;\n                    break;\n                }\n            }\n        }\n        return rootNames;\n    }\n    function crossJoinCommand(members, measures) {\n        var tmp = members.slice(0);\n        if (measures.length > 1) {\n            tmp.push(\"{\" + measureNames(measures).join(\",\") + \"}\");\n        }\n        return crossJoin(tmp);\n    }\n    function expandMemberDescriptor(names, sort) {\n        var idx = names.length - 1;\n        var name = names[idx];\n        var sortDescriptor = sortDescriptorForMember(sort, name);\n        if (sortDescriptor && sortDescriptor.dir) {\n            name = \"ORDER(\" + name + \".Children,\" + sortDescriptor.field + \".CurrentMember.MEMBER_CAPTION,\" + sortDescriptor.dir + \")\";\n        }\n        else {\n            name += \".Children\";\n        }\n        names[idx] = name;\n        return names;\n    }\n    function sortDescriptorForMember(sort, member) {\n        for (var idx = 0, length_1 = sort.length; idx < length_1; idx++) {\n            if (member.indexOf(sort[idx].field) === 0) {\n                return sort[idx];\n            }\n        }\n        return null;\n    }\n    function baseHierarchyPath(memberName) {\n        var parts = memberName.split(\".\");\n        if (parts.length > 2) {\n            return parts[0] + \".\" + parts[1];\n        }\n        return memberName;\n    }\n    function crossJoin(names) {\n        var result = \"CROSSJOIN({\";\n        var name;\n        if (names.length > 2) {\n            name = names.pop();\n            result += crossJoin(names);\n        }\n        else {\n            result += names.shift();\n            name = names.pop();\n        }\n        result += \"},{\";\n        result += name;\n        result += \"})\";\n        return result;\n    }\n\n    /**\n     * @hidden\n     */\n    function createRequestBody(options) {\n        var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"><Command><Statement>';\n        var _a = options.columnAxes, columnAxes = _a === void 0 ? [] : _a, _b = options.rowAxes, rowAxes = _b === void 0 ? [] : _b;\n        var _c = options.measureAxes, measureAxes = _c === void 0 ? [] : _c, _d = options.sort, sort = _d === void 0 ? [] : _d, _e = options.filter, filter = _e === void 0 ? [] : _e;\n        var measuresRowAxis = options.measuresAxis === \"rows\";\n        command += \"SELECT NON EMPTY {\";\n        if (!columnAxes.length && rowAxes.length && (!measureAxes.length || (measureAxes.length && measuresRowAxis))) {\n            columnAxes = rowAxes;\n            rowAxes = [];\n            measuresRowAxis = false;\n        }\n        if (!columnAxes.length && !rowAxes.length) {\n            measuresRowAxis = false;\n        }\n        if (columnAxes.length) {\n            command += serializeMembers(columnAxes, !measuresRowAxis ? measureAxes : [], sort);\n        }\n        else if (measureAxes.length && !measuresRowAxis) {\n            command += measureNames(measureAxes).join(\",\");\n        }\n        command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON COLUMNS\";\n        if (rowAxes.length || (measuresRowAxis && measureAxes.length > 1)) {\n            command += \", NON EMPTY {\";\n            if (rowAxes.length) {\n                command += serializeMembers(rowAxes, measuresRowAxis ? measureAxes : [], sort);\n            }\n            else {\n                command += measureNames(measureAxes).join(\",\");\n            }\n            command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON ROWS\";\n        }\n        if (filter.length) {\n            command += \" FROM \";\n            command += \"(\";\n            command += serializeFilters(filter, options.connection.cube);\n            command += \")\";\n        }\n        else {\n            command += \" FROM [\" + options.connection.cube + \"]\";\n        }\n        if (measureAxes.length === 1 && columnAxes.length) {\n            command += \" WHERE (\" + measureNames(measureAxes).join(\",\") + \")\";\n        }\n        command += '</Statement></Command><Properties><PropertyList><Catalog>' + options.connection.catalog + '</Catalog><Format>Multidimensional</Format></PropertyList></Properties></Execute></Body></Envelope>';\n        return command.replace(/&/g, \"&amp;\");\n    }\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation.\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n\n    var __assign = function() {\n        __assign = Object.assign || function __assign(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n\n    function __awaiter(thisArg, _arguments, P, generator) {\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    }\n\n    function __generator(thisArg, body) {\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n        function verb(n) { return function (v) { return step([n, v]); }; }\n        function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_) try {\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n                if (y = 0, t) op = [op[0] & 2, t.value];\n                switch (op[0]) {\n                    case 0: case 1: t = op; break;\n                    case 4: _.label++; return { value: op[1], done: false };\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                    default:\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                        if (t[2]) _.ops.pop();\n                        _.trys.pop(); continue;\n                }\n                op = body.call(thisArg, _);\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    }\n\n    /** @deprecated */\n    function __spreadArrays() {\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n                r[k] = a[j];\n        return r;\n    }\n\n    /**\n     * @hidden\n     */\n    function parseResponse(response) {\n        var xmlDoc = new DOMParser().parseFromString(response, \"text/xml\");\n        var axes = Array.from(xmlDoc.querySelectorAll(\"Axis\"));\n        var cells = Array.from(xmlDoc.querySelectorAll(\"CellData > Cell\"))\n            .map(function (cell) { return ({\n            fmtValue: getPropertyValue(cell, \"FmtValue\"),\n            ordinal: parseInt(cell.getAttribute(\"CellOrdinal\"), 10),\n            value: getPropertyValue(cell, \"Value\")\n        }); });\n        var columns = { tuples: [] };\n        var rows = { tuples: [] };\n        var data = [];\n        axes.forEach(function (axis) {\n            if (axis.getAttribute('name') !== \"SlicerAxis\") {\n                var tuples = columns.tuples.length === 0 ? columns.tuples : rows.tuples;\n                Array.prototype.push.apply(tuples, translateAxis(axis));\n            }\n        });\n        var indexedData = new Array(rows.tuples.length * columns.tuples.length).fill(null);\n        cells.forEach(function (c) { indexedData[c.ordinal] = c; });\n        var counter = 0;\n        rows.tuples.forEach(function (rowTuple) {\n            columns.tuples.forEach(function (colTuple) {\n                data.push({\n                    columnTuple: colTuple,\n                    data: indexedData[counter],\n                    rowTuple: rowTuple\n                });\n                counter++;\n            });\n        });\n        return { columns: columns, data: data, rows: rows };\n    }\n    /**\n     * @hidden\n     */\n    function getPropertyValue(member, name) {\n        var node = member.querySelector(name);\n        return node ? node.textContent : \"\";\n    }\n    function translateAxis(axis) {\n        var tuples = Array.from(axis.querySelectorAll(\"Tuple\"));\n        return tuples.map(function (tuple) {\n            var memberElements = Array.from(tuple.querySelectorAll(\"Member\"));\n            var members = memberElements.map(function (member) {\n                var lNum = parseInt(getPropertyValue(member, \"LNum\") || \"0\", 10);\n                var hasChildren = parseInt(getPropertyValue(member, \"CHILDREN_CARDINALITY\") || \"0\", 10) > 0;\n                return {\n                    caption: getPropertyValue(member, \"Caption\"),\n                    children: [],\n                    hasChildren: hasChildren,\n                    hierarchy: member.getAttribute('Hierarchy'),\n                    levelName: getPropertyValue(member, \"LName\"),\n                    levelNum: lNum,\n                    name: getPropertyValue(member, \"UName\"),\n                    parentName: getPropertyValue(member, \"PARENT_UNIQUE_NAME\")\n                };\n            });\n            return { members: members };\n        });\n    }\n\n    /**\n     * @hidden\n     */\n    var discoverCommands = {\n        schemaCatalogs: \"DBSCHEMA_CATALOGS\",\n        schemaCubes: \"MDSCHEMA_CUBES\",\n        schemaDimensions: \"MDSCHEMA_DIMENSIONS\",\n        schemaHierarchies: \"MDSCHEMA_HIERARCHIES\",\n        schemaKPIs: \"MDSCHEMA_KPIS\",\n        schemaLevels: \"MDSCHEMA_LEVELS\",\n        schemaMeasures: \"MDSCHEMA_MEASURES\",\n        schemaMembers: \"MDSCHEMA_MEMBERS\"\n    };\n    /**\n     * @hidden\n     */\n    function createDiscoverBody(options) {\n        var properties = {};\n        var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Discover xmlns=\"urn:schemas-microsoft-com:xml-analysis\">';\n        command += \"<RequestType>\" + (discoverCommands[options.command] || options.command) + \"</RequestType>\";\n        command += \"<Restrictions>\" + serializeOptions(\"RestrictionList\", options.restrictions, true) + \"</Restrictions>\";\n        if (options.connection && options.connection.catalog) {\n            properties.Catalog = options.connection.catalog;\n        }\n        command += \"<Properties>\" + serializeOptions(\"PropertyList\", properties, false) + \"</Properties>\";\n        command += '</Discover></Body></Envelope>';\n        return command;\n    }\n    function serializeOptions(parentTagName, options, capitalize) {\n        var result = \"\";\n        if (options) {\n            result += \"<\" + parentTagName + \">\";\n            var value = void 0;\n            for (var key in options) {\n                if (options[key]) {\n                    value = options[key];\n                    if (capitalize) {\n                        key = key.replace(/([A-Z]+(?=$|[A-Z][a-z])|[A-Z]?[a-z]+)/g, \"$1_\").toUpperCase().replace(/_$/, \"\");\n                    }\n                    result += \"<\" + key + \">\" + value + \"</\" + key + \">\";\n                }\n            }\n            result += \"</\" + parentTagName + \">\";\n        }\n        else {\n            result += \"<\" + parentTagName + \"/>\";\n        }\n        return result;\n    }\n\n    /**\n     * @hidden\n     */\n    function parseCubes(response) {\n        var xmlDoc = new DOMParser().parseFromString(response, \"text/xml\");\n        var rows = Array.from(xmlDoc.querySelectorAll(\"DiscoverResponse > return > root > row\"))\n            .map(function (row) { return ({\n            name: getPropertyValue(row, \"CUBE_NAME\"),\n            caption: getPropertyValue(row, \"CUBE_CAPTION\"),\n            description: getPropertyValue(row, \"DESCRIPTION\"),\n            type: getPropertyValue(row, \"CUBE_TYPE\")\n        }); });\n        return rows;\n    }\n    /**\n     * @hidden\n     */\n    function parseCatalogs(response) {\n        var xmlDoc = new DOMParser().parseFromString(response, \"text/xml\");\n        var rows = Array.from(xmlDoc.querySelectorAll(\"DiscoverResponse > return > root > row\"))\n            .map(function (row) { return ({\n            name: getPropertyValue(row, \"CATALOG_NAME\"),\n            description: getPropertyValue(row, \"DESCRIPTION\")\n        }); });\n        return rows;\n    }\n    /**\n     * @hidden\n     */\n    function parseMeasures(response) {\n        var xmlDoc = new DOMParser().parseFromString(response, \"text/xml\");\n        var rows = Array.from(xmlDoc.querySelectorAll(\"DiscoverResponse > return > root > row\"))\n            .map(function (row) { return ({\n            name: getPropertyValue(row, \"MEASURE_NAME\"),\n            caption: getPropertyValue(row, \"MEASURE_CAPTION\"),\n            uniqueName: getPropertyValue(row, \"MEASURE_UNIQUE_NAME\"),\n            description: getPropertyValue(row, \"DESCRIPTION\"),\n            aggregator: getPropertyValue(row, \"MEASURE_AGGREGATOR\"),\n            groupName: getPropertyValue(row, \"MEASUREGROUP_NAME\"),\n            displayFolder: getPropertyValue(row, \"MEASURE_DISPLAY_FOLDER\"),\n            defaultFormat: getPropertyValue(row, \"DEFAULT_FORMAT_STRING\")\n        }); });\n        return rows;\n    }\n    /**\n     * @hidden\n     */\n    function parseKPIs(response) {\n        var xmlDoc = new DOMParser().parseFromString(response, \"text/xml\");\n        var rows = Array.from(xmlDoc.querySelectorAll(\"DiscoverResponse > return > root > row\"))\n            .map(function (row) { return ({\n            name: getPropertyValue(row, \"KPI_NAME\"),\n            uniqueName: getPropertyValue(row, \"KPI_NAME\"),\n            caption: getPropertyValue(row, \"KPI_CAPTION\"),\n            value: getPropertyValue(row, \"KPI_VALUE\"),\n            goal: getPropertyValue(row, \"KPI_GOAL\"),\n            status: getPropertyValue(row, \"KPI_STATUS\"),\n            trend: getPropertyValue(row, \"KPI_TREND\"),\n            statusGraphic: getPropertyValue(row, \"KPI_STATUS_GRAPHIC\"),\n            trendGraphic: getPropertyValue(row, \"KPI_TREND_GRAPHIC\"),\n            description: getPropertyValue(row, \"KPI_DESCRIPTION\"),\n            groupName: getPropertyValue(row, \"MEASUREGROUP_NAME\"),\n            type: \"kpi\"\n        }); });\n        return rows;\n    }\n    /**\n     * @hidden\n     */\n    function parseDimensions(response) {\n        var xmlDoc = new DOMParser().parseFromString(response, \"text/xml\");\n        var rows = Array.from(xmlDoc.querySelectorAll(\"DiscoverResponse > return > root > row\"))\n            .map(function (row) { return ({\n            caption: getPropertyValue(row, \"DIMENSION_CAPTION\"),\n            defaultHierarchy: getPropertyValue(row, \"DEFAULT_HIERARCHY\"),\n            description: getPropertyValue(row, \"DESCRIPTION\"),\n            name: getPropertyValue(row, \"DIMENSION_NAME\"),\n            type: parseInt(getPropertyValue(row, \"DIMENSION_TYPE\"), 10),\n            uniqueName: getPropertyValue(row, \"DIMENSION_UNIQUE_NAME\")\n        }); });\n        return rows;\n    }\n    /**\n     * @hidden\n     */\n    function parseHierarchies(response) {\n        var xmlDoc = new DOMParser().parseFromString(response, \"text/xml\");\n        var rows = Array.from(xmlDoc.querySelectorAll(\"DiscoverResponse > return > root > row\"))\n            .map(function (row) { return ({\n            name: getPropertyValue(row, \"HIERARCHY_NAME\"),\n            caption: getPropertyValue(row, \"HIERARCHY_CAPTION\"),\n            description: getPropertyValue(row, \"DESCRIPTION\"),\n            uniqueName: getPropertyValue(row, \"HIERARCHY_UNIQUE_NAME\"),\n            dimensionUniqueName: getPropertyValue(row, \"DIMENSION_UNIQUE_NAME\"),\n            displayFolder: getPropertyValue(row, \"HIERARCHY_DISPLAY_FOLDER\"),\n            origin: getPropertyValue(row, \"HIERARCHY_ORIGIN\"),\n            defaultMember: getPropertyValue(row, \"DEFAULT_MEMBER\")\n        }); });\n        return rows;\n    }\n    /**\n     * @hidden\n     */\n    function parseLevels(response) {\n        var xmlDoc = new DOMParser().parseFromString(response, \"text/xml\");\n        var rows = Array.from(xmlDoc.querySelectorAll(\"DiscoverResponse > return > root > row\"))\n            .map(function (row) { return ({\n            name: getPropertyValue(row, \"LEVEL_NAME\"),\n            caption: getPropertyValue(row, \"LEVEL_CAPTION\"),\n            description: getPropertyValue(row, \"DESCRIPTION\"),\n            uniqueName: getPropertyValue(row, \"LEVEL_UNIQUE_NAME\"),\n            dimensionUniqueName: getPropertyValue(row, \"DIMENSION_UNIQUE_NAME\"),\n            displayFolder: getPropertyValue(row, \"LEVEL_DISPLAY_FOLDER\"),\n            orderingProperty: getPropertyValue(row, \"LEVEL_ORDERING_PROPERTY\"),\n            origin: getPropertyValue(row, \"LEVEL_ORIGIN\"),\n            hierarchyUniqueName: getPropertyValue(row, \"HIERARCHY_UNIQUE_NAME\")\n        }); });\n        return rows;\n    }\n    /**\n     * @hidden\n     */\n    function parseMembers(response) {\n        var xmlDoc = new DOMParser().parseFromString(response, \"text/xml\");\n        var rows = Array.from(xmlDoc.querySelectorAll(\"DiscoverResponse > return > root > row\"))\n            .map(function (row) { return ({\n            name: getPropertyValue(row, \"MEMBER_NAME\"),\n            caption: getPropertyValue(row, \"MEMBER_CAPTION\"),\n            uniqueName: getPropertyValue(row, \"MEMBER_UNIQUE_NAME\"),\n            dimensionUniqueName: getPropertyValue(row, \"DIMENSION_UNIQUE_NAME\"),\n            hierarchyUniqueName: getPropertyValue(row, \"HIERARCHY_UNIQUE_NAME\"),\n            levelUniqueName: getPropertyValue(row, \"LEVEL_UNIQUE_NAME\"),\n            childrenCardinality: getPropertyValue(row, \"CHILDREN_CARDINALITY\")\n        }); });\n        return rows;\n    }\n\n    var discoverParser = {\n        schemaCatalogs: parseCatalogs,\n        schemaCubes: parseCubes,\n        schemaDimensions: parseDimensions,\n        schemaHierarchies: parseHierarchies,\n        schemaKPIs: parseKPIs,\n        schemaLevels: parseLevels,\n        schemaMeasures: parseMeasures,\n        schemaMembers: parseMembers\n    };\n    /**\n     * Fetches the data.\n     *\n     * @param options RequestOptions\n     * @returns Promise<ResponseData>\n     *\n     * @example\n     * const options: RequestOptions = { ... };\n     *\n     * fetchData(options).then(createDataState).then((dataState: DataState) => {\n     *  // Update the UI\n     * });\n     */\n    /**\n     * @hidden\n     */\n    var fetchData = function (fetchOptions, options) { return __awaiter(void 0, void 0, void 0, function () {\n        var init, response, stringResponse;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    init = __assign({ body: createRequestBody(options), headers: { 'Content-Type': 'text/xml' }, method: 'POST' }, fetchOptions.init);\n                    return [4 /*yield*/, fetch(fetchOptions.url, init)];\n                case 1:\n                    response = _a.sent();\n                    return [4 /*yield*/, response.text()];\n                case 2:\n                    stringResponse = _a.sent();\n                    return [2 /*return*/, parseResponse(stringResponse)];\n            }\n        });\n    }); };\n    /**\n     * @hidden\n     */\n    var fetchDiscover = function (fetchOptions, options) { return __awaiter(void 0, void 0, void 0, function () {\n        var init, response, stringResponse;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    init = __assign({ body: createDiscoverBody(options), headers: { 'Content-Type': 'text/xml' }, method: 'POST' }, fetchOptions.init);\n                    return [4 /*yield*/, fetch(fetchOptions.url, init)];\n                case 1:\n                    response = _a.sent();\n                    return [4 /*yield*/, response.text()];\n                case 2:\n                    stringResponse = _a.sent();\n                    return [2 /*return*/, discoverParser[options.command](stringResponse)];\n            }\n        });\n    }); };\n\n    /**\n     * Creates the state object. See `fetchData`.\n     *\n     * @param response - ResponseData\n     * @returns DataState\n     */\n    /**\n     * @hidden\n     */\n    var createDataState = function (response) {\n        var state = {\n            columns: response.columns.tuples,\n            data: response.data,\n            rows: response.rows.tuples\n        };\n        return state;\n    };\n\n    /**\n     * Creates a collection of AxisDescriptor base on the expandTree.\n     * @param expandTree - { [key: string]: boolean }\n     * @returns AxisDescriptor[]\n     *\n     * @example\n     * See `setRowExpand` or `setColumnExpand` functions.\n     */\n    /**\n     * @hidden\n     */\n    function createAxisDescriptors(expandTree) {\n        var descriptors = [];\n        for (var _i = 0, _a = Object.keys(expandTree); _i < _a.length; _i++) {\n            var key = _a[_i];\n            descriptors.push({ name: JSON.parse(key), expand: expandTree[key] });\n        }\n        return descriptors;\n    }\n\n    /**\n     * Sets sort descriptors to request options.\n     *\n     * @param options - RequestOptions\n     * @param sort - SortDescriptor[]\n     *\n     * @example\n     * const options: RequestOptions = { ... };\n     * const sort: SortDescriptor[] = [{ ... }, { ... }];\n     * setSort(options, sort);\n     * // skip the sort parameter to clear current filter - setSort(options);\n     *\n     * fetchData(options).then(createDataState).then((dataState: DataState) => {\n     *  // Update the UI\n     * });\n     */\n    /**\n     * @hidden\n     */\n    var setSort = function (options, sort) {\n        if (sort === void 0) { sort = []; }\n        options.sort = sort;\n    };\n\n    /**\n     * Sets filter descriptors to request options.\n     *\n     * @param options - RequestOptions\n     * @param filter - FilterDescriptor[]\n     *\n     * @example\n     * const options: RequestOptions = { ... };\n     * const filter: FilterDescriptor[] = [{ ... }, { ... }];\n     * setFilter(options, filter);\n     * // skip the filter parameter to clear current filter - setFilter(options);\n     *\n     * fetchData(options).then(createDataState).then((dataState: DataState) => {\n     *  // Update the UI\n     * });\n     */\n    /**\n     * @hidden\n     */\n    var setFilter = function (options, filter) {\n        if (filter === void 0) { filter = []; }\n        options.filter = filter;\n    };\n\n    // A typical tree depth count won't work for the Pivot,\n    // as each branch can have lower number of nodes than the total number of levels\n    /**\n     * @hidden\n     */\n    var getMaxNesting = function (node, set) {\n        if (set === void 0) { set = new Set(); }\n        (node.children || []).forEach(function (child) {\n            set.add(child.levelName);\n            getMaxNesting(child, set);\n        });\n        return set.size;\n    };\n    /**\n     * @hidden\n     */\n    var getMaxExpansion = function (node) {\n        var expanded = 0;\n        (node.children || []).forEach(function (child) {\n            expanded += (getMaxExpansion(child) || 1);\n        });\n        return expanded;\n    };\n    /**\n     * @hidden\n     */\n    var generateNormalizedPath = function (node, parent) {\n        return (parent && (parent.hierarchy === node.hierarchy)\n            ? __spreadArrays((parent.normalizedPath || []).slice(0, -1), [node.name || null]) : __spreadArrays(((parent && parent.normalizedPath) ? parent.normalizedPath : []), [node.name])).filter(Boolean);\n    };\n    /**\n     * @hidden\n     */\n    var generatePath = function (node, parent) {\n        return (parent && (parent.hierarchy === node.hierarchy)\n            ? __spreadArrays((parent.path || []).slice(0, -1), [((node.levelNum === 0 ? node.hierarchy : node.name) || null)]) : __spreadArrays(((parent && parent.path) ? parent.path : []), [node.levelNum === 0 ? node.hierarchy : node.name])).filter(Boolean);\n    };\n    /**\n     * @hidden\n     */\n    var toMatrix = function (node, rowIndex, colIndex, maxDepth, maxBreadth, matrix, leafs, parent) {\n        if (rowIndex === void 0) { rowIndex = -1; }\n        if (colIndex === void 0) { colIndex = 0; }\n        if (maxDepth === void 0) { maxDepth = undefined; }\n        if (maxBreadth === void 0) { maxBreadth = undefined; }\n        if (matrix === void 0) { matrix = undefined; }\n        if (leafs === void 0) { leafs = undefined; }\n        if (parent === void 0) { parent = undefined; }\n        var branchDepth = getMaxNesting(node);\n        var branchBreadth = getMaxExpansion(node);\n        var depth = maxDepth || branchDepth;\n        var breadth = maxBreadth || branchBreadth;\n        var matrixResult = matrix ? matrix.slice() : [];\n        var leafsResult = leafs ? leafs.slice() : new Array(breadth);\n        var index = matrixResult.findIndex(function (l) { return l && l.name === node.levelName && l.level === node.levelNum; });\n        var level = matrixResult[index];\n        var row = {\n            name: node.levelName,\n            level: node.levelNum,\n            index: rowIndex,\n            cells: new Array(breadth).fill(null)\n        };\n        var inject = rowIndex !== -1 && colIndex !== -1;\n        var cell = {\n            caption: node.caption,\n            name: node.name,\n            levelName: node.levelName,\n            levelNum: node.levelNum,\n            hasChildren: node.hasChildren,\n            parentName: node.parentName,\n            hierarchy: node.hierarchy,\n            total: (node.total !== undefined ? node.total : false) || (parent && parent.children.length <= 1 && parent.total),\n            parent: parent,\n            rowIndex: rowIndex,\n            colIndex: colIndex,\n            depth: 1,\n            breadth: 1,\n            path: node.path || [],\n            normalizedPath: node.normalizedPath || [],\n            children: node.children.filter(function (c) { return c.hierarchy === node.hierarchy; })\n        };\n        if (inject) {\n            if (level) {\n                level.cells[colIndex] = cell;\n                if (level.index >= rowIndex) {\n                    rowIndex = level.index;\n                }\n            }\n            else {\n                if (matrixResult[rowIndex] && matrixResult[rowIndex].cells.length) {\n                    for (var idx = rowIndex; idx < matrixResult.length; idx++) {\n                        var shiftedRow = matrixResult[idx];\n                        shiftedRow.index++;\n                    }\n                    matrixResult.splice(rowIndex, 0, row);\n                    matrixResult[rowIndex].cells[colIndex] = cell;\n                }\n                else {\n                    matrixResult[rowIndex] = row;\n                    matrixResult[rowIndex].cells[colIndex] = cell;\n                }\n            }\n        }\n        var collOffset = 0;\n        if (node.children && node.children.length) {\n            node.children.forEach(function (child) {\n                var _a = toMatrix(child, rowIndex + 1, colIndex + collOffset, depth, breadth, matrixResult, leafsResult, cell), newMatrix = _a[0], newLeafs = _a[1], childBreadth = _a[3];\n                collOffset += (childBreadth || 1);\n                matrixResult = newMatrix.slice();\n                leafsResult = newLeafs.slice();\n            });\n        }\n        else if (node.normalizedPath) {\n            leafsResult[colIndex] = { total: cell.total, path: node.normalizedPath };\n        }\n        cell.depth = branchDepth;\n        cell.breadth = branchBreadth;\n        return [\n            matrixResult,\n            leafsResult,\n            branchDepth,\n            branchBreadth\n        ];\n    };\n    var withTotal = function (root, parent, index) {\n        if (parent === void 0) { parent = null; }\n        if (index === void 0) { index = 0; }\n        var hierarchy;\n        var alt = __assign(__assign({}, root), { total: true, hasChildren: false, children: [] });\n        for (var childIndex = 0; childIndex < root.children.length; childIndex++) {\n            var child = withTotal(root.children[childIndex], root, childIndex);\n            hierarchy = hierarchy || child.hierarchy;\n            if (child.hierarchy !== hierarchy\n                && parent\n                && !parent.children.some(function (c) { return c.total && c.name === alt.name; })\n                && !root.total) {\n                alt.children.push(child);\n                root.children.splice(childIndex, 1);\n                childIndex--;\n            }\n        }\n        if (root.children.filter(function (c) { return !c.total; }).length >= 1\n            && parent\n            && !parent.children.some(function (c) { return c.total && c.name === alt.name; })\n            && !root.total) {\n            var childHierarchy = root.children[0].hierarchy;\n            if (root.hierarchy === childHierarchy) {\n                parent.children.splice(index + 1, 0, alt);\n            }\n        }\n        return root;\n    };\n    /**\n     * @hidden\n     */\n    var toTree = function (tuples) {\n        var root = { children: [] };\n        var map = {};\n        var _loop_1 = function (tupleIndex) {\n            var tuple = copy(tuples[tupleIndex]);\n            var key = \"\";\n            var _loop_2 = function (memberIndex) {\n                var member = tuple.members[memberIndex];\n                var parent_1;\n                if (root.children && root.children.length === 0) {\n                    parent_1 = root;\n                }\n                else if (map[key] && !map[key + member.name] && member.levelNum === 0) {\n                    parent_1 = map[key];\n                }\n                else if (map[key + member.parentName] && member.levelNum > 0 && !map[key + member.parentName + member.name]) {\n                    parent_1 = map[key + member.parentName];\n                }\n                else if (!map[key + member.parentName] && member.levelNum > 0 && !map[key + member.parentName + member.name]) {\n                    var parentKey = Object.keys(map)\n                        .find(function (e) { return e.indexOf(member.hierarchy) === 0\n                        && e.lastIndexOf(key + member.parentName) + (key + member.parentName).length === e.length; });\n                    if (parentKey) {\n                        parent_1 = map[parentKey];\n                    }\n                }\n                if (parent_1) {\n                    member.path = generatePath(member, parent_1);\n                    member.normalizedPath = generateNormalizedPath(member, parent_1);\n                    var intruderIndex = parent_1.children.findIndex(function (c) { return c.hierarchy !== parent_1.hierarchy; });\n                    if (intruderIndex !== -1) {\n                        parent_1.children.splice(Math.max(intruderIndex, 0), 0, member);\n                    }\n                    else {\n                        parent_1.children.push(member);\n                    }\n                }\n                key += member.parentName += member.name;\n                if (!map[key]) {\n                    map[key] = member;\n                }\n            };\n            for (var memberIndex = 0; memberIndex < tuple.members.length; memberIndex++) {\n                _loop_2(memberIndex);\n            }\n        };\n        for (var tupleIndex = 0; tupleIndex < tuples.length; tupleIndex++) {\n            _loop_1(tupleIndex);\n        }\n        return copy(withTotal(root));\n    };\n    /**\n     * @hidden\n     */\n    var toData = function (data, columns, rows, breadth, depth) {\n        var result = Array.from(new Array(depth), function () { return ({ cells: Array.from(new Array(breadth), function () { return null; }) }); });\n        var hash = function (names) { return names.join('|'); };\n        var membersNames = function (tuple) { return tuple.members.map(function (m) { return m.name; }); };\n        var columnsIndexes = new Map();\n        var rowsIndexes = new Map();\n        columns.forEach(function (colMembers, idx) { columnsIndexes.set(hash(colMembers.path), idx); });\n        rows.forEach(function (rowMembers, idx) { rowsIndexes.set(hash(rowMembers.path), idx); });\n        data.forEach(function (item) {\n            var colIndex = columnsIndexes.get(hash(membersNames(item.columnTuple)));\n            var rowIndex = rowsIndexes.get(hash(membersNames(item.rowTuple)));\n            if (colIndex !== undefined && rowIndex !== undefined) {\n                if (!result[rowIndex].cells[colIndex]) {\n                    result[rowIndex].row = rows[rowIndex].path;\n                    result[rowIndex].cells[colIndex] = item;\n                }\n            }\n        });\n        return result;\n    };\n    var rotateMatrix = function (matrix, leafs, depth, breadth) {\n        var result = new Array(breadth);\n        for (var colIndex = 0; colIndex < breadth; colIndex++) {\n            for (var rowIndex = 0; rowIndex < depth; rowIndex++) {\n                if (matrix[rowIndex] && matrix[rowIndex].cells[colIndex]) {\n                    var cell = matrix[rowIndex].cells[colIndex];\n                    if (!result[colIndex]) {\n                        result[colIndex] = {\n                            cells: new Array(depth).fill(null)\n                        };\n                    }\n                    result[colIndex].cells[rowIndex] = __assign(__assign({}, cell), { rowSpan: cell.colSpan, colSpan: cell.rowSpan });\n                }\n            }\n        }\n        return [result, leafs, breadth, depth];\n    };\n    /**\n     * @hidden\n     */\n    var toColumns = function (root) {\n        var _a = toMatrix(root), matrix = _a[0], leafs = _a[1], depth = _a[2], breadth = _a[3];\n        for (var colIndex = 0; colIndex < breadth; colIndex++) {\n            var cell = null;\n            for (var rowIndex = 0; rowIndex < depth; rowIndex++) {\n                if (matrix[rowIndex]) {\n                    var next = matrix[rowIndex].cells[colIndex];\n                    if (!next && cell) {\n                        cell.rowSpan = (cell.rowSpan || 1) + 1;\n                    }\n                    if (cell) {\n                        cell.colSpan = cell.breadth || 1;\n                    }\n                    if (next) {\n                        cell = next;\n                    }\n                }\n            }\n        }\n        return [matrix, leafs, depth, breadth];\n    };\n    /**\n     * @hidden\n     */\n    var toRows = function (root) {\n        var _a = toMatrix(root), matrix = _a[0], leafs = _a[1], depth = _a[2], breadth = _a[3];\n        for (var colIndex = 0; colIndex < breadth; colIndex++) {\n            var cell = null;\n            for (var rowIndex = 0; rowIndex < depth; rowIndex++) {\n                if (matrix[rowIndex]) {\n                    var next = matrix[rowIndex].cells[colIndex];\n                    if (!next && cell) {\n                        cell.rowSpan = (cell.rowSpan || 1) + 1;\n                    }\n                    if (cell) {\n                        cell.colSpan = cell.breadth;\n                    }\n                    if (next) {\n                        cell = next;\n                    }\n                }\n            }\n        }\n        return rotateMatrix(matrix, leafs, depth, breadth);\n    };\n    /**\n     * @hidden\n     */\n    function copy(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    var kpiMeasure = function (name, measure, type) {\n        return {\n            hierarchyUniqueName: name,\n            uniqueName: measure,\n            caption: measure,\n            measure: measure,\n            name: measure,\n            type: type,\n            kpi: true\n        };\n    };\n    /**\n     * @hidden\n     */\n    function buildKPIMeasures(node) {\n        var name = node.name;\n        return [\n            kpiMeasure(name, node.value, \"value\"),\n            kpiMeasure(name, node.goal, \"goal\"),\n            kpiMeasure(name, node.status, \"status\"),\n            kpiMeasure(name, node.trend, \"trend\")\n        ];\n    }\n    /**\n     * @hidden\n     */\n    var addKPI = function (data) {\n        var found;\n        var idx = 0;\n        for (; idx < data.length; idx++) {\n            if (data[idx].type === 2) {\n                found = true;\n                break;\n            }\n        }\n        if (found) {\n            data.splice(idx + 1, 0, {\n                caption: \"KPIs\",\n                defaultHierarchy: \"[KPIs]\",\n                name: \"KPIs\",\n                uniqueName: \"[KPIs]\"\n            });\n        }\n    };\n    /**\n     * @hidden\n     */\n    var compareAxisWithField = function (a, b) { return String(a.name) === String([(b.defaultHierarchy\n            ? b.defaultHierarchy\n            : b.uniqueName)]); };\n    /**\n     * @hidden\n     */\n    var compareAxes = function (a, b) { return String(a.name) === String(b.name); };\n\n    /**\n     * @hidden\n     */\n    exports.HEADERS_ACTION = void 0;\n    (function (HEADERS_ACTION) {\n        HEADERS_ACTION[\"toggle\"] = \"HEADERS_ACTION_TOGGLE\";\n        HEADERS_ACTION[\"expand\"] = \"HEADERS_ACTION_EXPAND\";\n        HEADERS_ACTION[\"collapse\"] = \"HEADERS_ACTION_COLLAPSE\";\n    })(exports.HEADERS_ACTION || (exports.HEADERS_ACTION = {}));\n    var findPath = function (node, matchFn, matched) {\n        var result = new Set();\n        node.children.forEach(function (child) {\n            var match = matchFn(child);\n            if (matched) {\n                result.add(String(child.path));\n            }\n            findPath(child, matchFn, (matched || match)).map(function (h) {\n                result.add(h);\n            });\n        });\n        return Array.from(result.values());\n    };\n    /**\n     * @hidden\n     */\n    var headersReducer = function (state, action) {\n        switch (action.type) {\n            case exports.HEADERS_ACTION.toggle: {\n                var existing = state.find((function (s) { return String(s.name) === String(action.payload); }));\n                return headersReducer(state, __assign(__assign({}, action), { type: existing && (existing.expand)\n                        ? exports.HEADERS_ACTION.collapse\n                        : exports.HEADERS_ACTION.expand }));\n            }\n            case exports.HEADERS_ACTION.expand: {\n                var existing_1 = state.find((function (s) { return String(s.name) === String(action.payload); }));\n                if (existing_1 && existing_1.expand === true) {\n                    return state;\n                }\n                else if (existing_1 && (existing_1.expand === false || existing_1.expand === undefined)) {\n                    return state.map(function (s) { return s === existing_1 ? (__assign(__assign({}, existing_1), { expand: true })) : s; });\n                }\n                else {\n                    return __spreadArrays(state, [{ name: action.payload, expand: true }]);\n                }\n            }\n            case exports.HEADERS_ACTION.collapse: {\n                var filtered_1 = findPath(action.tree, function (node) { return !node.total && String(node.path) === String(action.payload); });\n                var newState = __spreadArrays(state).filter(function (h) { return !filtered_1.some(function (f) { return f === String(h.name); }); })\n                    .map(function (h) { return (__assign(__assign({}, h), { expand: Boolean(h.expand) })); })\n                    .map(function (h) { return (String(h.name) === String(action.payload))\n                    ? action.payload.length > 1 ? undefined : { name: action.payload, expand: false }\n                    : h; })\n                    .filter(Boolean);\n                return newState;\n            }\n            default: {\n                return state;\n            }\n        }\n    };\n\n    /**\n     * @hidden\n     */\n    exports.PIVOT_CONFIGURATOR_ACTION = void 0;\n    (function (PIVOT_CONFIGURATOR_ACTION) {\n        // Selection\n        PIVOT_CONFIGURATOR_ACTION[\"toggleSelection\"] = \"PIVOT_CONFIGURATOR_ACTION_TOGGLE_SELECTION\";\n        PIVOT_CONFIGURATOR_ACTION[\"addColumnAxis\"] = \"PIVOT_CONFIGURATOR_ACTION_ADD_COLUMN_AXIS\";\n        PIVOT_CONFIGURATOR_ACTION[\"addColumnAxes\"] = \"PIVOT_CONFIGURATOR_ACTION_ADD_COLUMN_AXES\";\n        PIVOT_CONFIGURATOR_ACTION[\"removeColumnAxis\"] = \"PIVOT_CONFIGURATOR_ACTION_REMOVE_COLUMN_AXIS\";\n        PIVOT_CONFIGURATOR_ACTION[\"removeColumnAxes\"] = \"PIVOT_CONFIGURATOR_ACTION_REMOVE_COLUMN_AXES\";\n        PIVOT_CONFIGURATOR_ACTION[\"addRowAxis\"] = \"PIVOT_CONFIGURATOR_ACTION_ADD_ROW_AXIS\";\n        PIVOT_CONFIGURATOR_ACTION[\"addRowAxes\"] = \"PIVOT_CONFIGURATOR_ACTION_ADD_ROW_AXES\";\n        PIVOT_CONFIGURATOR_ACTION[\"removeRowAxis\"] = \"PIVOT_CONFIGURATOR_ACTION_REMOVE_ROW_AXIS\";\n        PIVOT_CONFIGURATOR_ACTION[\"removeRowAxes\"] = \"PIVOT_CONFIGURATOR_ACTION_REMOVE_ROW_AXES\";\n        PIVOT_CONFIGURATOR_ACTION[\"addMeasureAxis\"] = \"PIVOT_CONFIGURATOR_ACTION_ADD_MEASURE_AXIS\";\n        PIVOT_CONFIGURATOR_ACTION[\"addMeasureAxes\"] = \"PIVOT_CONFIGURATOR_ACTION_ADD_MEASURE_AXES\";\n        PIVOT_CONFIGURATOR_ACTION[\"removeMeasureAxis\"] = \"PIVOT_CONFIGURATOR_ACTION_REMOVE_MEASURE_AXIS\";\n        PIVOT_CONFIGURATOR_ACTION[\"removeMeasureAxes\"] = \"PIVOT_CONFIGURATOR_ACTION_REMOVE_MEASURE_AXES\";\n        // Removal\n        PIVOT_CONFIGURATOR_ACTION[\"remove\"] = \"PIVOT_CONFIGURATOR_ACTION_REMOVE\";\n        // Sort\n        PIVOT_CONFIGURATOR_ACTION[\"setSort\"] = \"PIVOT_CONFIGURATOR_ACTION_SET_SORT\";\n        // Filter\n        PIVOT_CONFIGURATOR_ACTION[\"setFilter\"] = \"PIVOT_CONFIGURATOR_ACTION_SET_FILTER\";\n        PIVOT_CONFIGURATOR_ACTION[\"addFilter\"] = \"PIVOT_CONFIGURATOR_ACTION_ADD_FILTER\";\n        PIVOT_CONFIGURATOR_ACTION[\"changeFilter\"] = \"PIVOT_CONFIGURATOR_ACTION_CHANGE_FILTER\";\n        PIVOT_CONFIGURATOR_ACTION[\"removeFilter\"] = \"PIVOT_CONFIGURATOR_ACTION_REMOVE_FILTER\";\n        // Drag\n        PIVOT_CONFIGURATOR_ACTION[\"setDragItem\"] = \"PIVOT_CONFIGURATOR_ACTION_SET_DRAGITEM\";\n        PIVOT_CONFIGURATOR_ACTION[\"drop\"] = \"PIVOT_CONFIGURATOR_ACTION_DROP\";\n        PIVOT_CONFIGURATOR_ACTION[\"setDropZone\"] = \"PIVOT_CONFIGURATOR_ACTION_SET_DROP_ZONE\";\n        PIVOT_CONFIGURATOR_ACTION[\"setDropTarget\"] = \"PIVOT_CONFIGURATOR_ACTION_SET_DROP_TARGET\";\n        PIVOT_CONFIGURATOR_ACTION[\"setDropDirection\"] = \"PIVOT_CONFIGURATOR_ACTION_SET_DROP_DIRECTION\";\n    })(exports.PIVOT_CONFIGURATOR_ACTION || (exports.PIVOT_CONFIGURATOR_ACTION = {}));\n    /**\n     * @hidden\n     */\n    var configuratorReducer = function (state, action) {\n        var newRows;\n        var newColumns;\n        var newMeasures;\n        var newSort;\n        var newFilter;\n        var newDragitem;\n        var newDropZone;\n        var newDropDirection;\n        var newDropTarget;\n        switch (action.type) {\n            case exports.PIVOT_CONFIGURATOR_ACTION.toggleSelection: {\n                if (Array.isArray(action.payload)) ;\n                else {\n                    var payload_1 = action.payload;\n                    if (payload_1.type === 2 || 'aggregator' in payload_1) {\n                        if (state.measureAxes.some(function (s) { return compareAxisWithField(s, payload_1); })) {\n                            return configuratorReducer(state, __assign(__assign({}, action), { type: exports.PIVOT_CONFIGURATOR_ACTION.removeMeasureAxis }));\n                        }\n                        else {\n                            return configuratorReducer(state, __assign(__assign({}, action), { type: exports.PIVOT_CONFIGURATOR_ACTION.addMeasureAxis }));\n                        }\n                    }\n                    else if (payload_1.type === 'kpi') {\n                        var measures = buildKPIMeasures(payload_1);\n                        if (measures.every(function (m) { return state.measureAxes.some(function (s) { return compareAxisWithField(s, m); }); })) {\n                            return configuratorReducer(state, __assign(__assign({}, action), { type: exports.PIVOT_CONFIGURATOR_ACTION.removeMeasureAxes, payload: measures }));\n                        }\n                        else {\n                            return configuratorReducer(state, __assign(__assign({}, action), { type: exports.PIVOT_CONFIGURATOR_ACTION.addMeasureAxes, payload: measures.filter(function (m) { return !state.measureAxes.some(function (s) { return compareAxisWithField(s, m); }); }) }));\n                        }\n                    }\n                    else if (action.payload.kpi) {\n                        if (state.measureAxes.some(function (s) { return compareAxisWithField(s, payload_1); })) {\n                            return configuratorReducer(state, __assign(__assign({}, action), { type: exports.PIVOT_CONFIGURATOR_ACTION.removeMeasureAxis }));\n                        }\n                        else {\n                            return configuratorReducer(state, __assign(__assign({}, action), { type: exports.PIVOT_CONFIGURATOR_ACTION.addMeasureAxis }));\n                        }\n                    }\n                    else {\n                        if (state.columnAxes.some(function (s) { return compareAxisWithField(s, payload_1); })) {\n                            return configuratorReducer(state, __assign(__assign({}, action), { type: exports.PIVOT_CONFIGURATOR_ACTION.removeColumnAxis }));\n                        }\n                        else if (state.rowAxes.some(function (s) { return compareAxisWithField(s, payload_1); })) {\n                            return configuratorReducer(state, __assign(__assign({}, action), { type: exports.PIVOT_CONFIGURATOR_ACTION.removeRowAxis }));\n                        }\n                        else if ((state.columnAxes && state.columnAxes.length) && (!state.rowAxes || !state.rowAxes.length)) {\n                            return configuratorReducer(state, __assign(__assign({}, action), { type: exports.PIVOT_CONFIGURATOR_ACTION.addRowAxis }));\n                        }\n                        else {\n                            return configuratorReducer(state, __assign(__assign({}, action), { type: exports.PIVOT_CONFIGURATOR_ACTION.addColumnAxis }));\n                        }\n                    }\n                }\n                break;\n            }\n            case exports.PIVOT_CONFIGURATOR_ACTION.addColumnAxis: {\n                newColumns = __spreadArrays((state.columnAxes || []), [\n                    { name: [action.payload.defaultHierarchy || action.payload.uniqueName] }\n                ]);\n                break;\n            }\n            case exports.PIVOT_CONFIGURATOR_ACTION.addColumnAxes: {\n                // TODO;\n                break;\n            }\n            case exports.PIVOT_CONFIGURATOR_ACTION.removeColumnAxis: {\n                newColumns = __spreadArrays((state.columnAxes || []).filter(function (s) { return !compareAxisWithField(s, action.payload); }));\n                break;\n            }\n            case exports.PIVOT_CONFIGURATOR_ACTION.removeColumnAxes: {\n                // TODO;\n                break;\n            }\n            case exports.PIVOT_CONFIGURATOR_ACTION.addRowAxis: {\n                newRows = __spreadArrays((state.rowAxes || []), [\n                    { name: [action.payload.defaultHierarchy || action.payload.uniqueName] }\n                ]);\n                break;\n            }\n            case exports.PIVOT_CONFIGURATOR_ACTION.addRowAxes: {\n                // TODO;\n                break;\n            }\n            case exports.PIVOT_CONFIGURATOR_ACTION.removeRowAxis: {\n                newRows = __spreadArrays((state.rowAxes || []).filter(function (s) { return !compareAxisWithField(s, action.payload); }));\n                break;\n            }\n            case exports.PIVOT_CONFIGURATOR_ACTION.removeRowAxes: {\n                // TODO;\n                break;\n            }\n            case exports.PIVOT_CONFIGURATOR_ACTION.addMeasureAxis: {\n                newMeasures = __spreadArrays((state.measureAxes || []), [\n                    { name: [action.payload.defaultHierarchy || action.payload.uniqueName] }\n                ]);\n                break;\n            }\n            case exports.PIVOT_CONFIGURATOR_ACTION.removeMeasureAxis: {\n                newMeasures = __spreadArrays((state.measureAxes || []).filter(function (s) { return !compareAxisWithField(s, action.payload); }));\n                break;\n            }\n            case exports.PIVOT_CONFIGURATOR_ACTION.addMeasureAxes: {\n                newMeasures = __spreadArrays((state.measureAxes || []), (action.payload || []).map(function (p) { return ({ name: [p.defaultHierarchy || p.uniqueName] }); }));\n                break;\n            }\n            case exports.PIVOT_CONFIGURATOR_ACTION.removeMeasureAxes: {\n                newMeasures = __spreadArrays((state.measureAxes || []).filter(function (s) { return !action.payload.some(function (p) { return compareAxisWithField(s, p); }); }));\n                break;\n            }\n            case exports.PIVOT_CONFIGURATOR_ACTION.remove: {\n                if (state.columnAxes.some(function (s) { return compareAxes(s, action.payload); })) {\n                    newColumns = __spreadArrays(state.columnAxes.filter(function (s) { return !compareAxes(s, action.payload); }));\n                }\n                if (state.rowAxes.some(function (s) { return compareAxes(s, action.payload); })) {\n                    newRows = __spreadArrays(state.rowAxes.filter(function (s) { return !compareAxes(s, action.payload); }));\n                }\n                if (state.measureAxes.some(function (s) { return compareAxes(s, action.payload); })) {\n                    newMeasures = __spreadArrays(state.measureAxes.filter(function (s) { return !compareAxes(s, action.payload); }));\n                }\n                break;\n            }\n            case exports.PIVOT_CONFIGURATOR_ACTION.setDragItem:\n                newDragitem = action.payload;\n                break;\n            case exports.PIVOT_CONFIGURATOR_ACTION.setDropZone:\n                newDropZone = action.payload;\n                break;\n            case exports.PIVOT_CONFIGURATOR_ACTION.setDropTarget:\n                newDropTarget = action.payload;\n                break;\n            case exports.PIVOT_CONFIGURATOR_ACTION.setDropDirection:\n                newDropDirection = action.payload;\n                break;\n            case exports.PIVOT_CONFIGURATOR_ACTION.drop:\n                if (state.dragItem && state.dropZone) {\n                    var currentColumn = state.columnAxes.find(function (s) { return compareAxes(s, action.payload); });\n                    var currentRow = state.rowAxes.find(function (s) { return compareAxes(s, action.payload); });\n                    var currentMeasure = state.measureAxes.find(function (s) { return compareAxes(s, action.payload); });\n                    var current = void 0;\n                    if (currentColumn) {\n                        current = currentColumn;\n                        newColumns = __spreadArrays(state.columnAxes.filter(function (s) { return !compareAxes(s, action.payload); }));\n                    }\n                    if (currentRow) {\n                        current = currentRow;\n                        newRows = __spreadArrays(state.rowAxes.filter(function (s) { return !compareAxes(s, action.payload); }));\n                    }\n                    if (currentMeasure) {\n                        current = currentMeasure;\n                        newMeasures = __spreadArrays(state.measureAxes.filter(function (s) { return !compareAxes(s, action.payload); }));\n                    }\n                    switch (state.dropZone) {\n                        case 'columnAxes': {\n                            newColumns = newColumns || state.columnAxes.slice();\n                            var insertAtIndex = -1;\n                            if (state.dropTarget && state.dropDirection) {\n                                var offset = state.dropDirection\n                                    ? state.dropDirection === 'before'\n                                        ? 0\n                                        : 1\n                                    : 0;\n                                insertAtIndex = newColumns.findIndex(function (c) { return compareAxes(c, state.dropTarget); }) + offset;\n                            }\n                            if (insertAtIndex >= 0) {\n                                newColumns.splice(insertAtIndex, 0, current);\n                            }\n                            else {\n                                newColumns.push(current);\n                            }\n                            break;\n                        }\n                        case 'rowAxes': {\n                            newRows = newRows || state.rowAxes.slice();\n                            var insertAtIndex = -1;\n                            if (state.dropTarget && state.dropDirection) {\n                                var offset = state.dropDirection\n                                    ? state.dropDirection === 'before'\n                                        ? 0\n                                        : 1\n                                    : 0;\n                                insertAtIndex = newRows.findIndex(function (c) { return compareAxes(c, state.dropTarget); }) + offset;\n                            }\n                            if (insertAtIndex >= 0) {\n                                newRows.splice(insertAtIndex, 0, current);\n                            }\n                            else {\n                                newRows.push(current);\n                            }\n                            break;\n                        }\n                        case 'measureAxes': {\n                            newMeasures = newMeasures || state.measureAxes.slice();\n                            var insertAtIndex = -1;\n                            if (state.dropTarget && state.dropDirection) {\n                                var offset = state.dropDirection\n                                    ? state.dropDirection === 'before'\n                                        ? 0\n                                        : 1\n                                    : 0;\n                                insertAtIndex = newMeasures.findIndex(function (c) { return compareAxes(c, state.dropTarget); }) + offset;\n                            }\n                            if (insertAtIndex >= 0) {\n                                newMeasures.splice(insertAtIndex, 0, current);\n                            }\n                            else {\n                                newMeasures.push(current);\n                            }\n                            break;\n                        }\n                    }\n                }\n                newDragitem = null;\n                newDropZone = null;\n                newDropTarget = null;\n                break;\n            case exports.PIVOT_CONFIGURATOR_ACTION.setSort:\n                newSort = action.payload;\n                break;\n            case exports.PIVOT_CONFIGURATOR_ACTION.setFilter:\n                if (Array.isArray(action.payload)) {\n                    newFilter = action.payload;\n                }\n                else {\n                    newFilter = [action.payload];\n                }\n                break;\n            case exports.PIVOT_CONFIGURATOR_ACTION.addFilter:\n                newFilter = (state.filter || []).slice();\n                if (Array.isArray(action.payload)) {\n                    newFilter.push.apply(newFilter, action.payload);\n                }\n                else {\n                    newFilter.push(action.payload);\n                }\n                break;\n            case exports.PIVOT_CONFIGURATOR_ACTION.changeFilter:\n                newFilter = (Array.isArray(action.payload)\n                    ? (state.filter || []).map(function (f) { return action.payload.some(function (a) { return a.field === f.field; })\n                        ? action.payload.find(function (a) { return a.field === f.field; })\n                        : f; })\n                    : (state.filter || []).map(function (f) { return f.field === action.payload.field\n                        ? action.payload\n                        : f; }));\n                break;\n            case exports.PIVOT_CONFIGURATOR_ACTION.removeFilter:\n                newFilter = (state.filter || []).slice();\n                if (Array.isArray(action.payload)) {\n                    newFilter = newFilter.filter(function (f) { return !action.payload.some(function (p) { return p.field === f.field &&\n                        p.operator === f.operator; }); });\n                }\n                else {\n                    newFilter = newFilter.filter(function (f) { return !(f.field === action.payload.field\n                        && f.operator === action.payload.operator); });\n                }\n                break;\n        }\n        return {\n            dragItem: newDragitem,\n            dropTarget: newDropTarget,\n            dropDirection: newDropDirection,\n            dropZone: newDropZone,\n            columnAxes: newColumns,\n            rowAxes: newRows,\n            measureAxes: newMeasures,\n            filter: newFilter,\n            sort: newSort\n        };\n    };\n\n    exports.addKPI = addKPI;\n    exports.buildKPIMeasures = buildKPIMeasures;\n    exports.compareAxes = compareAxes;\n    exports.configuratorReducer = configuratorReducer;\n    exports.createAxisDescriptors = createAxisDescriptors;\n    exports.createDataState = createDataState;\n    exports.createDiscoverBody = createDiscoverBody;\n    exports.createRequestBody = createRequestBody;\n    exports.discoverCommands = discoverCommands;\n    exports.fetchData = fetchData;\n    exports.fetchDiscover = fetchDiscover;\n    exports.headersReducer = headersReducer;\n    exports.parseResponse = parseResponse;\n    exports.setFilter = setFilter;\n    exports.setSort = setSort;\n    exports.toColumns = toColumns;\n    exports.toData = toData;\n    exports.toRows = toRows;\n    exports.toTree = toTree;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n    return exports;\n\n})({});\n\n})();\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3){ (a3 || a2)(); });\n(function(f, define) {\n    define('kendo.pivot.common',[ \"./pivotgrid/common\" ], f);\n})(function() {\n    var __meta__ = { // jshint ignore:line\n        id: \"pivot.common\",\n        name: \"PivotCommon\",\n        category: \"web\",\n        description: \"Common JS for PivotGrid\",\n        depends: [ \"core\" ]\n    };\n\n\treturn window.kendo;\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n\n"],"names":["define","window","kendo","pivotgrid","common","exports","filterFunctionFormats","contains","doesnotcontain","endswith","eq","neq","startswith","operators","in","serializeFilters","filters","cube","command","current","idx","length","serializeExpression","expression","value","String","field","operator","formatString","str","values","_i","arguments","forEach","index","replace","RegExp","serializeMembers","members","measures","sort","parsed","parseDescriptors","expanded","rootNames","getRootNames","root","crossJoinCommands","memberName","names","push","crossJoinCommand","expandMemberDescriptor","name","mapNames","join","concat","measureNames","result","measure","undefined","member","hierarchyName","baseHierarchyPath","some","n","indexOf","child","found","name_1","j","l","expand","rootLength","slice","name_2","rootName","tmp","crossJoin","sortDescriptor","sortDescriptorForMember","dir","length_1","parts","split","pop","shift","createRequestBody","options","_a","columnAxes","_b","rowAxes","_c","measureAxes","_d","_e","filter","measuresRowAxis","measuresAxis","connection","catalog","__assign","Object","assign","t","s","i","p","prototype","hasOwnProperty","call","apply","this","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","throw","return","Symbol","iterator","v","op","TypeError","__spreadArrays","il","r","Array","k","a","jl","parseResponse","response","xmlDoc","DOMParser","parseFromString","axes","from","querySelectorAll","cells","map","cell","fmtValue","getPropertyValue","ordinal","parseInt","getAttribute","columns","tuples","rows","data","axis","translateAxis","indexedData","fill","c","counter","rowTuple","colTuple","columnTuple","node","querySelector","textContent","tuple","memberElements","lNum","hasChildren","caption","children","hierarchy","levelName","levelNum","parentName","discoverCommands","schemaCatalogs","schemaCubes","schemaDimensions","schemaHierarchies","schemaKPIs","schemaLevels","schemaMeasures","schemaMembers","createDiscoverBody","properties","serializeOptions","restrictions","Catalog","parentTagName","capitalize","key","toUpperCase","parseCubes","row","description","type","parseCatalogs","parseMeasures","uniqueName","aggregator","groupName","displayFolder","defaultFormat","parseKPIs","goal","status","trend","statusGraphic","trendGraphic","parseDimensions","defaultHierarchy","parseHierarchies","dimensionUniqueName","origin","defaultMember","parseLevels","orderingProperty","hierarchyUniqueName","parseMembers","levelUniqueName","childrenCardinality","discoverParser","fetchData","fetchOptions","init","stringResponse","headers","Content-Type","method","fetch","url","text","fetchDiscover","createDataState","state","createAxisDescriptors","expandTree","descriptors","keys","JSON","parse","setSort","setFilter","getMaxNesting","set","Set","add","size","getMaxExpansion","generateNormalizedPath","parent","normalizedPath","Boolean","generatePath","path","toMatrix","rowIndex","colIndex","maxDepth","maxBreadth","matrix","leafs","branchDepth","branchBreadth","depth","breadth","matrixResult","leafsResult","findIndex","level","inject","total","shiftedRow","splice","collOffset","newMatrix","newLeafs","childBreadth","withTotal","alt","childIndex","childHierarchy","toTree","_loop_1","tupleIndex","copy","_loop_2","memberIndex","parent_1","parentKey","find","lastIndexOf","intruderIndex","Math","max","toData","hash","membersNames","m","columnsIndexes","Map","rowsIndexes","colMembers","rowMembers","item","get","rotateMatrix","rowSpan","colSpan","toColumns","toRows","obj","stringify","kpiMeasure","kpi","buildKPIMeasures","addKPI","compareAxisWithField","b","compareAxes","HEADERS_ACTION","findPath","matchFn","matched","match","h","headersReducer","action","toggle","existing","payload","collapse","existing_1","filtered_1","tree","newState","PIVOT_CONFIGURATOR_ACTION","configuratorReducer","newRows","newColumns","newMeasures","newSort","newFilter","newDragitem","newDropZone","newDropDirection","newDropTarget","toggleSelection","isArray","payload_1","removeMeasureAxis","addMeasureAxis","every","removeMeasureAxes","addMeasureAxes","removeColumnAxis","removeRowAxis","addRowAxis","addColumnAxis","addColumnAxes","removeColumnAxes","addRowAxes","removeRowAxes","remove","setDragItem","setDropZone","setDropTarget","setDropDirection","drop","dragItem","dropZone","currentColumn","currentRow","currentMeasure","insertAtIndex","dropTarget","dropDirection","offset","addFilter","changeFilter","removeFilter","defineProperty","amd","a1","a2","a3","__meta__","id","category","depends"],"mappings":"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"}