{"version":3,"file":"kendo.scheduler.view.min.js","sources":["kendo.scheduler.view.js"],"sourcesContent":["(function(f, define) {\n    define('kendo.scheduler.view',[ \"kendo.core\" ], f);\n})(function() {\n\nvar __meta__ = { // jshint ignore:line\n    id: \"scheduler.view\",\n    name: \"Scheduler View\",\n    category: \"web\",\n    description: \"The Scheduler Common View\",\n    depends: [ \"core\" ],\n    hidden: true\n};\n    kendo.ui.scheduler = {};\n/* jshint eqnull: true */\n(function($) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        getDate = kendo.date.getDate,\n        Widget = ui.Widget,\n        outerHeight = kendo._outerHeight,\n        keys = kendo.keys,\n        NS = \".kendoSchedulerView\",\n        INVERSE_COLOR_CLASS = \"k-event-inverse\",\n        MIN_HORIZONTAL_SCROLL_SIZE = 1024,\n        math = Math,\n        SPACE = \" \";\n\n    function levels(values, key) {\n        var result = [];\n\n        function collect(depth, values) {\n            values = values[key];\n\n            if (values) {\n                var level = result[depth] = result[depth] || [];\n\n                for (var idx = 0; idx < values.length; idx++) {\n                    level.push(values[idx]);\n                    collect(depth + 1, values[idx]);\n                }\n            }\n        }\n\n        collect(0, values);\n\n        return result;\n    }\n\n    function table(tableRows, className) {\n        if (!tableRows.length) {\n            return \"\";\n        }\n\n        return '<table role=\"presentation\" class=\"' + kendo.trim('k-scheduler-table ' + (className || \"\")) + '\">' +\n               '<tr>' +\n                    tableRows.join(\"</tr><tr>\") +\n               '</tr>' +\n               '</table>';\n    }\n\n    function allDayTable(tableRows, className) {\n        if (!tableRows.length) {\n            return \"\";\n        }\n\n        return \"<div style='position:relative'>\" + table(tableRows, className) + \"</div>\";\n    }\n\n    function timesHeader(columnLevelCount, allDaySlot, rowCount) {\n        var tableRows = [];\n\n        if (rowCount > 0) {\n            for (var idx = 0; idx < columnLevelCount; idx++) {\n                tableRows.push(\"<th>&#8203;</th>\");\n            }\n        }\n\n        if (allDaySlot) {\n            tableRows.push('<th class=\"k-scheduler-times-all-day\">' + allDaySlot.text + '</th>');\n        }\n\n        if (rowCount < 1) {\n           return $();\n        }\n\n        return $('<div class=\"k-scheduler-times\">' + table(tableRows) + '</div>');\n    }\n\n    function content() {\n        return $(\n            '<div class=\"k-scheduler-content\">' +\n                '<table role=\"presentation\" class=\"k-scheduler-table\"></table>' +\n            '</div>'\n        );\n    }\n    var HINT = '<div class=\"k-marquee k-scheduler-marquee\">' +\n                    '<div class=\"k-marquee-color\"></div>' +\n                    '<div class=\"k-marquee-text\">' +\n                        '<div class=\"k-label-top\"></div>' +\n                        '<div class=\"k-label-bottom\"></div>' +\n                    '</div>' +\n                '</div>';\n\n\n    var ResourceView = kendo.Class.extend({\n        init: function(index, isRtl, enforceAllDaySlot) {\n            this._index = index;\n            this._timeSlotCollections = [];\n            this._daySlotCollections = [];\n            this._isRtl = isRtl;\n            this._enforceAllDaySlot = enforceAllDaySlot;\n        },\n\n        addTimeSlotCollection: function(startDate, endDate) {\n            return this._addCollection(startDate, endDate, this._timeSlotCollections);\n        },\n\n        addDaySlotCollection: function(startDate, endDate) {\n            return this._addCollection(startDate, endDate, this._daySlotCollections);\n        },\n\n        _addCollection: function(startDate, endDate, collections) {\n            var collection = new SlotCollection(startDate, endDate, this._index, collections.length);\n\n            collections.push(collection);\n\n            return collection;\n        },\n\n        timeSlotCollectionCount: function() {\n            return this._timeSlotCollections.length;\n        },\n\n        daySlotCollectionCount: function() {\n            return this._daySlotCollections.length;\n        },\n\n        daySlotByPosition: function(x, y, byDate) {\n            return this._slotByPosition(x, y, this._daySlotCollections, byDate);\n        },\n\n        timeSlotByPosition: function(x, y, byDate) {\n            return this._slotByPosition(x, y, this._timeSlotCollections, byDate);\n        },\n\n        _slotByPosition: function(x, y, collections, byDate) {\n           for (var collectionIndex = 0; collectionIndex < collections.length; collectionIndex++) {\n               var collection = collections[collectionIndex];\n\n               for (var slotIndex = 0; slotIndex < collection.count(); slotIndex++) {\n                   var slot = collection.at(slotIndex);\n                   var width = slot.offsetWidth;\n                   var height = slot.offsetHeight;\n                   var nextSlot;\n\n                   var horizontalEnd = slot.offsetLeft + width;\n                   var verticalEnd = slot.offsetTop + height;\n\n                   if (!byDate) {\n                        nextSlot = collection.at(slotIndex + 1);\n                   }\n\n                   if (nextSlot) {\n                       if (nextSlot.offsetLeft != slot.offsetLeft) {\n                           if (this._isRtl) {\n                               horizontalEnd = slot.offsetLeft + (slot.offsetLeft - nextSlot.offsetLeft);\n                           } else {\n                               horizontalEnd = nextSlot.offsetLeft;\n                           }\n                       } else {\n                           verticalEnd = nextSlot.offsetTop;\n                       }\n                   }\n\n                   if (x >= slot.offsetLeft && x < horizontalEnd &&\n                       y >= slot.offsetTop && y < verticalEnd) {\n                       return slot;\n                   }\n               }\n           }\n        },\n\n        refresh: function() {\n            var collectionIndex;\n\n            for (collectionIndex = 0; collectionIndex < this._daySlotCollections.length; collectionIndex++) {\n                this._daySlotCollections[collectionIndex].refresh();\n            }\n\n            for (collectionIndex = 0; collectionIndex < this._timeSlotCollections.length; collectionIndex++) {\n                this._timeSlotCollections[collectionIndex].refresh();\n            }\n        },\n\n        timeSlotRanges: function(startTime, endTime) {\n            var collections = this._timeSlotCollections;\n            var start = this._startSlot(startTime, collections);\n            var firstIndex, lastIndex;\n\n            if (!start.inRange && startTime >= start.slot.end) {\n                firstIndex = start.slot.collectionIndex + 1;\n                start = null;\n            }\n\n            var end = start;\n\n            if (startTime < endTime) {\n                end = this._endSlot(endTime, collections);\n            }\n\n            if (end && !end.inRange && endTime <= end.slot.start) {\n                lastIndex = end.slot.collectionIndex;\n\n                if (endTime === end.slot.start && ((start && lastIndex > start.slot.collectionIndex) || (lastIndex > firstIndex))) {\n                    lastIndex -= 1;\n                }\n\n                end = null;\n            }\n\n            if (start === null && end === null) {\n                if (endTime - startTime < kendo.date.MS_PER_DAY) {\n                    return [];\n                } else {\n                    start = {\n                        inRange: true,\n                        slot: collections[firstIndex].first()\n                    };\n\n                    end = {\n                        inRange: true,\n                        slot: collections[lastIndex].last()\n                    };\n                }\n            }\n\n            if (start === null) {\n                if (end.slot.end <= startTime) {\n                    return [];\n                }\n\n                start = {\n                    inRange: true,\n                    slot: (collections[firstIndex] || collections[end.slot.collectionIndex]).first()\n                };\n            }\n\n            if (end === null) {\n                if (start.slot.start >= endTime) {\n                    return [];\n                }\n\n                end = {\n                    inRange: true,\n                    slot: (collections[lastIndex] || collections[start.slot.collectionIndex]).last()\n                };\n            }\n\n            return this._continuousRange(TimeSlotRange, collections, start, end);\n        },\n\n        daySlotRanges: function(startTime, endTime, isAllDay) {\n            var collections = this._daySlotCollections;\n\n            var start = this._startSlot(startTime, collections, isAllDay);\n\n            if (!start.inRange && startTime >= start.slot.end) {\n                start = null;\n            }\n\n            var end = start;\n\n            if (startTime < endTime) {\n                end = this._endSlot(endTime, collections, isAllDay);\n            }\n\n            if (end && !end.inRange && endTime <= end.slot.start) {\n                end = null;\n            }\n\n            if (start === null && end === null) {\n                return [];\n            }\n\n            if (start === null) {\n                if (end.slot.end <= startTime) {\n                    return [];\n                }\n\n                do {\n                    startTime += kendo.date.MS_PER_DAY;\n                    start = this._startSlot(startTime, collections, isAllDay);\n                } while (!start.inRange && startTime >= start.slot.end);\n            }\n\n            if (end === null) {\n                if (start.slot.start >= endTime) {\n                    return [];\n                }\n\n                do {\n                    endTime -= kendo.date.MS_PER_DAY;\n                    end = this._endSlot(endTime, collections, isAllDay);\n                } while (!end.inRange && endTime <= end.slot.start);\n            }\n\n            return this._continuousRange(DaySlotRange, collections, start, end);\n        },\n\n        _continuousRange: function(range, collections, start, end) {\n            var startSlot = start.slot;\n            var endSlot = end.slot;\n\n            var startIndex = startSlot.collectionIndex;\n            var endIndex = endSlot.collectionIndex;\n\n            var ranges = [];\n\n            for (var collectionIndex = startIndex; collectionIndex <= endIndex; collectionIndex++) {\n                var collection = collections[collectionIndex];\n\n                var first = collection.first();\n                var last = collection.last();\n                var head = false;\n                var tail = false;\n\n                if (collectionIndex == startIndex) {\n                    tail = !start.inRange;\n                }\n\n                if (collectionIndex == endIndex) {\n                    head = !end.inRange;\n                }\n\n                if (first.start < startSlot.start) {\n                    first = startSlot;\n                }\n\n                if (last.start > endSlot.start) {\n                    last = endSlot;\n                }\n\n                if (startIndex < endIndex) {\n                    if (collectionIndex == startIndex) {\n                        head = true;\n                    } else if (collectionIndex == endIndex) {\n                        tail = true;\n                    } else {\n                        head = tail = true;\n                    }\n                }\n\n                ranges.push(new range({\n                    start: first,\n                    end: last,\n                    collection: collection,\n                    head: head,\n                    tail: tail\n                }));\n            }\n\n            return ranges;\n        },\n\n        slotRanges: function(event, isDay) {\n            var startTime = event._startTime || kendo.date.toUtcTime(event.start);\n            var endTime = event._endTime || kendo.date.toUtcTime(event.end);\n\n            if (isDay === undefined) {\n                if (this._enforceAllDaySlot) {\n                    isDay = event.isMultiDay();\n                } else {\n                    isDay = event.isAllDay;\n                }\n            }\n\n            if (isDay) {\n                return this.daySlotRanges(startTime, endTime, event.isAllDay);\n            }\n\n            return this.timeSlotRanges(startTime, endTime);\n        },\n\n        ranges: function(startTime, endTime, isDay, isAllDay) {\n            if (typeof startTime != \"number\") {\n                startTime = kendo.date.toUtcTime(startTime);\n            }\n\n            if (typeof endTime != \"number\") {\n                endTime = kendo.date.toUtcTime(endTime);\n            }\n\n            if (isDay) {\n                return this.daySlotRanges(startTime, endTime, isAllDay);\n            }\n\n            return this.timeSlotRanges(startTime, endTime);\n        },\n\n        _startCollection: function(date, collections) {\n            for (var collectionIndex = 0; collectionIndex < collections.length; collectionIndex++) {\n                var collection = collections[collectionIndex];\n\n                if (collection.startInRange(date)) {\n                    return collection;\n                }\n            }\n\n            return null;\n        },\n\n        _endCollection: function(date, collections, isAllDay) {\n            for (var collectionIndex = 0; collectionIndex < collections.length; collectionIndex++) {\n                var collection = collections[collectionIndex];\n\n                if (collection.endInRange(date, isAllDay)) {\n                    return collection;\n                }\n            }\n\n            return null;\n        },\n\n        _getCollections: function(isDay) {\n            return isDay ? this._daySlotCollections : this._timeSlotCollections;\n        },\n\n        continuousSlot: function(slot, reverse) {\n            var pad = reverse ? -1 : 1;\n            var collections = this._getCollections(slot.isDaySlot);\n            var collection = collections[slot.collectionIndex + pad];\n\n            return collection ? collection[reverse ? \"last\" : \"first\"]() : undefined;\n        },\n\n        firstSlot: function() {\n            var collections = this._getCollections(this.daySlotCollectionCount());\n\n            return collections[0].first();\n        },\n\n        lastSlot: function() {\n            var collections = this._getCollections(this.daySlotCollectionCount());\n\n            return collections[collections.length - 1].last();\n        },\n\n        upSlot: function(slot, keepCollection, groupByDateVertically) {\n            var that = this;\n            var moveToDaySlot = function(isDaySlot, collectionIndex, index) {\n                var isFirstCell = index === 0;\n\n                if (!keepCollection && !isDaySlot && isFirstCell && that.daySlotCollectionCount()) {\n                    return that._daySlotCollections[0].at(collectionIndex);\n                }\n            };\n\n            if (!this.timeSlotCollectionCount()) {\n                keepCollection = true;\n            }\n\n            return this._verticalSlot(slot, -1, moveToDaySlot, groupByDateVertically);\n        },\n\n        downSlot: function(slot, keepCollection, groupByDateVertically) {\n            var that = this;\n            var moveToTimeSlot = function(isDaySlot, collectionIndex, index) {\n                if (!keepCollection && isDaySlot && that.timeSlotCollectionCount()) {\n                    return that._timeSlotCollections[index].at(0);\n                }\n            };\n\n            if (!this.timeSlotCollectionCount()) {\n                keepCollection = true;\n            }\n\n            return this._verticalSlot(slot, 1, moveToTimeSlot, groupByDateVertically);\n        },\n\n        leftSlot: function(slot, groupByDateVertically) {\n            return this._horizontalSlot(slot, -1, groupByDateVertically);\n        },\n\n        rightSlot: function(slot, groupByDateVertically) {\n            return this._horizontalSlot(slot, 1, groupByDateVertically);\n        },\n\n        _horizontalSlot: function(slot, step, groupByDateVertically) {\n            var index = slot.index;\n            var isDaySlot = slot.isDaySlot;\n            var collectionIndex = slot.collectionIndex;\n            var collections = this._getCollections(isDaySlot);\n\n            isDaySlot = groupByDateVertically ? false : isDaySlot;\n\n            if (isDaySlot) {\n                index += step;\n            } else {\n                collectionIndex += step;\n            }\n\n            var collection = collections[collectionIndex];\n\n            return collection ? collection.at(index) : undefined;\n        },\n\n        _verticalSlot: function(slot, step, swapCollection, groupByDateVertically) {\n            var index = slot.index;\n            var isDaySlot = slot.isDaySlot;\n            var collectionIndex = slot.collectionIndex;\n            var collections = this._getCollections(isDaySlot);\n\n            slot = swapCollection(isDaySlot, collectionIndex, index);\n            if (slot) {\n                return slot;\n            }\n\n            isDaySlot = groupByDateVertically ? false : isDaySlot;\n\n            if (isDaySlot) {\n                collectionIndex += step;\n            } else {\n                index += step;\n            }\n\n            var collection = collections[collectionIndex];\n\n            return collection ? collection.at(index) : undefined;\n        },\n\n        _collection: function(index, multiday) {\n            var collections = multiday ? this._daySlotCollections : this._timeSlotCollections;\n\n            return collections[index];\n        },\n\n        _startSlot: function(time, collections, isAllDay) {\n            var collection = this._startCollection(time, collections);\n            var inRange = true;\n            var index = 0;\n\n            if (!collection) {\n                collection = collections[index];\n\n                while (index < collections.length - 1 && collection._start < time) {\n                    index++;\n                    collection = collections[index];\n                }\n\n                inRange = false;\n            }\n\n            var slot = collection.slotByStartDate(time, isAllDay);\n\n            if (!slot) {\n                slot = collection.first();\n                inRange = false;\n            }\n\n            return {\n                slot: slot,\n                inRange: inRange\n            };\n        },\n\n        _endSlot: function(time, collections, isAllDay) {\n            var collection = this._endCollection(time, collections, isAllDay);\n            var inRange = true;\n            var index = collections.length - 1;\n\n            if (!collection) {\n                collection = collections[index];\n\n                while (index > 0 && collection._start > time) {\n                    index--;\n                    collection = collections[index];\n                }\n\n                inRange = false;\n            }\n\n            var slot = collection.slotByEndDate(time, isAllDay);\n\n            if (!slot) {\n                if (time <= collection.first().start) {\n                    slot = collection.first();\n                } else {\n                    slot = collection.last();\n                }\n\n                inRange = false;\n            }\n\n            return {\n                slot: slot,\n                inRange: inRange\n            };\n        },\n\n        getSlotCollection: function(index, isDay) {\n            return this[isDay ? \"getDaySlotCollection\" : \"getTimeSlotCollection\"](index);\n        },\n\n        getTimeSlotCollection: function(index) {\n            return this._timeSlotCollections[index];\n        },\n\n        getDaySlotCollection: function(index) {\n            return this._daySlotCollections[index];\n        }\n    });\n\n    var SlotRange = kendo.Class.extend({\n        init: function(options) {\n            $.extend(this, options);\n        },\n\n        innerHeight: function() {\n            var collection = this.collection;\n\n            var startIndex = this.start.index;\n\n            var endIndex = this.end.index;\n\n            var result = 0;\n\n            for (var slotIndex = startIndex; slotIndex <= endIndex; slotIndex++) {\n               result += collection.at(slotIndex).offsetHeight;\n            }\n\n            return result;\n        },\n\n        events: function() {\n            return this.collection.events();\n        },\n\n        addEvent: function(event) {\n            this.events().push(event);\n        },\n\n        startSlot: function() {\n            if (this.start.offsetLeft > this.end.offsetLeft) {\n                return this.end;\n            }\n            return this.start;\n        },\n\n        endSlot: function() {\n            if (this.start.offsetLeft > this.end.offsetLeft) {\n                return this.start;\n            }\n            return this.end;\n        }\n    });\n\n    var TimeSlotRange = SlotRange.extend({\n        innerHeight: function() {\n            var collection = this.collection;\n\n            var startIndex = this.start.index;\n\n            var endIndex = this.end.index;\n\n            var result = 0;\n\n            for (var slotIndex = startIndex; slotIndex <= endIndex; slotIndex++) {\n               result += collection.at(slotIndex).offsetHeight;\n            }\n\n            return result;\n        },\n\n        outerRect: function(start, end, snap) {\n            return this._rect(\"offset\", start, end, snap);\n        },\n\n        _rect: function(property, start, end, snap) {\n            var top;\n            var bottom;\n            var left;\n            var right;\n            var startSlot = this.start;\n            var endSlot = this.end;\n            var isRtl = kendo.support.isRtl(startSlot.element);\n\n            if (typeof start != \"number\") {\n                start = kendo.date.toUtcTime(start);\n            }\n\n            if (typeof end != \"number\") {\n                end = kendo.date.toUtcTime(end);\n            }\n\n            if (snap) {\n                top = startSlot.offsetTop;\n                bottom = endSlot.offsetTop + endSlot[property + \"Height\"];\n                if (isRtl) {\n                    left = endSlot.offsetLeft;\n                    right = startSlot.offsetLeft + startSlot[property + \"Width\"];\n                } else {\n                    left = startSlot.offsetLeft;\n                    right = endSlot.offsetLeft + endSlot[property + \"Width\"];\n                }\n            } else {\n                var startOffset = start - startSlot.start;\n\n                if (startOffset < 0) {\n                    startOffset = 0;\n                }\n\n                var startSlotDuration = startSlot.end - startSlot.start;\n\n                top = startSlot.offsetTop + startSlot[property + \"Height\"] * startOffset / startSlotDuration;\n\n                var endOffset = endSlot.end - end;\n\n                if (endOffset < 0) {\n                    endOffset = 0;\n                }\n\n                var endSlotDuration = endSlot.end - endSlot.start;\n\n                bottom = endSlot.offsetTop + endSlot[property + \"Height\"] - endSlot[property + \"Height\"] * endOffset / endSlotDuration;\n\n                if (isRtl) {\n                    left = Math.round(endSlot.offsetLeft + endSlot[property + \"Width\"] * endOffset / endSlotDuration);\n                    right = Math.round(startSlot.offsetLeft + startSlot[property + \"Width\"] - startSlot[property + \"Width\"] * startOffset / startSlotDuration);\n                } else {\n                    left = Math.round(startSlot.offsetLeft + startSlot[property + \"Width\"] * startOffset / startSlotDuration);\n                    right = Math.round(endSlot.offsetLeft + endSlot[property + \"Width\"] - endSlot[property + \"Width\"] * endOffset / endSlotDuration);\n                }\n            }\n\n            return {\n                top: top,\n                bottom: bottom,\n                //first column has no left border\n                left: left === 0 ? left : left + 1,\n                right: right\n            };\n        },\n\n        innerRect: function(start, end, snap) {\n            return this._rect(\"client\", start, end, snap);\n        }\n    });\n\n    var DaySlotRange = SlotRange.extend({\n        innerWidth: function() {\n            var collection = this.collection;\n\n            var startIndex = this.start.index;\n\n            var endIndex = this.end.index;\n\n            var result = 0;\n\n            var width = startIndex !== endIndex ? \"offsetWidth\" : \"clientWidth\";\n\n            for (var slotIndex = startIndex; slotIndex <= endIndex; slotIndex++) {\n               result += collection.at(slotIndex)[width];\n            }\n\n            return result;\n        }\n    });\n\n    var SlotCollection = kendo.Class.extend({\n        init: function(startDate, endDate, groupIndex, collectionIndex) {\n            this._slots = [];\n\n            this._events = [];\n\n            this._start = kendo.date.toUtcTime(startDate);\n\n            this._end = kendo.date.toUtcTime(endDate);\n\n            this._groupIndex = groupIndex;\n\n            this._collectionIndex = collectionIndex;\n        },\n        refresh: function() {\n            for (var slotIndex = 0; slotIndex < this._slots.length; slotIndex++) {\n                this._slots[slotIndex].refresh();\n            }\n        },\n\n        startInRange: function(date) {\n            return this._start <= date && date < this._end;\n        },\n\n        endInRange: function(date, isAllDay) {\n            var end = isAllDay ? date < this._end : date <= this._end;\n            return this._start <= date && end;\n        },\n\n        slotByStartDate: function(date) {\n            var time = date;\n\n            if (typeof time != \"number\") {\n                time = kendo.date.toUtcTime(date);\n            }\n\n            for (var slotIndex = 0; slotIndex < this._slots.length; slotIndex++) {\n                var slot = this._slots[slotIndex];\n\n                if (slot.startInRange(time)) {\n                    return slot;\n                }\n            }\n\n            return null;\n        },\n\n        slotByEndDate: function(date, allday) {\n            var time = date;\n\n            if (typeof time != \"number\") {\n                time = kendo.date.toUtcTime(date);\n            }\n\n            if (allday) {\n                return this.slotByStartDate(date, false);\n            }\n\n            for (var slotIndex = 0; slotIndex < this._slots.length; slotIndex++) {\n                var slot = this._slots[slotIndex];\n\n                if (slot.endInRange(time)) {\n                    return slot;\n                }\n            }\n\n            return null;\n        },\n\n        count: function() {\n            return this._slots.length;\n        },\n        events: function() {\n            return this._events;\n        },\n        addTimeSlot: function(element, start, end, isHorizontal) {\n            var slot = new TimeSlot(element, start, end, this._groupIndex, this._collectionIndex, this._slots.length, isHorizontal);\n\n            this._slots.push(slot);\n        },\n        addDaySlot: function(element, start, end, eventCount) {\n            var slot = new DaySlot(element, start, end, this._groupIndex, this._collectionIndex, this._slots.length, eventCount);\n\n            this._slots.push(slot);\n        },\n        first: function() {\n            return this._slots[0];\n        },\n        last: function() {\n            return this._slots[this._slots.length - 1];\n        },\n        at: function(index) {\n            return this._slots[index];\n        }\n    });\n\n    var Slot = kendo.Class.extend({\n        init: function(element, start, end, groupIndex, collectionIndex, index) {\n            this.element = element;\n            this.clientWidth = element.clientWidth;\n            this.clientHeight = element.clientHeight;\n            this.offsetWidth = element.offsetWidth;\n            this.offsetHeight = element.offsetHeight;\n            this.offsetTop = element.offsetTop;\n            this.offsetLeft = element.offsetLeft;\n\n            this.start = start;\n            this.end = end;\n            this.element = element;\n            this.groupIndex = groupIndex;\n            this.collectionIndex = collectionIndex;\n            this.index = index;\n            this.isDaySlot = false;\n        },\n\n        refresh: function() {\n            var element = this.element;\n\n            this.clientWidth = element.clientWidth;\n            this.clientHeight = element.clientHeight;\n            this.offsetWidth = element.offsetWidth;\n            this.offsetHeight = element.offsetHeight;\n            this.offsetTop = element.offsetTop;\n            this.offsetLeft = element.offsetLeft;\n        },\n\n        startDate: function() {\n            return kendo.timezone.toLocalDate(this.start);\n        },\n\n        endDate: function() {\n            return kendo.timezone.toLocalDate(this.end);\n        },\n\n        startInRange: function(date) {\n            return this.start <= date && date < this.end;\n        },\n\n        endInRange: function(date) {\n            return this.start < date && date <= this.end;\n        },\n\n        startOffset: function() {\n           return this.start;\n        },\n\n        endOffset: function() {\n            return this.end;\n        }\n    });\n\n    var TimeSlot = Slot.extend({\n        init: function(element, start, end, groupIndex, collectionIndex, index, isHorizontal) {\n            Slot.fn.init.apply(this, arguments);\n\n            this.isHorizontal = isHorizontal ? true : false;\n        },\n\n        offsetX: function(rtl, offset) {\n            if (rtl) {\n                return this.offsetLeft + offset;\n            } else {\n                return this.offsetLeft + offset;\n            }\n        },\n\n        startInRange: function(date) {\n            return this.start <= date && date < this.end;\n        },\n\n        endInRange: function(date) {\n            return this.start < date && date <= this.end;\n        },\n\n        startOffset: function(x, y, snap) {\n            if (snap) {\n                return this.start;\n            }\n\n            var offset = $(this.element).offset();\n\n            var duration = this.end - this.start;\n            var difference;\n            var time;\n\n            if (this.isHorizontal) {\n                //need update\n                var isRtl = kendo.support.isRtl(this.element);\n                difference = x - offset.left;\n                time = Math.floor(duration * ( difference / this.offsetWidth));\n\n                if (isRtl) {\n                    return this.start + duration - time;\n                }\n            } else {\n                difference = y - offset.top;\n                time = Math.floor(duration * ( difference / this.offsetHeight));\n            }\n\n            return this.start + time;\n        },\n\n        endOffset: function(x, y, snap) {\n            if (snap) {\n                return this.end;\n            }\n\n            var offset = $(this.element).offset();\n\n            var duration = this.end - this.start;\n            var difference;\n            var time;\n\n            if (this.isHorizontal) {\n                //need update\n                var isRtl = kendo.support.isRtl(this.element);\n                difference = x - offset.left;\n                time = Math.floor(duration * ( difference / this.offsetWidth));\n\n                if (isRtl) {\n                    return this.start + duration - time;\n                }\n            } else {\n                difference = y - offset.top;\n                time = Math.floor(duration * ( difference / this.offsetHeight));\n            }\n\n            return this.start + time;\n        }\n    });\n\n    var DaySlot = Slot.extend({\n        init: function(element, start, end, groupIndex, collectionIndex, index, eventCount) {\n            Slot.fn.init.apply(this, arguments);\n\n            this.eventCount = eventCount;\n            this.isDaySlot = true;\n\n            if (this.element.children.length) {\n                var firstChild = this.element.children[0];\n\n                this.firstChildHeight = firstChild.offsetHeight;\n                this.firstChildTop = firstChild.offsetTop;\n            } else {\n                this.firstChildHeight = 3;\n                this.firstChildTop = 0;\n            }\n        },\n\n        startDate: function() {\n            var date = new Date(this.start);\n\n            return kendo.timezone.apply(date, \"Etc/UTC\");\n        },\n\n        endDate: function() {\n            var date = new Date(this.end);\n\n            return kendo.timezone.apply(date, \"Etc/UTC\");\n        },\n\n        startInRange: function(date) {\n            return this.start <= date && date < this.end;\n        },\n\n        endInRange: function(date) {\n            return this.start < date && date <= this.end;\n        }\n    });\n\n    var scrollbarWidth;\n    function scrollbar() {\n        scrollbarWidth = scrollbarWidth ? scrollbarWidth : kendo.support.scrollbar();\n        return scrollbarWidth;\n    }\n\n    kendo.ui.SchedulerView = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, $.extend({}, this.options, options));\n\n            this._normalizeOptions();\n            this._scrollbar = scrollbar();\n            this._isRtl = kendo.support.isRtl(element);\n            this._resizeHint = $();\n            this._moveHint = $();\n            this._cellId = kendo.guid();\n            this._resourcesForGroups();\n            this._selectedSlots = [];\n            this.element.attr(\"role\", \"application\");\n        },\n\n        options: {\n            messages: {\n                ariaEventLabel: {\n                    on: \"on\",\n                    at: \"at\",\n                    to: \"to\",\n                    allDay: \"(all day)\",\n                    prefix: \"\"\n                }\n            }\n        },\n\n        visibleEndDate: function() {\n            return this.endDate();\n        },\n\n        _normalizeOptions: function() {\n            var options = this.options;\n\n            if (options.startTime) {\n                options.startTime.setMilliseconds(0);\n            }\n\n            if (options.endTime) {\n                options.endTime.setMilliseconds(0);\n            }\n\n            if (options.workDayStart) {\n                options.workDayStart.setMilliseconds(0);\n            }\n\n            if (options.workDayEnd) {\n                options.workDayEnd.setMilliseconds(0);\n            }\n        },\n\n        _isMobile: function() {\n            var options = this.options;\n            return (options.mobile === true && kendo.support.mobileOS) || options.mobile === \"phone\" || options.mobile === \"tablet\";\n        },\n\n        _addResourceView: function() {\n            var resourceView = new ResourceView(this.groups.length, this._isRtl, this.options.enforceAllDaySlot);\n\n            this.groups.push(resourceView);\n\n            return resourceView;\n        },\n\n        dateForTitle: function() {\n            return kendo.format(this.options.selectedDateFormat, this.startDate(), this.endDate());\n        },\n\n        shortDateForTitle: function() {\n            return kendo.format(this.options.selectedShortDateFormat, this.startDate(), this.endDate());\n        },\n\n        mobileDateForTitle: function() {\n            return kendo.format(this.options.selectedMobileDateFormat || this.options.selectedShortDateFormat, this.startDate(), this.endDate());\n        },\n\n        _changeGroup: function(selection, previous) {\n            var method = previous ? \"prevGroupSlot\" : \"nextGroupSlot\";\n            var slot = this[method](selection.start, selection.groupIndex, selection.isAllDay);\n\n            if (slot) {\n                selection.groupIndex += previous ? -1 : 1;\n            }\n\n            if (this._isGroupedByDate() && !slot) {\n               selection.groupIndex = previous ? this.groups.length - 1 : 0;\n            }\n\n            return slot;\n        },\n\n        _changeDate: function(selection, slot, previous) {\n            var group = this.groups[selection.groupIndex];\n            var collections, index;\n\n            if (previous) {\n                  collections = group._getCollections(false);\n                  index = group.daySlotCollectionCount() ? slot.index - 1 : slot.collectionIndex - 1;\n\n                  if (index >= 0) {\n                      return collections[index]._slots[collections[index]._slots.length - 1];\n                  }\n              } else {\n                  collections = group._getCollections(group.daySlotCollectionCount());\n                  index = group.daySlotCollectionCount() ? 0 : slot.collectionIndex + 1;\n                  var slotIndex = group.daySlotCollectionCount() ? slot.collectionIndex + 1 : 0;\n\n                  if (collections[index] && collections[index]._slots[slotIndex]) {\n                      return collections[index]._slots[slotIndex];\n                  }\n               }\n        },\n\n        _changeGroupContinuously: function() {\n            return null;\n        },\n\n        _changeViewPeriod: function() {\n            return false;\n        },\n\n        _isInRange: function(newStart, newEnd) {\n            if (!newStart || !newEnd || !this.options.min || !this.options.max) {\n                return false;\n            }\n            return getDate(newStart) <= getDate(this.options.min) || getDate(newEnd) >= getDate(this.options.max);\n        },\n\n        _horizontalSlots: function(selection, ranges, multiple, reverse) {\n            var method = reverse ? \"leftSlot\" : \"rightSlot\";\n            var horizontalRange = {\n                 startSlot: ranges[0].start,\n                 endSlot: ranges[ranges.length - 1].end\n             };\n            var group = this.groups[selection.groupIndex];\n            var isVertical = this._isVerticallyGrouped();\n\n            if (!multiple) {\n                var slot = this._normalizeHorizontalSelection(selection, ranges, reverse);\n                if (slot) {\n                    horizontalRange.startSlot = horizontalRange.endSlot = slot;\n                }\n            }\n\n            if (this._isGroupedByDate() && !multiple) {\n                  var tempSlot = this._changeGroup(selection, reverse);\n\n                  if (!tempSlot)\n                  {\n                    horizontalRange = this._getNextHorizontalRange(group, method, horizontalRange);\n                  } else {\n                      horizontalRange.startSlot = horizontalRange.endSlot = tempSlot;\n                  }\n            } else {\n                  horizontalRange.startSlot = group[method](horizontalRange.startSlot);\n                  horizontalRange.endSlot = group[method](horizontalRange.endSlot);\n\n                  if (!multiple && !isVertical && (!horizontalRange.startSlot || !horizontalRange.endSlot)) {\n                        horizontalRange.startSlot = horizontalRange.endSlot = this._changeGroup(selection, reverse);\n                  }\n            }\n\n            var continuousSlot;\n\n            if ((!horizontalRange.startSlot || !horizontalRange.endSlot) && !this._isGroupedByDate()) {\n                continuousSlot = this._continuousSlot(selection, ranges, reverse);\n                continuousSlot = this._changeGroupContinuously(selection, continuousSlot, multiple, reverse);\n\n                if (continuousSlot) {\n                    horizontalRange.startSlot = horizontalRange.endSlot = continuousSlot;\n                }\n            }\n\n            return horizontalRange;\n        },\n\n         _getNextHorizontalRange: function(group, method, horizontalRange) {\n            if (!this._isVerticallyGrouped()) {\n                horizontalRange.startSlot = group[method](horizontalRange.startSlot);\n                horizontalRange.endSlot = group[method](horizontalRange.endSlot);\n            }\n\n             return horizontalRange;\n        },\n\n        _verticalSlots: function(selection, ranges, multiple, reverse) {\n            var group = this.groups[selection.groupIndex];\n            var slot;\n            var verticalRange = {\n                startSlot: ranges[0].start,\n                endSlot: ranges[ranges.length - 1].end\n            };\n\n            if (!multiple) {\n                slot = this._normalizeVerticalSelection(selection, ranges, reverse);\n                if (slot) {\n                    verticalRange.startSlot = verticalRange.endSlot = slot;\n                }\n            }\n\n            var method = reverse ? \"upSlot\" : \"downSlot\";\n\n            verticalRange = this._getNextVerticalRange(group, method, verticalRange, multiple);\n\n            if (!multiple && this._isVerticallyGrouped() && (!verticalRange.startSlot || !verticalRange.endSlot)) {\n                if (this._isGroupedByDate()) {\n                    verticalRange.startSlot = verticalRange.endSlot = this._changeDate(selection, slot, reverse);\n\n               } else {\n                    verticalRange.startSlot = verticalRange.endSlot = this._changeGroup(selection, reverse);\n               }\n            }\n\n            return verticalRange;\n        },\n\n        _getNextVerticalRange: function(group, method, verticalRange, multiple) {\n             verticalRange.startSlot = group[method](verticalRange.startSlot, multiple);\n             verticalRange.endSlot = group[method](verticalRange.endSlot, multiple);\n\n             return verticalRange;\n        },\n\n        _normalizeHorizontalSelection: function() {\n            return null;\n        },\n\n        _normalizeVerticalSelection: function(selection, ranges, reverse) {\n            var slot;\n\n            if (reverse) {\n                slot = ranges[0].start;\n            } else {\n                slot = ranges[ranges.length - 1].end;\n            }\n\n            return slot;\n        },\n\n        _continuousSlot: function() {\n            return null;\n        },\n\n        _footer: function() {\n            var that = this;\n            var options = that.options;\n\n            if (that._isMobile()) {\n                var html = '<div class=\"k-scheduler-footer k-toolbar\">';\n                html += '<span class=\"k-scheduler-today\"><a href=\"#\" class=\"k-link\">';\n                html += options.messages.today + '</a></span>';\n                html += \"</div>\";\n                that.footer = $(html).appendTo(that.element);\n            }\n\n            if (that.footer) {\n                that.footer.on(\"click\" + NS, \".k-scheduler-today\", function(e) {\n                    e.preventDefault();\n                    var timezone = that.options.timezone;\n                    var action = \"today\";\n                    var currentDate = new Date();\n                    var date;\n\n                    if (timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentDate, timezone);\n                        date = kendo.timezone.convert(currentDate, currentDate.getTimezoneOffset(), timezoneOffset);\n                    } else {\n                        date = currentDate;\n                    }\n\n                    that.trigger(\"navigate\", { view: that.name || options.name, action: action, date: date });\n                });\n            }\n        },\n\n        constrainSelection: function(selection) {\n            var group = this.groups[0];\n            var slot;\n\n            if (!this.inRange(selection)) {\n               slot = group.firstSlot();\n\n               selection.isAllDay = slot.isDaySlot;\n               selection.start = slot.startDate();\n               selection.end = slot.endDate();\n            } else {\n                if (!group.daySlotCollectionCount()) {\n                    selection.isAllDay = false;\n                } else if (!group.timeSlotCollectionCount()) {\n                    selection.isAllDay = true;\n                }\n           }\n\n            if (!this.groups[selection.groupIndex]) {\n                selection.groupIndex = 0;\n            }\n        },\n\n        move: function(selection, key, shift) {\n            var handled = false;\n            var group = this.groups[selection.groupIndex];\n            var verticalByDate = this._isGroupedByDate() && this._isVerticallyGrouped();\n\n            if (!group.timeSlotCollectionCount()) {\n                selection.isAllDay = true;\n            }\n\n            var ranges = group.ranges(selection.start, selection.end, selection.isAllDay, false);\n            var startSlot, endSlot, reverse, slots;\n\n            if (key === keys.DOWN || key === keys.UP) {\n                handled = true;\n                reverse = key === keys.UP;\n\n                this._updateDirection(selection, ranges, shift, reverse, true);\n\n                slots = this._verticalSlots(selection, ranges, shift, reverse);\n\n                if (!slots.startSlot && !shift && this._changeViewPeriod(selection, reverse, !verticalByDate)) {\n                    return handled;\n                }\n\n            } else if (key === keys.LEFT || key === keys.RIGHT) {\n                handled = true;\n                reverse = key === keys.LEFT;\n\n                this._updateDirection(selection, ranges, shift, reverse, false);\n\n                slots = this._horizontalSlots(selection, ranges, shift, reverse);\n\n                if (!slots.startSlot && !shift && this._changeViewPeriod(selection, reverse, verticalByDate)) {\n                    return handled;\n                }\n            }\n\n            if (handled) {\n                startSlot = slots.startSlot;\n                endSlot = slots.endSlot;\n\n                if (shift) {\n                    var backward = selection.backward;\n                    if (backward && startSlot) {\n                        selection.start = startSlot.startDate();\n                    } else if (!backward && endSlot) {\n                        selection.end = endSlot.endDate();\n                    }\n                } else if (startSlot && endSlot) {\n                    selection.isAllDay = startSlot.isDaySlot;\n                    selection.start = startSlot.startDate();\n                    selection.end = endSlot.endDate();\n                }\n\n                selection.events = [];\n            }\n\n            return handled;\n        },\n\n        moveToEventInGroup: function(group, slot, selectedEvents, prev) {\n            var events = group._continuousEvents || [];\n            var found, event;\n            var pad = prev ? -1 : 1;\n            var length = events.length;\n            var idx = prev ? length - 1 : 0;\n            var i, lastSelected;\n\n            if (selectedEvents.length) {\n                lastSelected = selectedEvents[selectedEvents.length - 1];\n\n                if (prev) {\n                    for (i = 0; i < events.length; i++) {\n                        if (events[i].uid === lastSelected) {\n                            idx = i + pad;\n                        }\n                    }\n                } else {\n                    for (i = events.length - 1; i > -1; i--) {\n                        if (events[i].uid === lastSelected) {\n                            idx = i + pad;\n                        }\n                    }\n                }\n            }\n\n            while (idx < length && idx > -1) {\n                event = events[idx];\n\n                if ( (!prev && event.start.startDate() >= slot.startDate()) ||\n                    (prev && event.start.startDate() <= slot.startDate()) ) {\n\n                    if (event && $.inArray(event.uid, selectedEvents) === -1) {\n                        found = !!event;\n                        break;\n                    }\n                }\n\n                idx += pad;\n            }\n\n            return event;\n        },\n\n        moveToEvent: function(selection, prev) {\n            var groupIndex = selection.groupIndex;\n\n            var group = this.groups[groupIndex];\n            var slot = group.ranges(selection.start, selection.end, this.name === \"month\" || selection.isAllDay, false)[0].start;\n\n            var length = this.groups.length;\n            var pad = prev ? -1 : 1;\n            var events = selection.events;\n            var event;\n\n            if (this._isGroupedByDate()) {\n                var allEvents = this._getAllEvents();\n                var uniqueAllEvents = this._getUniqueEvents(allEvents);\n                var sortedEvents = this._getSortedEvents(uniqueAllEvents);\n\n                if (events.length === 0) {\n                    var eventIndex = this._getNextEventIndexBySlot(slot, sortedEvents, groupIndex);\n\n                    if (prev) {\n                        eventIndex--;\n                    }\n\n                    event = sortedEvents[eventIndex];\n                } else {\n                     var idx = this._getStartIdx(events, sortedEvents);\n\n                    while (idx < sortedEvents.length && idx > -1) {\n                        if (events.length > 0) {\n                            slot = this._getSelectedSlot(slot, sortedEvents, event, idx, pad, prev);\n                        }\n\n                        if (!slot) {\n                            break;\n                        }\n\n                        if ( (!prev && sortedEvents[idx].start.startDate() >= slot.startDate()) ||\n                              (prev && sortedEvents[idx].start.startDate() <= slot.startDate())) {\n                             if (events[0] != sortedEvents[idx].uid) {\n                                 event = sortedEvents[idx];\n                                  break;\n                             }\n                        }\n                        idx += pad;\n                    }\n                }\n            } else {\n                  while (groupIndex < length && groupIndex > -1) {\n                    event = this.moveToEventInGroup(group, slot, events, prev);\n\n                    groupIndex += pad;\n                    group = this.groups[groupIndex];\n\n                    if (!group || event) {\n                        break;\n                    }\n\n                    events = [];\n                    if (prev) {\n                        slot = group.lastSlot();\n                    } else {\n                        slot = group.firstSlot(true);\n                    }\n                }\n            }\n\n            if (event) {\n                selection.events = [ event.uid ];\n                selection.start = event.start.startDate();\n                selection.end = event.end.endDate();\n                selection.isAllDay = event.start.isDaySlot;\n                selection.groupIndex = event.start.groupIndex;\n                selection.eventElement = event.element[0];\n            }\n\n            return !!event;\n        },\n\n        current: function(candidate) {\n            if (candidate !== undefined) {\n                this._current = candidate;\n                if (this.content.has(candidate)) {\n                    this._scrollTo(candidate, this.content[0]);\n                }\n            } else {\n                return this._current;\n            }\n        },\n\n        select: function(selection) {\n            this.clearSelection();\n\n            if (!this._selectEvents(selection)) {\n                this._selectSlots(selection);\n            }\n        },\n\n        _getNextEventIndexBySlot: function(slot, sortedEvents, groupIndex) {\n            var tempIndex = 0;\n            var slotStartDate = kendo.date.getDate(slot.startDate());\n\n            for (var i = 0; i < sortedEvents.length; i++) {\n                var eventStartDate = kendo.date.getDate(sortedEvents[i].start.startDate());\n                if (slotStartDate > eventStartDate) {\n                    tempIndex++;\n                    continue;\n                }\n\n                if (slotStartDate.getTime() === eventStartDate.getTime() && groupIndex > sortedEvents[i].start.groupIndex) {\n                      tempIndex++;\n                      continue;\n                }\n\n                if (slotStartDate.getTime() === eventStartDate.getTime() &&\n                    groupIndex >= sortedEvents[i].start.groupIndex &&\n                    slot.startDate() > sortedEvents[i].start.startDate()) {\n                    tempIndex++;\n                    continue;\n                 }\n\n                 break;\n            }\n            return tempIndex;\n        },\n\n        _getSelectedSlot: function(slot, sortedEvents, event, idx, pad, prev) {\n              if (sortedEvents[idx + pad] &&\n               sortedEvents[idx].start.groupIndex !== sortedEvents[idx + pad].start.groupIndex) {\n                    var groupIndex = sortedEvents[idx + pad].start.groupIndex;\n                    var group = this.groups[groupIndex];\n\n                    if (!group || event) {\n                       slot = null;\n                    }\n\n                    if (prev) {\n                        slot = group.lastSlot();\n                    } else {\n                        slot = group.firstSlot(true);\n                    }\n                }\n             return slot;\n        },\n\n        _getStartIdx: function(events, sortedEvents) {\n            var selectedEventIndex = 0;\n\n            $.each(sortedEvents, function() {\n                if (this.uid === events[0]) {\n                     return false;\n                }\n\n                selectedEventIndex++;\n            });\n\n            return selectedEventIndex;\n        },\n\n        _getAllEvents: function() {\n            var allEvents = [];\n            var groups = this.groups;\n\n            for (var idx = 0; idx < groups.length; idx++) {\n                if (groups[idx]._continuousEvents) {\n                    allEvents = allEvents.concat(groups[idx]._continuousEvents);\n                }\n            }\n\n            return allEvents;\n        },\n\n        _getUniqueEvents: function(allEvents) {\n            var uniqueAllEvents = [];\n\n            for (var i = 0; i < allEvents.length; i++) {\n                var exists = false;\n                for (var j = 0; j < uniqueAllEvents.length; j++) {\n                    if (allEvents[i].uid === uniqueAllEvents[j].uid) {\n                        exists = true;\n                        break;\n                    }\n                }\n\n                if (!exists) {\n                    uniqueAllEvents.push(allEvents[i]);\n                }\n            }\n\n            return uniqueAllEvents;\n        },\n\n        _getSortedEvents: function(uniqueAllEvents) {\n             return uniqueAllEvents.sort(function(first, second) {\n                var firstStartDate = first.start.startDate();\n                var secondStartDate = second.start.startDate();\n                var result = kendo.date.getDate(firstStartDate) - kendo.date.getDate(secondStartDate);\n\n                if (result === 0) {\n                    result = first.start.groupIndex - second.start.groupIndex;\n                }\n\n                if (result === 0) {\n                    result = firstStartDate.getTime() - secondStartDate.getTime();\n                }\n\n                if (result === 0) {\n                    if (first.start.isDaySlot && !second.start.isDaySlot) {\n                            result = -1;\n                    }\n\n                    if (!first.start.isDaySlot && second.start.isDaySlot) {\n                            result = 1;\n                    }\n                }\n\n                if (result === 0) {\n                    result = $(first.element).index() - $(second.element).index();\n                }\n\n                return result;\n            });\n        },\n\n        _selectSlots: function(selection) {\n            var isAllDay = selection.isAllDay;\n            var group = this.groups[selection.groupIndex];\n\n            if (!group.timeSlotCollectionCount()) {\n                isAllDay = true;\n            }\n\n            this._selectedSlots = [];\n\n            var ranges = group.ranges(selection.start, selection.end, isAllDay, false);\n            var element;\n            var slot;\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                var range = ranges[rangeIndex];\n                var collection = range.collection;\n\n                for (var slotIndex = range.start.index; slotIndex <= range.end.index; slotIndex++) {\n                    slot = collection.at(slotIndex);\n\n                    element = slot.element;\n                    addSelectedState(element);\n\n                    this._selectedSlots.push({\n                        start: slot.startDate(),\n                        end: slot.endDate(),\n                        element: element\n                    });\n                }\n            }\n\n            if (selection.backward) {\n                element = ranges[0].start.element;\n            }\n\n            this.current(element);\n        },\n\n        _selectEvents: function(selection) {\n            var found = false;\n            var events = selection.events;\n            var groupEvents = this._getAllEvents();\n            var idx, groupEvent, length = groupEvents.length;\n\n            if (!events[0] || !groupEvents[0]) {\n                return found;\n            }\n\n            var result = $();\n            selection.events = [];\n            for (idx = 0; idx < length; idx ++) {\n                if ($.inArray(groupEvents[idx].uid, events) > -1) {\n                    groupEvent = groupEvents[idx];\n                    result = result.add(groupEvent.element);\n                    if (selection.events.indexOf(groupEvent.uid) === -1) {\n                        selection.events.push(groupEvent.uid);\n                    }\n                }\n            }\n\n            if (result[0]) {\n                result.addClass(\"k-state-selected\");\n\n                if (selection.eventElement) {\n                    this.current(selection.eventElement);\n                } else {\n                    this.current(result.last()[0]);\n                }\n\n                this._selectedSlots = [];\n                found = true;\n            }\n\n            return found;\n        },\n\n        inRange: function(options) {\n            var startDate = this.startDate();\n            var endDate = kendo.date.addDays(this.endDate(), 1);\n            var start = options.start;\n            var end = options.end;\n\n            return startDate <= start && start < endDate && startDate < end && end <= endDate;\n        },\n\n        _resourceValue: function(resource, item) {\n            if (resource.valuePrimitive) {\n                item = kendo.getter(resource.dataValueField)(item);\n            }\n            return item;\n        },\n\n        _setResourceValue: function(groupLevelMember, resource, result) {\n            var value = groupLevelMember.value,\n                setter;\n\n            if (resource.multiple) {\n                value = [value];\n            }\n\n            setter = kendo.setter(resource.field);\n            setter(result, value);\n        },\n\n        _resourceBySlot: function(slot) {\n            var resources = this.groupedResources;\n            var result = {};\n\n            if (resources.length) {\n                var resourceIndex = slot.groupIndex,\n                    groupOptions = this.options.group,\n                    nestedMember = groupOptions.date || groupOptions.orientation === \"horizontal\" ? \"columns\" : \"rows\",\n                    levels = nestedMember === \"rows\" ? this.rowLevels : this.columnLevels,\n                    dateGroupCompensation = groupOptions.date && groupOptions.orientation === \"horizontal\" ? 1 : 0,\n                    groupLevel = levels[resources.length - 1 + dateGroupCompensation],\n                    resource = resources[resources.length - 1],\n                    groupLevelMember = groupLevel[resourceIndex],\n                    passedChildren, numberOfChildren, j, i;\n\n                this._setResourceValue(groupLevelMember, resource, result);\n\n                for (j = resources.length - 2; j >= 0; j--) {\n                    groupLevel = levels[j + dateGroupCompensation];\n                    resource = resources[j];\n                    passedChildren = 0;\n\n                    for (i = 0; i < groupLevel.length; i++) {\n                        groupLevelMember = groupLevel[i];\n                        numberOfChildren = groupLevelMember[nestedMember].length;\n\n                        if (numberOfChildren > resourceIndex - passedChildren) {\n                            this._setResourceValue(groupLevelMember, resource, result);\n\n                            i = groupLevel.length;\n                        } else {\n                            passedChildren += numberOfChildren;\n                        }\n                    }\n                }\n            }\n\n            return result;\n        },\n\n        _createResizeHint: function(left, top, width, height) {\n            return $(HINT).css({\n                left: left,\n                top: top,\n                width: width,\n                height: height\n            });\n        },\n\n        _removeResizeHint: function() {\n            this._resizeHint.remove();\n            this._resizeHint = $();\n        },\n\n        _removeMoveHint: function(uid) {\n            if (uid) {\n                this._moveHint.filter(\"[data-uid='\" + uid + \"']\").remove();\n\n                this._moveHint = this._moveHint.filter(\"[data-uid!='\" + uid + \"']\");\n            } else {\n                this._moveHint.remove();\n                this._moveHint = $();\n            }\n        },\n\n        _scrollTo: function(element, container) {\n            var elementOffset = element.offsetTop,\n                elementOffsetDir = element.offsetHeight,\n                containerScroll = container.scrollTop,\n                containerOffsetDir = container.clientHeight,\n                bottomDistance = elementOffset + elementOffsetDir,\n                result = 0;\n\n                if (containerScroll > elementOffset) {\n                    result = elementOffset;\n                } else if (bottomDistance > (containerScroll + containerOffsetDir)) {\n                    if (elementOffsetDir <= containerOffsetDir) {\n                        result = (bottomDistance - containerOffsetDir);\n                    } else {\n                        result = elementOffset;\n                    }\n                } else {\n                    result = containerScroll;\n                }\n                container.scrollTop = result;\n        },\n\n        _inverseEventColor: function(element) {\n            var eventColor = element.css(\"color\");\n            var eventColorIsDark = new Color(eventColor).isDark();\n            var eventBackground = element.css(\"background-color\");\n            var eventBackgroundIsDark = new Color(eventBackground).isDark();\n\n            if (eventColorIsDark == eventBackgroundIsDark) {\n                element.addClass(INVERSE_COLOR_CLASS);\n            }\n        },\n\n       _eventTmpl: function(template, wrapper) {\n           var options = this.options,\n               settings = $.extend({}, kendo.Template, options.templateSettings),\n               paramName = settings.paramName,\n               html = \"\",\n               type = typeof template,\n               state = { storage: {}, count: 0 };\n\n            if (type === \"function\") {\n                state.storage[\"tmpl\" + state.count] = template;\n                html += \"#=this.tmpl\" + state.count + \"(\" + paramName + \")#\";\n                state.count ++;\n            } else if (type === \"string\") {\n                html += template;\n            }\n\n            var tmpl = kendo.template(kendo.format(wrapper, html), settings);\n\n            if (state.count > 0) {\n                tmpl = tmpl.bind(state.storage);\n            }\n\n            return tmpl;\n       },\n\n        eventResources: function(event) {\n            var resources = [],\n                options = this.options;\n\n            if (!options.resources) {\n                return resources;\n            }\n\n            for (var idx = 0; idx < options.resources.length; idx++) {\n                var resource = options.resources[idx];\n                var field = resource.field;\n                var eventResources = kendo.getter(field)(event);\n\n                if (eventResources == null) {\n                    continue;\n                }\n\n                if (!resource.multiple) {\n                    eventResources = [eventResources];\n                }\n\n                var data = resource.dataSource.view();\n\n                for (var resourceIndex = 0; resourceIndex < eventResources.length; resourceIndex++) {\n                    var eventResource = null;\n\n                    var value = eventResources[resourceIndex];\n\n                    if (!resource.valuePrimitive) {\n                        value = kendo.getter(resource.dataValueField)(value);\n                    }\n\n                    for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                        if (data[dataIndex].get(resource.dataValueField) == value) {\n                            eventResource = data[dataIndex];\n                            break;\n                        }\n                    }\n\n                    if (eventResource !== null) {\n                        var resourceColor = kendo.getter(resource.dataColorField)(eventResource);\n                        resources.push({\n                            field: resource.field,\n                            title: resource.title,\n                            name: resource.name,\n                            text: kendo.getter(resource.dataTextField)(eventResource),\n                            value: value,\n                            color: resourceColor\n                        });\n                    }\n                }\n            }\n            return resources;\n        },\n\n        createLayout: function(layout) {\n            var allDayIndex = -1;\n\n            if (!layout.rows) {\n                layout.rows = [];\n            }\n\n            for (var idx = 0; idx < layout.rows.length; idx++) {\n                if (layout.rows[idx].allDay) {\n                    allDayIndex = idx;\n                    break;\n                }\n            }\n\n            var allDaySlot = layout.rows[allDayIndex];\n\n            if (allDayIndex >= 0) {\n                layout.rows.splice(allDayIndex, 1);\n            }\n\n            var columnLevels = this.columnLevels = levels(layout, \"columns\");\n            var rowLevels = this.rowLevels = levels(layout, \"rows\");\n\n            if (this._isVirtualized()) {\n                this._trimRowLevels(rowLevels);\n            }\n\n            this.table = $('<table role=\"presentation\" class=\"k-scheduler-layout k-scheduler-' + this.name + 'view\"><tbody></tbody></table>');\n\n            var rowCount = rowLevels[rowLevels.length - 1].length;\n\n            this.table.find(\"tbody\").first().append(this._topSection(columnLevels, allDaySlot, rowCount));\n            this.table.find(\"tbody\").first().append(this._bottomSection(columnLevels, rowLevels, rowCount));\n            this.element.append(this.table);\n\n            if (this._isVirtualized()) {\n                this._updateDomRowLevels();\n            }\n\n            // Enable horizontal scrolling when mobile, grouped and less than 1024px width\n            if (this._isMobile() &&\n                    columnLevels.length > 1 &&\n                    this._groupOrientation() === \"horizontal\" &&\n                    kendo._outerWidth($(window)) < MIN_HORIZONTAL_SCROLL_SIZE ) {\n\n                this.table.find(\".k-scheduler-content .k-scheduler-table\").width((columnLevels[columnLevels.length - 2].length * 100) + \"%\");\n                this.table.find(\".k-scheduler-header .k-scheduler-table\").width((columnLevels[columnLevels.length - 2].length * 100) + \"%\");\n            }\n\n            this._scroller();\n        },\n\n        _isVirtualized: function() {\n            return this.options.virtual && this.rowLevels.length > 1 && this._isVerticallyGrouped();\n        },\n\n        _trimRowLevels: function(rowLevels) {\n            var lastGroup = rowLevels[rowLevels.length - 2];\n            var cachedRowLevels = this.cachedRowLevels || [];\n            var levelMarker;\n\n            this._hasContentToRender = true;\n\n            var stopAtLevel = function(levels, index) {\n                var hasParent = levels[index - 1].length > 0,\n                parentLevel, parentValue;\n\n                if (hasParent) {\n                    parentLevel = levels[index - 1][0];\n                    parentValue = levels[index][0].parentValue;\n\n                    return parentLevel.value !== parentValue;\n                } else {\n                    return true;\n                }\n            };\n\n            for (var rowLevelIndex = rowLevels.length - 2; rowLevelIndex >= 0; rowLevelIndex--) {\n                var stop = false;\n                if (rowLevelIndex > 0 && stopAtLevel(rowLevels, rowLevelIndex)) {\n                    stop = true;\n                    levelMarker = rowLevelIndex;\n                }\n\n                cachedRowLevels[rowLevelIndex] = rowLevels[rowLevelIndex].splice(1);\n\n                if (rowLevelIndex < rowLevels.length - 2 && rowLevels[rowLevelIndex][0].rows.length != 1) {\n                    rowLevels[rowLevelIndex][0].rows = rowLevels[rowLevelIndex + 1];\n                }\n\n                if (stop) {\n                    break;\n                }\n            }\n\n            cachedRowLevels[rowLevels.length - 1] = rowLevels[rowLevels.length - 1].splice(lastGroup[0].rows.length);\n\n            this.cachedRowLevels = cachedRowLevels;\n\n            if (!cachedRowLevels[cachedRowLevels.length - 1].length) {\n                this._hasContentToRender = false;\n            }\n\n            return {\n                levelMarker: levelMarker || 0,\n                rowLevels: rowLevels\n            };\n        },\n\n        createNextLayout: function() {\n            var clone = [];\n            var trimmedRowLevels;\n            var rowLevels;\n            var levelMarker;\n            var rowCount;\n\n            for (var rowLevelIndex = 0; rowLevelIndex < this.cachedRowLevels.length; rowLevelIndex++) {\n                clone[rowLevelIndex] = this.cachedRowLevels[rowLevelIndex];\n            }\n\n            trimmedRowLevels = this._trimRowLevels(clone);\n            rowLevels = trimmedRowLevels.rowLevels.splice(trimmedRowLevels.levelMarker);\n            levelMarker = trimmedRowLevels.levelMarker;\n            rowCount = rowLevels[rowLevels.length - 1].length;\n\n            delete this._height;\n\n            for (var i = levelMarker; i < this.rowLevels.length; i++) {\n                this.rowLevels[i] = this.rowLevels[i].concat(rowLevels[i - levelMarker]);\n            }\n\n            this.table\n                .find(\".k-scheduler-times\").last().find(\"tbody\")\n                .append(this._times(rowLevels, rowCount, this._isMobile()).find(\"tr\"));\n\n            this._updateDomRowLevels();\n\n            if (levelMarker > 0) {\n                for (i = 0; i < levelMarker; i++) {\n                    var cell = this.table.find(\"[data-row-level=\" + i + \"]\").last();\n                    var rowSpan = parseInt(cell.attr(\"rowspan\"),10) + rowCount;\n                    cell.attr(\"rowspan\", rowSpan);\n                }\n            }\n\n            this._virtualContent(rowLevels, this.columnLevels);\n            this.render(this._cachedEvents);\n        },\n\n        _tryRenderContent: function() {\n            var that = this;\n            var bufferHeight = that.table.innerHeight();\n            var height = that.content.find(\"table\").innerHeight();\n            var scrollTop = that.content.scrollTop();\n\n            while (that._hasContentToRender && height - bufferHeight < scrollTop) {\n                that.createNextLayout();\n                height = that.content.find(\"table\").innerHeight();\n            }\n        },\n\n        _updateDomRowLevels: function() {\n            var that = this;\n            var groupCells = that.times.find(\".k-scheduler-group-cell:not([data-row-level])\");\n\n            if (!this._rowLevelIndices) {\n                this._rowLevelIndices = groupCells.map(function(index, item) {\n                    $(item).attr(\"data-row-level\", index);\n                    return index;\n                }).toArray().reverse();\n                return;\n            }\n\n            groupCells = groupCells.toArray().reverse();\n\n            for (var i = 0; i <= groupCells.length; i++) {\n                $(groupCells[i]).attr(\"data-row-level\", this._rowLevelIndices[i]);\n            }\n        },\n\n        refreshLayout: function() {\n            var that = this,\n                toolbar = that.element.find(\"> .k-scheduler-toolbar\"),\n                height = that.element.innerHeight(),\n                scrollbar = this._scrollbar,\n                headerHeight = 0,\n                paddingDirection = this._isRtl ? \"left\" : \"right\";\n\n            for (var idx = 0; idx < toolbar.length; idx++) {\n                height -= outerHeight(toolbar.eq(idx));\n            }\n\n            if (that.datesHeader) {\n                headerHeight = outerHeight(that.datesHeader);\n            }\n\n            if (that.timesHeader && outerHeight(that.timesHeader) > headerHeight) {\n                headerHeight = outerHeight(that.timesHeader);\n            }\n\n            if (that.datesHeader && that.timesHeader) {\n                var datesHeaderRows = that.datesHeader.find(\"table\").first().find(\"tr\");\n\n                that.timesHeader.find(\"tr\").height(function(index) {\n                    $(this).height(datesHeaderRows.eq(index).height());\n                });\n            }\n\n            if (headerHeight) {\n                height -= headerHeight;\n            }\n\n            if (that.footer) {\n                height -= outerHeight(that.footer);\n            }\n\n            var isSchedulerHeightSet = function(el) {\n                var initialHeight, newHeight;\n                if (el[0].style.height) {\n                    return true;\n                } else {\n                    initialHeight = el.height();\n                }\n\n                el.height(\"auto\");\n                newHeight = el.height();\n\n                if (initialHeight != newHeight) {\n                    el.height(\"\");\n                    return true;\n                }\n                el.height(\"\");\n                return false;\n            };\n\n            var contentDiv = that.content[0],\n                scrollbarWidth = !kendo.support.kineticScrollNeeded ? scrollbar : 0;\n\n            if (isSchedulerHeightSet(that.element)) { // set content height only if needed\n                if (height > scrollbar * 2) { // do not set height if proper scrollbar cannot be displayed\n                    that.content.height(height);\n                } else {\n                    that.content.height(scrollbar * 2 + 1);\n                }\n\n                if (that.times) {\n                    that.times.height(contentDiv.clientHeight);\n\n                    var timesTable = that.times.find(\"table\");\n                    if (timesTable.length) {\n                        timesTable.height(that.content.find(\"table\")[0].clientHeight);\n                    }\n                }\n            }\n\n            if (that.table) {\n                if (contentDiv.offsetWidth - contentDiv.clientWidth > 0) {\n                    that.table.addClass(\"k-scrollbar-v\");\n                    that.datesHeader.css(\"padding-\" + paddingDirection, scrollbarWidth - parseInt(that.datesHeader.children().css(\"border-\" + paddingDirection + \"-width\"), 10));\n                } else {\n                    that.datesHeader.css(\"padding-\" + paddingDirection, \"0\");\n                }\n                if (contentDiv.offsetHeight - contentDiv.clientHeight > 0 || contentDiv.clientHeight > that.content.children(\".k-scheduler-table\").height()) {\n                    that.table.addClass(\"k-scrollbar-h\");\n                } else {\n                    that.table.removeClass(\"k-scrollbar-h\");\n                }\n            }\n        },\n\n        _topSection: function(columnLevels, allDaySlot, rowCount) {\n            var thElm = $(\"<tr>\");\n\n            this.timesHeader = timesHeader(columnLevels.length, allDaySlot, rowCount);\n            this.datesHeader = this._datesHeader(columnLevels, allDaySlot);\n\n            var dateGroup = this.datesHeader.find(\".k-nav-day\");\n\n            if (dateGroup.length) {\n                dateGroup.closest(\"tr\").addClass(\"k-scheduler-date-group\");\n            }\n\n            if (this._isMobile()) {\n                thElm.addClass(\"k-mobile-header\");\n                thElm.addClass(\"k-mobile-\" + this._groupOrientation() + \"-header\");\n            }\n\n            return $(thElm).append(this.timesHeader.add(this.datesHeader).wrap(\"<td>\").parent());\n        },\n\n        _bottomSection: function(columnLevels, rowLevels, rowCount) {\n            this.times = this._times(rowLevels, rowCount, this._isMobile());\n\n            this.content = content(columnLevels[columnLevels.length - 1], rowLevels[rowLevels.length - 1]);\n\n            return $(\"<tr>\").append(this.times.add(this.content).wrap(\"<td>\").parent());\n        },\n\n        _scroller: function() {\n            var that = this;\n\n            this.content.on(\"scroll\" + NS, function() {\n                kendo.scrollLeft(that.datesHeader.find(\">.k-scheduler-header-wrap\"), this.scrollLeft);\n                that.times.scrollTop(this.scrollTop);\n                if (that._isVirtualized()) {\n                    that._tryRenderContent();\n                }\n            });\n\n            var touchScroller = kendo.touchScroller(this.content, {\n                avoidScrolling: function(e) {\n                    return $(e.event.target).closest(\".k-event.k-event-active\").length > 0;\n                }\n            });\n\n            if (touchScroller && touchScroller.movable) {\n\n                this._touchScroller = touchScroller;\n\n                this.content = touchScroller.scrollElement;\n\n                touchScroller.movable.bind(\"change\", function(e) {\n                    kendo.scrollLeft(that.datesHeader.find(\">.k-scheduler-header-wrap\"), -e.sender.x);\n                    that.times.scrollTop(-e.sender.y);\n                    if (that._isVirtualized()) {\n                        that._tryRenderContent();\n                    }\n                });\n            }\n        },\n\n        _resourcesForGroups: function() {\n            var result = [];\n            var groups = this.options.group;\n            var resources = this.options.resources;\n\n            groups = groups && groups.resources ? groups.resources : [];\n\n            if (resources && groups.length) {\n                for (var idx = 0, length = resources.length; idx < length; idx++) {\n                    for (var groupIdx = 0, groupLength = groups.length; groupIdx < groupLength; groupIdx++) {\n                        if (resources[idx].name === groups[groupIdx]) {\n                            result.push(resources[idx]);\n                        }\n                    }\n                }\n            }\n\n            this.groupedResources = result;\n        },\n\n        _createDateLayout: function(dates, inner, times) {\n            return createDateLayoutConfiguration(\"rows\", dates, inner, times);\n        },\n\n        _createColumnsLayout: function(resources, inner, template, dates, times, parentValue) {\n            return createLayoutConfiguration(\"columns\", resources, inner, template, dates, times, parentValue);\n        },\n\n        _groupOrientation: function() {\n            var groups = this.options.group;\n            return groups && groups.resources ? groups.orientation : \"horizontal\";\n        },\n\n        _isGroupedByDate: function() {\n            return this.options.group && this.options.group.date;\n        },\n\n        _isVerticallyGrouped: function() {\n            return this.groupedResources.length && this._groupOrientation() === \"vertical\";\n        },\n\n        _createRowsLayout: function(resources, inner, template, dates) {\n            return createLayoutConfiguration(\"rows\", resources, inner, template, dates);\n        },\n\n        selectionByElement: function() {\n            return null;\n        },\n\n        clearSelection: function() {\n            this.content\n                .find(\".k-state-selected\")\n                .removeAttr(\"id\")\n                .removeClass(\"k-state-selected\");\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(this);\n\n            if (that.table) {\n                kendo.destroy(that.table);\n                that.table.remove();\n            }\n\n            if (that.footer) {\n                kendo.destroy(that.footer);\n                that.footer.remove();\n            }\n\n            that.groups = null;\n            that.table = null;\n            that.content = null;\n            that.times = null;\n            that.datesHeader = null;\n            that.timesHeader = null;\n            that.footer = null;\n            that._resizeHint = null;\n            that._moveHint = null;\n        },\n\n        calendarInfo: function() {\n            return kendo.getCulture().calendars.standard;\n        },\n\n        prevGroupSlot: function(date, groupIndex, isDay) {\n            var collection;\n            var group = this.groups[groupIndex];\n            var slot = group.ranges(date, date, isDay, false)[0].start;\n\n            if (groupIndex <= 0) {\n                return;\n            }\n\n            if (this._isGroupedByDate()) {\n               return slot;\n            }\n\n            if (this._isVerticallyGrouped()) {\n                if (!group.timeSlotCollectionCount()) {\n                    collection = group._collection(group.daySlotCollectionCount() - 1, true);\n                    return collection.at(slot.index);\n                } else {\n                    collection = group._collection(isDay ? slot.index : slot.collectionIndex, false);\n                    return collection.last();\n                }\n            } else {\n                if (!group.timeSlotCollectionCount()) {\n                    collection = group._collection(slot.collectionIndex, true);\n                    return collection.last();\n                } else {\n                    collection = group._collection(isDay ? 0 : group.timeSlotCollectionCount() - 1, isDay);\n                    return isDay ? collection.last() : collection.at(slot.index);\n                }\n            }\n        },\n\n        nextGroupSlot: function(date, groupIndex, isDay) {\n            var collection;\n            var group = this.groups[groupIndex];\n            var slot = group.ranges(date, date, isDay, false)[0].start;\n            var daySlotCollectionCount;\n\n            if (groupIndex >= this.groups.length - 1) {\n                return;\n            }\n\n            if (this._isGroupedByDate()) {\n               return slot;\n            }\n\n            if (this._isVerticallyGrouped()) {\n                if (!group.timeSlotCollectionCount()) {\n                    collection = group._collection(0, true);\n                    return collection.at(slot.index);\n                } else {\n                    daySlotCollectionCount = group.daySlotCollectionCount();\n                    collection = group._collection(daySlotCollectionCount ? 0 : slot.collectionIndex, daySlotCollectionCount);\n\n                    return isDay ? collection.first() : collection.at(slot.collectionIndex);\n                }\n            } else {\n                if (!group.timeSlotCollectionCount()) {\n                    collection = group._collection(slot.collectionIndex, true);\n                    return collection.first();\n                } else {\n                    collection = group._collection(0, isDay);\n                    return isDay ? collection.first() : collection.at(slot.index);\n                }\n            }\n        },\n\n        _eventOptionsForMove: function() {\n            return {};\n        },\n\n        _updateEventForResize: function() {\n            return;\n        },\n\n        _updateEventForSelection: function(event) {\n            return event;\n        },\n\n        _innerElements: function(element, type, inner) {\n            var count = 0,\n                countInner = function(el) {\n                    var innerSpan = el[inner],\n                        innerEls = el[type],\n                        current, innerCollection, i;\n\n                    if (innerSpan) {\n                        count += innerSpan;\n                        return;\n                    }\n\n                    if (!innerEls || innerEls.length === 0) {\n                        count += 1;\n                        return;\n                    }\n\n                    for (i = 0; i < innerEls.length; i++) {\n                        current = innerEls[i];\n                        innerCollection = current[type];\n\n                        if (innerCollection && innerCollection[0]) {\n                            if (!innerCollection[0][type] || innerCollection[0][type].length === 0) {\n                                count += innerCollection.length;\n                            } else {\n                                countInner(current);\n                            }\n                        } else {\n                            count += 1;\n                        }\n                    }\n                };\n\n            countInner(element);\n\n            return count;\n        },\n\n        _times: function(rowLevels, rowCount, isMobile) {\n            var that = this;\n            var rows = new Array(rowCount).join().split(\",\");\n            var rowHeaderRows = [];\n            var rowIndex;\n\n            for (var rowLevelIndex = 0; rowLevelIndex < rowLevels.length; rowLevelIndex++) {\n                var level = rowLevels[rowLevelIndex];\n                var rowsBefore = 0;\n\n                for (rowIndex = 0; rowIndex < level.length; rowIndex++) {\n                    var currentRow = level[rowIndex];\n                    var className = currentRow.className || \"\";\n                    var text = currentRow.text;\n                    var rowspan = that._innerElements(currentRow, \"rows\");\n\n                    rowsBefore += rowspan;\n\n                    if (currentRow.allDay) {\n                        className = \"k-scheduler-times-all-day\";\n                    }\n\n                    if (isMobile && className.indexOf(\"k-scheduler-group-cell\") !== -1) {\n                        text = '<span class=\"k-scheduler-group-text\">' + text + '</span>';\n                    }\n\n                    rows[rowsBefore - rowspan] += '<th class=\"' + className + '\" rowspan=\"' + rowspan + '\">' + text + \"</th>\";\n                }\n            }\n\n            for (rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n                rowHeaderRows.push(rows[rowIndex]);\n            }\n\n            if (rowCount < 1) {\n                return $();\n            }\n\n            return $('<div class=\"k-scheduler-times\">' + table(rowHeaderRows) + '</div>');\n        },\n\n        _datesHeader: function(columnLevels, allDaySlot) {\n            var that = this;\n            var dateTableRows = [];\n            var columnIndex;\n\n            for (var columnLevelIndex = 0; columnLevelIndex < columnLevels.length; columnLevelIndex++) {\n                var level = columnLevels[columnLevelIndex];\n                var th = [];\n\n                for (columnIndex = 0; columnIndex < level.length; columnIndex ++) {\n                    var column = level[columnIndex];\n                    var colspan = that._innerElements(column, \"columns\", \"colspan\");\n\n                    th.push('<th colspan=\"' + (column.colspan || colspan) + '\" class=\"' + (column.className || \"\") + '\">' + column.text + \"</th>\");\n                }\n\n                dateTableRows.push(th.join(\"\"));\n            }\n\n            var allDayTableRows = [];\n\n            if (allDaySlot) {\n                var lastLevel = columnLevels[columnLevels.length - 1];\n                var td = [];\n                var cellContent = allDaySlot.cellContent;\n\n                for (columnIndex = 0; columnIndex < lastLevel.length; columnIndex++) {\n                    td.push('<td class=\"' + (lastLevel[columnIndex].className || \"\") + '\">' + (cellContent ? cellContent(columnIndex) : '&nbsp;') + '</td>');\n                }\n\n                allDayTableRows.push(td.join(\"\"));\n            }\n\n            return $(\n                '<div class=\"k-scheduler-header\">' +\n                    '<div class=\"k-scheduler-header-wrap\">' +\n                        table(dateTableRows) +\n                        allDayTable(allDayTableRows, \"k-scheduler-header-all-day\") +\n                    '</div>' +\n                '</div>'\n            );\n        },\n\n        _formatEventAriaLabel: function(title, start, end, isAllDay) {\n            var labelMessages = this.options.messages.ariaEventLabel,\n                sameDate = kendo.date.getDate(start).getTime() === kendo.date.getDate(end).getTime(),\n                labelText;\n\n            if (typeof(labelMessages) === \"string\") {\n                return kendo.format(labelMessages, title, start, start);\n            }\n\n            labelText = (labelMessages.prefix + SPACE + title + SPACE + labelMessages.on + SPACE + kendo.toString(start, \"D\")).trim();\n\n            if (isAllDay && sameDate) {\n                return labelText + SPACE + labelMessages.allDay;\n            } else if (isAllDay) {\n                return labelText + SPACE + labelMessages.to + SPACE + kendo.toString(end, \"D\") + SPACE + labelMessages.allDay;\n            } else {\n                labelText = labelText + SPACE + labelMessages.at + SPACE + kendo.toString(start, \"t\") + SPACE + labelMessages.to + SPACE;\n\n                if (sameDate) {\n                    return labelText + kendo.toString(end, \"t\");\n                } else {\n                    return labelText + kendo.toString(end, \"D\") + SPACE + labelMessages.at + SPACE + kendo.toString(end, \"t\");\n                }\n            }\n        }\n    });\n\n    function collidingEvents(elements, start, end) {\n        var idx,\n            index,\n            startIndex,\n            overlaps,\n            endIndex;\n\n        for (idx = elements.length - 1; idx >= 0; idx--) {\n            index = rangeIndex(elements[idx]);\n            startIndex = index.start;\n            endIndex = index.end;\n\n            overlaps = startIndex <= start && endIndex >= start;\n\n            if (overlaps || (startIndex >= start && endIndex <= end) || (start <= startIndex && end >= startIndex)) {\n                if (startIndex < start) {\n                    start = startIndex;\n                }\n\n                if (endIndex > end) {\n                    end = endIndex;\n                }\n            }\n        }\n\n        return eventsForSlot(elements, start, end);\n    }\n\n    function rangeIndex(eventElement) {\n        return {\n            start: eventElement.start,\n            end: eventElement.end\n        };\n    }\n\n    function eventsForSlot(elements, slotStart, slotEnd) {\n        var events = [];\n\n        for (var idx = 0; idx < elements.length; idx++) {\n            var event = rangeIndex(elements[idx]);\n\n            if ((event.start < slotStart && event.end > slotStart) || (event.start >= slotStart && event.end <= slotEnd)) {\n                events.push(elements[idx]);\n            }\n        }\n\n        return events;\n    }\n\n    function createColumns(eventElements) {\n        return _createColumns(eventElements);\n    }\n\n    function createRows(eventElements) {\n        return _createColumns(eventElements);\n    }\n\n    var Color = function(value) {\n        var color = this,\n            formats = Color.formats,\n            re,\n            processor,\n            parts,\n            i,\n            channels;\n\n        if (arguments.length === 1) {\n            value = color.resolveColor(value);\n\n            for (i = 0; i < formats.length; i++) {\n                re = formats[i].re;\n                processor = formats[i].process;\n                parts = re.exec(value);\n\n                if (parts) {\n                    channels = processor(parts);\n                    color.r = channels[0];\n                    color.g = channels[1];\n                    color.b = channels[2];\n                }\n            }\n        } else {\n            color.r = arguments[0];\n            color.g = arguments[1];\n            color.b = arguments[2];\n        }\n\n        color.r = color.normalizeByte(color.r);\n        color.g = color.normalizeByte(color.g);\n        color.b = color.normalizeByte(color.b);\n    };\n\n    Color.prototype = {\n        resolveColor: function(value) {\n            value = value || \"#000\";\n\n            if (value.charAt(0) == \"#\") {\n                value = value.substr(1, 6);\n            }\n\n            value = value.replace(/ /g, \"\");\n            value = value.toLowerCase();\n            value = Color.namedColors[value] || value;\n\n            return value;\n        },\n\n        normalizeByte: function(value) {\n            return (value < 0 || isNaN(value)) ? 0 : ((value > 255) ? 255 : value);\n        },\n\n        percBrightness: function() {\n            var color = this;\n            return math.sqrt(0.241 * color.r * color.r + 0.691 * color.g * color.g + 0.068 * color.b * color.b);\n        },\n\n        isDark: function() {\n            var color = this;\n            var brightnessValue = color.percBrightness();\n            return brightnessValue < 180;\n        }\n    };\n\n    Color.formats = [{\n            re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n            process: function(parts) {\n                return [\n                    parseInt(parts[1], 10), parseInt(parts[2], 10), parseInt(parts[3], 10)\n                ];\n            }\n        }, {\n            re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n            process: function(parts) {\n                return [\n                    parseInt(parts[1], 16), parseInt(parts[2], 16), parseInt(parts[3], 16)\n                ];\n            }\n        }, {\n            re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n            process: function(parts) {\n                return [\n                    parseInt(parts[1] + parts[1], 16),\n                    parseInt(parts[2] + parts[2], 16),\n                    parseInt(parts[3] + parts[3], 16)\n                ];\n            }\n        }\n    ];\n\n    Color.namedColors = {\n        aqua: \"00ffff\", azure: \"f0ffff\", beige: \"f5f5dc\",\n        black: \"000000\", blue: \"0000ff\", brown: \"a52a2a\",\n        coral: \"ff7f50\", cyan: \"00ffff\", darkblue: \"00008b\",\n        darkcyan: \"008b8b\", darkgray: \"a9a9a9\", darkgreen: \"006400\",\n        darkorange: \"ff8c00\", darkred: \"8b0000\", dimgray: \"696969\",\n        fuchsia: \"ff00ff\", gold: \"ffd700\", goldenrod: \"daa520\",\n        gray: \"808080\", green: \"008000\", greenyellow: \"adff2f\",\n        indigo: \"4b0082\", ivory: \"fffff0\", khaki: \"f0e68c\",\n        lightblue: \"add8e6\", lightgrey: \"d3d3d3\", lightgreen: \"90ee90\",\n        lightpink: \"ffb6c1\", lightyellow: \"ffffe0\", lime: \"00ff00\",\n        limegreen: \"32cd32\", linen: \"faf0e6\", magenta: \"ff00ff\",\n        maroon: \"800000\", mediumblue: \"0000cd\", navy: \"000080\",\n        olive: \"808000\", orange: \"ffa500\", orangered: \"ff4500\",\n        orchid: \"da70d6\", pink: \"ffc0cb\", plum: \"dda0dd\",\n        purple: \"800080\", red: \"ff0000\", royalblue: \"4169e1\",\n        salmon: \"fa8072\", silver: \"c0c0c0\", skyblue: \"87ceeb\",\n        slateblue: \"6a5acd\", slategray: \"708090\", snow: \"fffafa\",\n        steelblue: \"4682b4\", tan: \"d2b48c\", teal: \"008080\",\n        tomato: \"ff6347\", turquoise: \"40e0d0\", violet: \"ee82ee\",\n        wheat: \"f5deb3\", white: \"ffffff\", whitesmoke: \"f5f5f5\",\n        yellow: \"ffff00\", yellowgreen: \"9acd32\"\n    };\n\n    function _createColumns(eventElements) {\n        var columns = [];\n\n        for (var idx = 0; idx < eventElements.length; idx++) {\n            var event = eventElements[idx];\n            var eventRange = rangeIndex(event);\n            var column = null;\n\n            for (var j = 0, columnLength = columns.length; j < columnLength; j++) {\n                var endOverlaps = eventRange.start > columns[j].end;\n\n                if (eventRange.start < columns[j].start || endOverlaps) {\n\n                    column = columns[j];\n\n                    if (column.end < eventRange.end) {\n                        column.end = eventRange.end;\n                    }\n\n                    break;\n                }\n            }\n\n            if (!column) {\n                column = { start: eventRange.start, end: eventRange.end, events: [] };\n                columns.push(column);\n            }\n\n            column.events.push(event);\n        }\n\n        return columns;\n    }\n\n    function createDateLayoutConfiguration(name, dates, inner, times) {\n         var configuration = [];\n\n         $.each(dates, function(index, item) {\n            var className = item.className ? \"k-slot-cell \" + item.className : \"k-slot-cell\";\n\n            var obj = {\n                text: item.text,\n                className: className\n            };\n\n            if (times && !item.minorTicks) {\n                obj[name] = createDateLayoutConfiguration(name, item.columns, inner, times);\n            } else {\n                obj[name] = inner;\n            }\n            configuration.push(obj);\n        });\n\n        return configuration;\n    }\n\n    function createLayoutConfiguration(name, resources, inner, template, dates, times, parentValue) {\n        var resource = resources[0];\n        var configuration = [];\n\n        if (resource) {\n            if (dates && inner) {\n                $.each(dates, function(index, item) {\n                    if (times && !item.minorTicks) {\n                        item[name] = createLayoutConfiguration(name, resources, item.columns, template, item.columns, times, parentValue);\n                    } else {\n                        item[name] = createLayoutConfiguration(name, resources, null, template, null, null, parentValue);\n                    }\n                });\n                configuration = dates;\n            } else {\n                var data = resource.dataSource.view();\n\n                data = data.filter(function(item) {\n                    var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                    return itemParentValue === null || itemParentValue === undefined || itemParentValue === parentValue;\n                });\n\n                for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                    var value = kendo.getter(resource.dataValueField)(data[dataIndex]);\n                    var obj = {\n                        text: template({\n                            text: kendo.htmlEncode(kendo.getter(resource.dataTextField)(data[dataIndex])),\n                            color: kendo.getter(resource.dataColorField)(data[dataIndex]),\n                            field: resource.field,\n                            title: resource.title,\n                            name: resource.name,\n                            value: value\n                        }),\n                        className: \"k-slot-cell k-scheduler-group-cell\",\n                        parentValue: parentValue,\n                        value: value\n                    };\n\n                    // filter-out those inner resources that are not relevant\n                    obj[name] = createLayoutConfiguration(name, resources.slice(1), inner, template, dates, times, value);\n\n                    configuration.push(obj);\n                }\n            }\n            return configuration;\n        }\n        return inner;\n    }\n\n    function groupEqFilter(value) {\n        return function(item) {\n            if (Array.isArray(item) || item instanceof kendo.data.ObservableArray) {\n                for (var idx = 0; idx < item.length; idx++) {\n                    if (item[idx] == value) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n            return item == value;\n        };\n    }\n\n    var selectedStateRegExp = /\\s*k-state-selected/;\n    function addSelectedState(cell) {\n        cell.className = cell.className.replace(selectedStateRegExp, \"\") + \" k-state-selected\";\n    }\n\n    $.extend(ui.SchedulerView, {\n        createColumns: createColumns,\n        createRows: createRows,\n        rangeIndex: rangeIndex,\n        collidingEvents: collidingEvents,\n        groupEqFilter: groupEqFilter\n    });\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n\n"],"names":["define","__meta__","id","name","category","description","depends","hidden","scrollbarWidth","$","kendo","ui","scheduler","window","jQuery","getDate","date","Widget","outerHeight","_outerHeight","keys","NS","INVERSE_COLOR_CLASS","MIN_HORIZONTAL_SCROLL_SIZE","math","Math","SPACE","levels","values","key","result","collect","depth","level","idx","length","push","table","tableRows","className","trim","join","allDayTable","timesHeader","columnLevelCount","allDaySlot","rowCount","text","content","HINT","ResourceView","Class","extend","init","index","isRtl","enforceAllDaySlot","this","_index","_timeSlotCollections","_daySlotCollections","_isRtl","_enforceAllDaySlot","addTimeSlotCollection","startDate","endDate","_addCollection","addDaySlotCollection","collections","collection","SlotCollection","timeSlotCollectionCount","daySlotCollectionCount","daySlotByPosition","x","y","byDate","_slotByPosition","timeSlotByPosition","collectionIndex","slotIndex","count","slot","at","width","offsetWidth","height","offsetHeight","nextSlot","horizontalEnd","offsetLeft","verticalEnd","offsetTop","refresh","timeSlotRanges","startTime","endTime","start","_startSlot","firstIndex","lastIndex","inRange","end","_endSlot","MS_PER_DAY","first","last","_continuousRange","TimeSlotRange","daySlotRanges","isAllDay","DaySlotRange","range","startSlot","endSlot","startIndex","endIndex","ranges","head","tail","slotRanges","event","isDay","_startTime","toUtcTime","_endTime","undefined","isMultiDay","_startCollection","startInRange","_endCollection","endInRange","_getCollections","continuousSlot","reverse","pad","isDaySlot","firstSlot","lastSlot","upSlot","keepCollection","groupByDateVertically","that","moveToDaySlot","isFirstCell","_verticalSlot","downSlot","moveToTimeSlot","leftSlot","_horizontalSlot","rightSlot","step","swapCollection","_collection","multiday","time","_start","slotByStartDate","slotByEndDate","getSlotCollection","getTimeSlotCollection","getDaySlotCollection","SlotRange","options","innerHeight","events","addEvent","outerRect","snap","_rect","property","top","bottom","left","right","support","element","startOffset","startSlotDuration","endOffset","endSlotDuration","round","innerRect","innerWidth","groupIndex","_slots","_events","_end","_groupIndex","_collectionIndex","allday","addTimeSlot","isHorizontal","TimeSlot","addDaySlot","eventCount","DaySlot","Slot","clientWidth","clientHeight","timezone","toLocalDate","fn","apply","arguments","offsetX","rtl","offset","duration","difference","floor","children","firstChild","firstChildHeight","firstChildTop","Date","scrollbar","collidingEvents","elements","overlaps","rangeIndex","eventsForSlot","eventElement","slotStart","slotEnd","createColumns","eventElements","_createColumns","createRows","SchedulerView","call","_normalizeOptions","_scrollbar","_resizeHint","_moveHint","_cellId","guid","_resourcesForGroups","_selectedSlots","attr","messages","ariaEventLabel","on","to","allDay","prefix","visibleEndDate","setMilliseconds","workDayStart","workDayEnd","_isMobile","mobile","mobileOS","_addResourceView","resourceView","groups","dateForTitle","format","selectedDateFormat","shortDateForTitle","selectedShortDateFormat","mobileDateForTitle","selectedMobileDateFormat","_changeGroup","selection","previous","method","_isGroupedByDate","_changeDate","group","_changeGroupContinuously","_changeViewPeriod","_isInRange","newStart","newEnd","min","max","_horizontalSlots","multiple","horizontalRange","isVertical","_isVerticallyGrouped","_normalizeHorizontalSelection","tempSlot","_getNextHorizontalRange","_continuousSlot","_verticalSlots","verticalRange","_normalizeVerticalSelection","_getNextVerticalRange","_footer","html","today","footer","appendTo","e","preventDefault","action","currentDate","timezoneOffset","convert","getTimezoneOffset","trigger","view","constrainSelection","move","shift","handled","verticalByDate","slots","DOWN","UP","_updateDirection","LEFT","RIGHT","backward","moveToEventInGroup","selectedEvents","prev","_continuousEvents","found","i","lastSelected","uid","inArray","moveToEvent","allEvents","_getAllEvents","uniqueAllEvents","_getUniqueEvents","sortedEvents","_getSortedEvents","eventIndex","_getNextEventIndexBySlot","_getStartIdx","_getSelectedSlot","current","candidate","_current","has","_scrollTo","select","clearSelection","_selectEvents","_selectSlots","tempIndex","slotStartDate","eventStartDate","getTime","selectedEventIndex","each","concat","exists","j","sort","second","firstStartDate","secondStartDate","addSelectedState","groupEvents","groupEvent","add","indexOf","addClass","addDays","_resourceValue","resource","item","valuePrimitive","getter","dataValueField","_setResourceValue","groupLevelMember","value","setter","field","_resourceBySlot","resources","groupedResources","resourceIndex","groupOptions","nestedMember","orientation","rowLevels","columnLevels","dateGroupCompensation","groupLevel","passedChildren","numberOfChildren","_createResizeHint","css","_removeResizeHint","remove","_removeMoveHint","filter","container","elementOffset","elementOffsetDir","containerScroll","scrollTop","containerOffsetDir","bottomDistance","_inverseEventColor","eventColor","eventColorIsDark","Color","isDark","eventBackground","eventBackgroundIsDark","_eventTmpl","template","wrapper","settings","Template","templateSettings","paramName","type","state","storage","tmpl","bind","eventResources","data","dataSource","eventResource","dataIndex","get","resourceColor","dataColorField","title","dataTextField","color","createLayout","layout","allDayIndex","rows","splice","_isVirtualized","_trimRowLevels","find","append","_topSection","_bottomSection","_updateDomRowLevels","_groupOrientation","_outerWidth","_scroller","virtual","lastGroup","cachedRowLevels","levelMarker","_hasContentToRender","stopAtLevel","hasParent","parentLevel","parentValue","rowLevelIndex","stop","createNextLayout","clone","trimmedRowLevels","_height","_times","cell","rowSpan","parseInt","_virtualContent","render","_cachedEvents","_tryRenderContent","bufferHeight","groupCells","times","_rowLevelIndices","map","toArray","refreshLayout","toolbar","headerHeight","paddingDirection","eq","datesHeader","datesHeaderRows","isSchedulerHeightSet","el","initialHeight","newHeight","style","contentDiv","kineticScrollNeeded","timesTable","removeClass","thElm","_datesHeader","dateGroup","closest","wrap","parent","scrollLeft","touchScroller","avoidScrolling","target","movable","_touchScroller","scrollElement","sender","groupIdx","groupLength","_createDateLayout","dates","inner","createDateLayoutConfiguration","_createColumnsLayout","createLayoutConfiguration","_createRowsLayout","selectionByElement","removeAttr","destroy","calendarInfo","getCulture","calendars","standard","prevGroupSlot","nextGroupSlot","_eventOptionsForMove","_updateEventForResize","_updateEventForSelection","_innerElements","countInner","innerSpan","innerEls","innerCollection","isMobile","Array","split","rowHeaderRows","rowIndex","rowsBefore","currentRow","rowspan","dateTableRows","columnIndex","columnLevelIndex","th","column","colspan","allDayTableRows","lastLevel","td","cellContent","_formatEventAriaLabel","labelMessages","sameDate","labelText","toString","formats","re","processor","parts","channels","resolveColor","process","exec","r","g","b","normalizeByte","columns","eventRange","columnLength","endOverlaps","configuration","obj","minorTicks","itemParentValue","dataParentValueField","htmlEncode","slice","groupEqFilter","isArray","ObservableArray","prototype","charAt","substr","replace","toLowerCase","namedColors","isNaN","percBrightness","sqrt","brightnessValue","aqua","azure","beige","black","blue","brown","coral","cyan","darkblue","darkcyan","darkgray","darkgreen","darkorange","darkred","dimgray","fuchsia","gold","goldenrod","gray","green","greenyellow","indigo","ivory","khaki","lightblue","lightgrey","lightgreen","lightpink","lightyellow","lime","limegreen","linen","magenta","maroon","mediumblue","navy","olive","orange","orangered","orchid","pink","plum","purple","red","royalblue","salmon","silver","skyblue","slateblue","slategray","snow","steelblue","tan","teal","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","selectedStateRegExp","amd","a1","a2","a3"],"mappings":"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"}