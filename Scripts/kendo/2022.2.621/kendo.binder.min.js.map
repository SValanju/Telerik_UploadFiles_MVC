{"version":3,"file":"kendo.binder.min.js","sources":["kendo.binder.js"],"sourcesContent":["(function(f, define) {\n    define('kendo.binder',[ \"kendo.core\", \"kendo.data\" ], f);\n})(function() {\n\nvar __meta__ = { // jshint ignore:line\n    id: \"binder\",\n    name: \"MVVM\",\n    category: \"framework\",\n    description: \"Model View ViewModel (MVVM) is a design pattern which helps developers separate the Model (the data) from the View (the UI).\",\n    depends: [ \"core\", \"data\" ]\n};\n\n/*jshint eqnull: true */\n(function($, undefined) {\n    var kendo = window.kendo,\n        Observable = kendo.Observable,\n        ObservableObject = kendo.data.ObservableObject,\n        ObservableArray = kendo.data.ObservableArray,\n        toString = {}.toString,\n        binders = {},\n        Class = kendo.Class,\n        VALUE = \"value\",\n        SOURCE = \"source\",\n        EVENTS = \"events\",\n        CHECKED = \"checked\",\n        CSS = \"css\",\n        deleteExpando = true,\n        FUNCTION = \"function\",\n        CHANGE = \"change\";\n\n    (function() {\n        var a = document.createElement(\"a\");\n\n        try {\n            delete a.test;\n        } catch (e) {\n            deleteExpando = false;\n        }\n    })();\n\n    var Binding = Observable.extend( {\n        init: function(parents, path) {\n            var that = this;\n\n            Observable.fn.init.call(that);\n\n            that.source = parents[0];\n            that.parents = parents;\n            that.path = path;\n            that.dependencies = {};\n            that.dependencies[path] = true;\n            that.observable = that.source instanceof Observable;\n\n            that._access = function(e) {\n                that.dependencies[e.field] = true;\n            };\n\n            if (that.observable) {\n                that._change = function(e) {\n                    that.change(e);\n                };\n\n                that.source.bind(CHANGE, that._change);\n            }\n        },\n\n        _parents: function() {\n            var parents = this.parents;\n            var value = this.get();\n\n            if (value && typeof value.parent == \"function\") {\n                var parent = value.parent();\n\n                if ($.inArray(parent, parents) < 0) {\n                    parents = [parent].concat(parents);\n                }\n            }\n\n            return parents;\n        },\n\n        change: function(e) {\n            var dependency,\n                ch,\n                field = e.field,\n                that = this;\n\n            if (that.path === \"this\") {\n                that.trigger(CHANGE, e);\n            } else {\n                for (dependency in that.dependencies) {\n                    if (dependency.indexOf(field) === 0) {\n                       ch = dependency.charAt(field.length);\n\n                       if (!ch || ch === \".\" || ch === \"[\") {\n                            that.trigger(CHANGE, e);\n                            break;\n                       }\n                    }\n                }\n            }\n        },\n\n        start: function(source) {\n            source.bind(\"get\", this._access);\n        },\n\n        stop: function(source) {\n            source.unbind(\"get\", this._access);\n        },\n\n        get: function() {\n\n            var that = this,\n                source = that.source,\n                index = 0,\n                path = that.path,\n                result = source;\n\n            if (!that.observable) {\n                return result;\n            }\n\n            that.start(that.source);\n\n            result = source.get(path);\n\n            // Traverse the observable hierarchy if the binding is not resolved at the current level.\n            while (result === undefined && source) {\n\n                source = that.parents[++index];\n\n                if (source instanceof ObservableObject) {\n                    result = source.get(path);\n                }\n            }\n\n            // second pass try to get the parent from the object hierarchy\n            if (result === undefined) {\n                source = that.source; //get the initial source\n\n                while (result === undefined && source) {\n                    source = source.parent();\n\n                    if (source instanceof ObservableObject) {\n                        result = source.get(path);\n                    }\n                }\n            }\n\n            // If the result is a function - invoke it\n            if (typeof result === \"function\") {\n                index = path.lastIndexOf(\".\");\n\n                // If the function is a member of a nested observable object make that nested observable the context (this) of the function\n                if (index > 0) {\n                    source = source.get(path.substring(0, index));\n                }\n\n                // Invoke the function\n                that.start(source);\n\n                if (source !== that.source) {\n                    result = result.call(source, that.source);\n                } else {\n                    result = result.call(source);\n                }\n\n                that.stop(source);\n            }\n\n            // If the binding is resolved by a parent object\n            if (source && source !== that.source) {\n\n                that.currentSource = source; // save parent object\n\n                // Listen for changes in the parent object\n                source.unbind(CHANGE, that._change)\n                      .bind(CHANGE, that._change);\n            }\n\n            that.stop(that.source);\n\n            return result;\n        },\n\n        set: function(value) {\n            var source = this.currentSource || this.source;\n\n            var field = kendo.getter(this.path)(source);\n\n            if (typeof field === \"function\") {\n                if (source !== this.source) {\n                    field.call(source, this.source, value);\n                } else {\n                    field.call(source, value);\n                }\n            } else {\n                source.set(this.path, value);\n            }\n        },\n\n        destroy: function() {\n            if (this.observable) {\n                this.source.unbind(CHANGE, this._change);\n                if (this.currentSource) {\n                    this.currentSource.unbind(CHANGE, this._change);\n                }\n            }\n\n            this.unbind();\n        }\n    });\n\n    var EventBinding = Binding.extend( {\n        get: function() {\n            var source = this.source,\n                path = this.path,\n                index = 0,\n                handler;\n\n            handler = source.get(path);\n\n            while (!handler && source) {\n                source = this.parents[++index];\n\n                if (source instanceof ObservableObject) {\n                    handler = source.get(path);\n                }\n            }\n\n            if (!handler) {\n                return;\n            }\n\n            return handler.bind(source);\n        }\n    });\n\n    var TemplateBinding = Binding.extend( {\n        init: function(source, path, template) {\n            var that = this;\n\n            Binding.fn.init.call(that, source, path);\n\n            that.template = template;\n        },\n\n        render: function(value) {\n            var html;\n\n            this.start(this.source);\n\n            html = kendo.render(this.template, value);\n\n            this.stop(this.source);\n\n            return html;\n        }\n    });\n\n    var Binder = Class.extend({\n        init: function(element, bindings, options) {\n            this.element = element;\n            this.bindings = bindings;\n            this.options = options;\n        },\n\n        bind: function(binding, attribute) {\n            var that = this;\n\n            binding = attribute ? binding[attribute] : binding;\n\n            binding.bind(CHANGE, function(e) {\n                that.refresh(attribute || e);\n            });\n\n            that.refresh(attribute);\n        },\n\n        destroy: function() {\n        }\n    });\n\n    var TypedBinder = Binder.extend({\n        dataType: function() {\n            var dataType = this.element.getAttribute(\"data-\" + kendo.ns + \"type\") || this.element.type || \"text\";\n            return dataType.toLowerCase();\n        },\n\n        parsedValue: function() {\n            return this._parseValue(this.element.value, this.dataType());\n        },\n\n        _parseValue: function(value, dataType) {\n            if (dataType == \"date\") {\n                value = kendo.parseDate(value, \"yyyy-MM-dd\");\n            } else if (dataType == \"datetime-local\") {\n                value = kendo.parseDate(value, [\"yyyy-MM-ddTHH:mm:ss\", \"yyyy-MM-ddTHH:mm\"] );\n            } else if (dataType == \"number\") {\n                value = kendo.parseFloat(value);\n            } else if (dataType == \"boolean\") {\n                value = value.toLowerCase();\n                if (kendo.parseFloat(value) !== null) {\n                    value = Boolean(kendo.parseFloat(value));\n                } else {\n                    value = (value.toLowerCase() === \"true\");\n                }\n            }\n            return value;\n        }\n    });\n\n    binders.attr = Binder.extend({\n        refresh: function(key) {\n            this.element.setAttribute(key, this.bindings.attr[key].get());\n        }\n    });\n\n    binders.css = Binder.extend({\n        init: function(element, bindings, options) {\n            Binder.fn.init.call(this, element, bindings, options);\n            this.classes = {};\n        },\n        refresh: function(className) {\n            var element = $(this.element),\n                binding = this.bindings.css[className],\n                hasClass = this.classes[className] = binding.get();\n            if (hasClass) {\n                element.addClass(className);\n            } else {\n                element.removeClass(className);\n            }\n        }\n    });\n\n    binders.style = Binder.extend({\n        refresh: function(key) {\n            this.element.style[key] = this.bindings.style[key].get() || \"\";\n        }\n    });\n\n    binders.enabled = Binder.extend({\n        refresh: function() {\n            if (this.bindings.enabled.get()) {\n                this.element.removeAttribute(\"disabled\");\n            } else {\n                this.element.setAttribute(\"disabled\", \"disabled\");\n            }\n        }\n    });\n\n    binders.readonly = Binder.extend({\n       refresh: function() {\n            if (this.bindings.readonly.get()) {\n                this.element.setAttribute(\"readonly\", \"readonly\");\n            } else {\n                this.element.removeAttribute(\"readonly\");\n            }\n       }\n    });\n\n    binders.disabled = Binder.extend({\n        refresh: function() {\n            if (this.bindings.disabled.get()) {\n                this.element.setAttribute(\"disabled\", \"disabled\");\n            } else {\n                this.element.removeAttribute(\"disabled\");\n            }\n        }\n    });\n\n    binders.events = Binder.extend({\n        init: function(element, bindings, options) {\n            Binder.fn.init.call(this, element, bindings, options);\n            this.handlers = {};\n        },\n\n        refresh: function(key) {\n            var element = $(this.element),\n                binding = this.bindings.events[key],\n                handler = this.handlers[key];\n\n            if (handler) {\n                element.off(key, handler);\n            }\n\n            handler = this.handlers[key] = binding.get();\n\n            element.on(key, binding.source, handler);\n        },\n\n        destroy: function() {\n            var element = $(this.element),\n                handler;\n\n            for (handler in this.handlers) {\n                element.off(handler, this.handlers[handler]);\n            }\n        }\n    });\n\n    binders.text = Binder.extend({\n        refresh: function() {\n            var text = this.bindings.text.get();\n            var dataFormat = this.element.getAttribute(\"data-\" + kendo.ns + \"format\") || \"\";\n            if (text == null) {\n                text = \"\";\n            }\n\n            $(this.element).text(kendo.toString(text, dataFormat));\n        }\n    });\n\n    binders.visible = Binder.extend({\n        refresh: function() {\n            if (this.bindings.visible.get()) {\n                this.element.style.display = \"\";\n            } else {\n                this.element.style.display = \"none\";\n            }\n        }\n    });\n\n    binders.invisible = Binder.extend({\n        refresh: function() {\n            if (!this.bindings.invisible.get()) {\n                this.element.style.display = \"\";\n            } else {\n                this.element.style.display = \"none\";\n            }\n        }\n  });\n\n    binders.html = Binder.extend({\n        refresh: function() {\n            this.element.innerHTML = this.bindings.html.get();\n        }\n    });\n\n    binders.value = TypedBinder.extend({\n        init: function(element, bindings, options) {\n            TypedBinder.fn.init.call(this, element, bindings, options);\n\n            this._change = this.change.bind(this);\n            this.eventName = options.valueUpdate || CHANGE;\n\n            $(this.element).on(this.eventName, this._change);\n\n            this._initChange = false;\n        },\n\n        change: function() {\n            this._initChange = this.eventName != CHANGE;\n\n            this.bindings[VALUE].set(this.parsedValue());\n\n            this._initChange = false;\n        },\n\n        refresh: function() {\n            if (!this._initChange) {\n                var value = this.bindings[VALUE].get();\n\n                if (value == null) {\n                    value = \"\";\n                }\n\n                var type = this.dataType();\n\n                if (type == \"date\") {\n                    value = kendo.toString(value, \"yyyy-MM-dd\");\n                } else if (type == \"datetime-local\") {\n                    value = kendo.toString(value, \"yyyy-MM-ddTHH:mm:ss\");\n                }\n\n                this.element.value = value;\n            }\n\n            this._initChange = false;\n        },\n\n        destroy: function() {\n            $(this.element).off(this.eventName, this._change);\n        }\n    });\n\n    binders.source = Binder.extend({\n        init: function(element, bindings, options) {\n            Binder.fn.init.call(this, element, bindings, options);\n\n            var source = this.bindings.source.get();\n\n            if (source instanceof kendo.data.DataSource && options.autoBind !== false) {\n                source.fetch();\n            }\n        },\n\n        refresh: function(e) {\n            var that = this,\n                source = that.bindings.source.get();\n\n            if (source instanceof ObservableArray || source instanceof kendo.data.DataSource) {\n                e = e || {};\n\n                if (e.action == \"add\") {\n                    that.add(e.index, e.items);\n                } else if (e.action == \"remove\") {\n                    that.remove(e.index, e.items);\n                } else if (e.action != \"itemchange\") {\n                    that.render();\n                }\n            } else {\n                that.render();\n            }\n        },\n\n        container: function() {\n            var element = this.element;\n\n            if (element.nodeName.toLowerCase() == \"table\") {\n                if (!element.tBodies[0]) {\n                    element.appendChild(document.createElement(\"tbody\"));\n                }\n                element = element.tBodies[0];\n            }\n\n            return element;\n        },\n\n        template: function() {\n            var options = this.options,\n                template = options.template,\n                nodeName = this.container().nodeName.toLowerCase();\n\n            if (!template) {\n                if (nodeName == \"select\") {\n                    if (options.valueField || options.textField) {\n                        template = kendo.format('<option value=\"#:{0}#\">#:{1}#</option>',\n                            options.valueField || options.textField, options.textField || options.valueField);\n                    } else {\n                        template = \"<option>#:data#</option>\";\n                    }\n                } else if (nodeName == \"tbody\") {\n                    template = \"<tr><td>#:data#</td></tr>\";\n                } else if (nodeName == \"ul\" || nodeName == \"ol\") {\n                    template = \"<li>#:data#</li>\";\n                } else {\n                    template = \"#:data#\";\n                }\n                template = kendo.template(template);\n            }\n\n            return template;\n        },\n\n        add: function(index, items) {\n            var element = this.container(),\n                parents,\n                idx,\n                length,\n                child,\n                clone = element.cloneNode(false),\n                reference = element.children[index];\n\n            $(clone).html(kendo.render(this.template(), items));\n\n            if (clone.children.length) {\n                parents = this.bindings.source._parents();\n\n                for (idx = 0, length = items.length; idx < length; idx++) {\n                    child = clone.children[0];\n                    element.insertBefore(child, reference || null);\n                    bindElement(child, items[idx], this.options.roles, [items[idx]].concat(parents));\n                }\n            }\n        },\n\n        remove: function(index, items) {\n            var idx, element = this.container();\n\n            for (idx = 0; idx < items.length; idx++) {\n                var child = element.children[index];\n                unbindElementTree(child, true);\n                if (child.parentNode == element) {\n                    element.removeChild(child);\n                }\n            }\n        },\n\n        render: function() {\n            var source = this.bindings.source.get(),\n                parents,\n                idx,\n                length,\n                element = this.container(),\n                template = this.template();\n\n            if (source == null) {\n                return;\n            }\n\n            if (source instanceof kendo.data.DataSource) {\n                source = source.view();\n            }\n\n            if (!(source instanceof ObservableArray) && toString.call(source) !== \"[object Array]\") {\n                source = [source];\n            }\n\n            if (this.bindings.template) {\n                unbindElementChildren(element, true);\n\n                $(element).html(this.bindings.template.render(source));\n\n                if (element.children.length) {\n                    parents = this.bindings.source._parents();\n\n                    for (idx = 0, length = source.length; idx < length; idx++) {\n                        bindElement(element.children[idx], source[idx], this.options.roles, [source[idx]].concat(parents));\n                    }\n                }\n            } else {\n                $(element).html(kendo.render(template, source));\n            }\n        }\n    });\n\n    binders.input = {\n        checked: TypedBinder.extend({\n            init: function(element, bindings, options) {\n                TypedBinder.fn.init.call(this, element, bindings, options);\n                this._change = this.change.bind(this);\n\n                $(this.element).change(this._change);\n            },\n\n            change: function() {\n                var element = this.element;\n                var value = this.value();\n\n                if (element.type == \"radio\") {\n                    value = this.parsedValue();\n                    this.bindings[CHECKED].set(value);\n                } else if (element.type == \"checkbox\") {\n                    var source = this.bindings[CHECKED].get();\n                    var index;\n\n                    if (source instanceof ObservableArray) {\n                        value = this.parsedValue();\n                        if (value instanceof Date) {\n                            for (var i = 0; i < source.length; i++) {\n                                if (source[i] instanceof Date && +source[i] === +value) {\n                                    index = i;\n                                    break;\n                                }\n                            }\n                        } else {\n                            index = source.indexOf(value);\n                        }\n                        if (index > -1) {\n                            source.splice(index, 1);\n                        } else {\n                            source.push(value);\n                        }\n                    } else {\n                        this.bindings[CHECKED].set(value);\n                    }\n                }\n            },\n\n            refresh: function() {\n                var value = this.bindings[CHECKED].get(),\n                    source = value,\n                    type = this.dataType(),\n                    element = this.element;\n\n                if (element.type == \"checkbox\") {\n                    if (source instanceof ObservableArray) {\n                        var index = -1;\n                        value = this.parsedValue();\n                        if (value instanceof Date) {\n                            for (var i = 0; i < source.length; i++) {\n                                if (source[i] instanceof Date && +source[i] === +value) {\n                                    index = i;\n                                    break;\n                                }\n                            }\n                        } else {\n                            index = source.indexOf(value);\n                        }\n                        element.checked = (index >= 0);\n                    } else {\n                        element.checked = source;\n                    }\n                } else if (element.type == \"radio\") {\n                    if (type == \"date\") {\n                        value = kendo.toString(value, \"yyyy-MM-dd\");\n                    } else if (type == \"datetime-local\") {\n                        value = kendo.toString(value, \"yyyy-MM-ddTHH:mm:ss\");\n                    }\n\n                    if (value !== null && typeof(value) !== \"undefined\" && element.value === value.toString()) {\n                        element.checked = true;\n                    } else {\n                        element.checked = false;\n                    }\n                }\n            },\n\n            value: function() {\n                var element = this.element,\n                    value = element.value;\n\n                if (element.type == \"checkbox\") {\n                    value = element.checked;\n                }\n\n                return value;\n            },\n            destroy: function() {\n                $(this.element).off(CHANGE, this._change);\n            }\n        })\n    };\n\n    binders.select = {\n        source: binders.source.extend({\n            refresh: function(e) {\n                var that = this,\n                    source = that.bindings.source.get();\n\n                if (source instanceof ObservableArray || source instanceof kendo.data.DataSource) {\n                    e = e || {};\n                    if (e.action == \"add\") {\n                        that.add(e.index, e.items);\n                    } else if (e.action == \"remove\") {\n                        that.remove(e.index, e.items);\n                    } else if (e.action == \"itemchange\" || e.action === undefined) {\n                        that.render();\n                        if (that.bindings.value) {\n                            if (that.bindings.value) {\n                                var val = retrievePrimitiveValues(that.bindings.value.get(), $(that.element).data(\"valueField\"));\n                                if (val === null) {\n                                    that.element.selectedIndex = -1;\n                                } else {\n                                    that.element.value = val;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    that.render();\n                }\n            }\n        }),\n        value: TypedBinder.extend({\n            init: function(target, bindings, options) {\n                TypedBinder.fn.init.call(this, target, bindings, options);\n\n                this._change = this.change.bind(this);\n                $(this.element).change(this._change);\n            },\n\n            parsedValue: function() {\n                var dataType = this.dataType();\n                var values = [];\n                var value, option, idx, length;\n                for (idx = 0, length = this.element.options.length; idx < length; idx++) {\n                    option = this.element.options[idx];\n\n                    if (option.selected) {\n                        value = option.attributes.value;\n\n                        if (value && value.specified) {\n                            value = option.value;\n                        } else {\n                            value = option.text;\n                        }\n\n                        values.push(this._parseValue(value, dataType));\n                    }\n                }\n                return values;\n            },\n\n            change: function() {\n                var values = [],\n                    element = this.element,\n                    source,\n                    field = this.options.valueField || this.options.textField,\n                    valuePrimitive = this.options.valuePrimitive,\n                    option,\n                    valueIndex,\n                    value,\n                    idx,\n                    length;\n\n                for (idx = 0, length = element.options.length; idx < length; idx++) {\n                    option = element.options[idx];\n\n                    if (option.selected) {\n                        value = option.attributes.value;\n\n                        if (value && value.specified) {\n                            value = option.value;\n                        } else {\n                            value = option.text;\n                        }\n\n                        if (field) {\n                            values.push(value);\n                        } else {\n                            values.push(this._parseValue(value, this.dataType()));\n                        }\n\n                    }\n                }\n\n                if (field) {\n                    source = this.bindings.source.get();\n                    if (source instanceof kendo.data.DataSource) {\n                        source = source.view();\n                    }\n\n                    for (valueIndex = 0; valueIndex < values.length; valueIndex++) {\n                        for (idx = 0, length = source.length; idx < length; idx++) {\n                            var sourceValue = source[idx].get(field);\n                            var match = (String(sourceValue) === values[valueIndex]);\n                            if (match) {\n                                values[valueIndex] = source[idx];\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                value = this.bindings[VALUE].get();\n                if (value instanceof ObservableArray) {\n                    value.splice.apply(value, [0, value.length].concat(values));\n                } else if (!valuePrimitive && (value instanceof ObservableObject || value === null || value === undefined || !field)) {\n                    this.bindings[VALUE].set(values[0]);\n                } else {\n                    this.bindings[VALUE].set(values[0].get(field));\n                }\n            },\n            refresh: function() {\n                var optionIndex,\n                    element = this.element,\n                    options = element.options,\n                    value = this.bindings[VALUE].get(),\n                    values = value,\n                    field = this.options.valueField || this.options.textField,\n                    found = false,\n                    type = this.dataType(),\n                    optionValue;\n\n                if (!(values instanceof ObservableArray)) {\n                    values = new ObservableArray([value]);\n                }\n\n                element.selectedIndex = -1;\n\n                for (var valueIndex = 0; valueIndex < values.length; valueIndex++) {\n                    value = values[valueIndex];\n\n\n                    if (field && value instanceof ObservableObject) {\n                        value = value.get(field);\n                    }\n\n                    if (type == \"date\") {\n                        value = kendo.toString(values[valueIndex], \"yyyy-MM-dd\");\n                    } else if (type == \"datetime-local\") {\n                        value = kendo.toString(values[valueIndex], \"yyyy-MM-ddTHH:mm:ss\");\n                    }\n\n                    for (optionIndex = 0; optionIndex < options.length; optionIndex++) {\n                        optionValue = options[optionIndex].value;\n\n                        if (optionValue === \"\" && value !== \"\") {\n                            optionValue = options[optionIndex].text;\n                        }\n\n                        if (value != null && optionValue == value.toString()) {\n                            options[optionIndex].selected = true;\n                            found = true;\n                        }\n                    }\n                }\n            },\n            destroy: function() {\n                $(this.element).off(CHANGE, this._change);\n            }\n        })\n    };\n\n    function dataSourceBinding(bindingName, fieldName, setter) {\n        return Binder.extend({\n            init: function(widget, bindings, options) {\n                var that = this;\n\n                Binder.fn.init.call(that, widget.element[0], bindings, options);\n\n                that.widget = widget;\n                that._dataBinding = that.dataBinding.bind(that);\n                that._dataBound = that.dataBound.bind(that);\n                that._itemChange = that.itemChange.bind(that);\n            },\n\n            itemChange: function(e) {\n                bindElement(e.item[0], e.data, this._ns(e.ns), [e.data].concat(this.bindings[bindingName]._parents()));\n            },\n\n            dataBinding: function(e) {\n                var idx,\n                    length,\n                    widget = this.widget,\n                    items = e.removedItems || widget.items();\n\n                for (idx = 0, length = items.length; idx < length; idx++) {\n                    unbindElementTree(items[idx], false);\n                }\n            },\n\n            _ns: function(ns) {\n                ns = ns || kendo.ui;\n                var all = [ kendo.ui, kendo.dataviz.ui, kendo.mobile.ui ];\n                all.splice($.inArray(ns, all), 1);\n                all.unshift(ns);\n\n                return kendo.rolesFromNamespaces(all);\n            },\n\n            dataBound: function(e) {\n                var idx,\n                    length,\n                    widget = this.widget,\n                    items = e.addedItems || widget.items(),\n                    dataSource = widget[fieldName],\n                    view,\n                    parents,\n                    hds = kendo.data.HierarchicalDataSource;\n\n                if (hds && dataSource instanceof hds) {\n                    // suppress binding of HDS items, because calling view() on root\n                    // will return only root items, and widget.items() returns all items\n                    return;\n                }\n\n                if (items.length) {\n                    view = e.addedDataItems || dataSource.flatView();\n                    parents = this.bindings[bindingName]._parents();\n\n                    for (idx = 0, length = view.length; idx < length; idx++) {\n                        if (items[idx]) {\n                            bindElement(items[idx], view[idx], this._ns(e.ns), [view[idx]].concat(parents));\n                        }\n                    }\n                }\n            },\n\n            refresh: function(e) {\n                var that = this,\n                    source,\n                    widget = that.widget,\n                    select, multiselect, dropdowntree;\n\n                e = e || {};\n\n                if (!e.action) {\n                    that.destroy();\n\n                    widget.bind(\"dataBinding\", that._dataBinding);\n                    widget.bind(\"dataBound\", that._dataBound);\n                    widget.bind(\"itemChange\", that._itemChange);\n\n                    source = that.bindings[bindingName].get();\n\n                    if (widget[fieldName] instanceof kendo.data.DataSource && widget[fieldName] != source) {\n                        if (source instanceof kendo.data.DataSource) {\n                            widget[setter](source);\n                        } else if (source && source._dataSource) {\n                            widget[setter](source._dataSource);\n                        } else {\n                            select = kendo.ui.Select && widget instanceof kendo.ui.Select;\n                            multiselect = kendo.ui.MultiSelect && widget instanceof kendo.ui.MultiSelect;\n                            dropdowntree = kendo.ui.DropDownTree && widget instanceof kendo.ui.DropDownTree;\n\n                            if (!dropdowntree) {\n                                widget[fieldName].data(source);\n                            } else {\n                                widget.treeview[fieldName].data(source);\n                            }\n\n                            if (that.bindings.value && (select || multiselect)) {\n                                widget.value(retrievePrimitiveValues(that.bindings.value.get(), widget.options.dataValueField));\n                            }\n                        }\n                    }\n                }\n            },\n\n            destroy: function() {\n                var widget = this.widget;\n\n                widget.unbind(\"dataBinding\", this._dataBinding);\n                widget.unbind(\"dataBound\", this._dataBound);\n                widget.unbind(\"itemChange\", this._itemChange);\n            }\n        });\n    }\n\n    binders.widget = {\n        events: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n                this.widget = widget;\n                this.handlers = {};\n            },\n\n            refresh: function(key) {\n                var binding = this.bindings.events[key],\n                    handler = this.handlers[key];\n\n                if (handler) {\n                    this.widget.unbind(key, handler);\n                }\n\n                handler = binding.get();\n\n                this.handlers[key] = function(e) {\n                    e.data = binding.source;\n\n                    handler(e);\n\n                    if (e.data === binding.source) {\n                        delete e.data;\n                    }\n                };\n\n                this.widget.bind(key, this.handlers[key]);\n            },\n\n            destroy: function() {\n                var handler;\n\n                for (handler in this.handlers) {\n                    this.widget.unbind(handler, this.handlers[handler]);\n                }\n            }\n        }),\n\n        checked: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                this.widget = widget;\n                this._change = this.change.bind(this);\n                this.widget.bind(CHANGE, this._change);\n            },\n            change: function() {\n                this.bindings[CHECKED].set(this.value());\n            },\n\n            refresh: function() {\n                if (this.element.type === \"radio\") {\n                    this.widget.check(this.bindings[CHECKED].get().toString() === this.value());\n                } else {\n                    this.widget.check(this.bindings[CHECKED].get() === true);\n                }\n            },\n\n            value: function() {\n                var element = this.element,\n                    value = element.value;\n\n                if (value == \"on\" || value == \"off\" || this.element.type == \"checkbox\") {\n                    value = element.checked;\n                }\n\n                return value;\n            },\n\n            destroy: function() {\n                this.widget.unbind(CHANGE, this._change);\n            }\n        }),\n\n        start: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n                this._change = this.change.bind(this);\n                this.widget = widget;\n                this.widget.bind(CHANGE, this._change);\n            },\n\n            change: function() {\n                this.bindings.start.set(this.widget.range().start);\n            },\n\n            refresh: function() {\n                var that = this;\n                var start = this.bindings.start.get();\n                var end = that.widget._range ? that.widget._range.end : null;\n                this.widget.range({ start: start, end: end });\n            },\n\n            destroy: function() {\n                this.widget.unbind(CHANGE, this._change);\n            }\n        }),\n\n        end: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n                this._change = this.change.bind(this);\n                this.widget = widget;\n                this.widget.bind(CHANGE, this._change);\n            },\n\n            change: function() {\n                this.bindings.end.set(this.widget.range().end);\n            },\n\n            refresh: function() {\n                var that = this;\n                var end = this.bindings.end.get();\n                var start = that.widget._range ? that.widget._range.start : null;\n                this.widget.range({ start: start, end: end });\n            },\n\n            destroy: function() {\n                this.widget.unbind(CHANGE, this._change);\n            }\n        }),\n\n        visible: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                this.widget = widget;\n            },\n\n            refresh: function() {\n                var visible = this.bindings.visible.get();\n                this.widget.wrapper[0].style.display = visible ? \"\" : \"none\";\n            }\n        }),\n\n        invisible: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                this.widget = widget;\n            },\n\n            refresh: function() {\n                var invisible = this.bindings.invisible.get();\n                this.widget.wrapper[0].style.display = invisible ? \"none\" : \"\";\n            }\n        }),\n\n        floatingLabel: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                if (!widget.floatingLabel) {\n                    return;\n                }\n\n                widget.floatingLabel.refresh();\n            }\n        }),\n\n        enabled: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                this.widget = widget;\n            },\n\n            refresh: function() {\n                if (this.widget.enable) {\n                    this.widget.enable(this.bindings.enabled.get());\n                }\n            }\n        }),\n\n        disabled: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                this.widget = widget;\n            },\n\n            refresh: function() {\n                if (this.widget.enable) {\n                    this.widget.enable(!this.bindings.disabled.get());\n                }\n            }\n        }),\n\n        source: dataSourceBinding(\"source\", \"dataSource\", \"setDataSource\"),\n\n        value: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                this.widget = widget;\n                this._change = this.change.bind(this);\n                this.widget.first(CHANGE, this._change);\n\n                var value = this.bindings.value.get();\n\n                this._valueIsObservableObject = !options.valuePrimitive && (value == null || value instanceof ObservableObject);\n                this._valueIsObservableArray = value instanceof ObservableArray;\n                this._initChange = false;\n            },\n\n            _source: function() {\n                var source;\n\n                if (this.widget.dataItem) {\n                    source = this.widget.dataItem();\n                    if (source && source instanceof ObservableObject) {\n                        return [source];\n                    }\n                }\n\n                if (this.bindings.source) {\n                    source = this.bindings.source.get();\n                }\n\n                if (!source || source instanceof kendo.data.DataSource) {\n                    source = this.widget.dataSource.flatView();\n                }\n\n                return source;\n            },\n\n            change: function() {\n                var value = this.widget.value(),\n                    field = this.options.dataValueField || this.options.dataTextField,\n                    isArray = toString.call(value) === \"[object Array]\",\n                    isObservableObject = this._valueIsObservableObject,\n                    valueIndex, valueLength, values = [],\n                    sourceItem, sourceValue,\n                    idx, length, source;\n\n                this._initChange = true;\n\n                if (field) {\n\n                    if (value === \"\" && (isObservableObject || this.options.valuePrimitive)) {\n                        value = null;\n                    } else {\n                        source = this._source();\n\n                        if (isArray) {\n                            valueLength = value.length;\n                            values = value.slice(0);\n                        }\n\n                        for (idx = 0, length = source.length; idx < length; idx++) {\n                            sourceItem = source[idx];\n                            sourceValue = sourceItem.get(field);\n\n                            if (isArray) {\n                                for (valueIndex = 0; valueIndex < valueLength; valueIndex++) {\n                                    if (sourceValue == values[valueIndex]) {\n                                        values[valueIndex] = sourceItem;\n                                        break;\n                                    }\n                                }\n                            } else if (sourceValue == value) {\n                                value = isObservableObject ? sourceItem : sourceValue;\n                                break;\n                            }\n                        }\n\n                        if (values[0]) {\n                            if (this._valueIsObservableArray) {\n                                value = values;\n                            } else if (isObservableObject || !field) {\n                                value = values[0];\n                            } else {\n                                value = values[0].get(field);\n                            }\n                        }\n                    }\n                }\n\n                this.bindings.value.set(value);\n                this._initChange = false;\n            },\n\n            refresh: function() {\n                if (!this._initChange) {\n                    var widget = this.widget;\n                    var options = widget.options;\n                    var textField = options.dataTextField;\n                    var valueField = options.dataValueField || textField;\n                    var value = this.bindings.value.get();\n                    var text = options.text || \"\";\n                    var idx = 0, length;\n                    var values = [];\n\n                    if (value === undefined) {\n                        value = null;\n                    }\n\n                    if (valueField) {\n                        if (value instanceof ObservableArray) {\n                            for (length = value.length; idx < length; idx++) {\n                                values[idx] = value[idx].get(valueField);\n                            }\n                            value = values;\n                        } else if (value instanceof ObservableObject) {\n                            text = value.get(textField);\n                            value = value.get(valueField);\n                        }\n                    }\n\n                    if (options.autoBind === false && !options.cascadeFrom && widget.listView && !widget.listView.bound()) {\n                        if (textField === valueField && !text) {\n                            text = value;\n                        }\n\n                        if (!text && (value || value === 0) && options.valuePrimitive) {\n                            widget.value(value);\n                        } else {\n                            widget._preselect(value, text);\n                        }\n                    } else {\n                        widget.value(value);\n                    }\n                }\n\n                this._initChange = false;\n            },\n\n            destroy: function() {\n                this.widget.unbind(CHANGE, this._change);\n            }\n        }),\n        dropdowntree: {\n            value: Binder.extend({\n                init: function(widget, bindings, options) {\n                    Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                    this.widget = widget;\n                    this._change = this.change.bind(this);\n                    this.widget.first(CHANGE, this._change);\n                    this._initChange = false;\n                },\n\n                change: function() {\n                    var that = this,\n                        oldValues = that.bindings[VALUE].get(),\n                        valuePrimitive = that.options.valuePrimitive,\n                        selectedNode = that.widget.treeview.select(),\n                        nonPrimitiveValues = that.widget._isMultipleSelection() ? that.widget._getAllChecked() : (that.widget.treeview.dataItem(selectedNode) || that.widget.value()),\n                        newValues = (valuePrimitive || that.widget.options.autoBind === false) ? that.widget.value() : nonPrimitiveValues;\n\n                    var field = this.options.dataValueField || this.options.dataTextField;\n\n                    newValues = newValues.slice ? newValues.slice(0) : newValues;\n\n                    that._initChange = true;\n\n                    if (oldValues instanceof ObservableArray) {\n                        var remove = [];\n                        var newLength = newValues.length;\n                        var i = 0, j = 0;\n                        var old = oldValues[i];\n                        var same = false;\n                        var removeIndex;\n                        var newValue;\n                        var found;\n\n                        while (old !== undefined) {\n                            found = false;\n                            for (j = 0; j < newLength; j++) {\n                                if (valuePrimitive) {\n                                    same = newValues[j] == old;\n                                } else {\n                                    newValue = newValues[j];\n\n                                    newValue = newValue.get ? newValue.get(field) : newValue;\n                                    same = newValue == (old.get ? old.get(field) : old);\n                                }\n\n                                if (same) {\n                                    newValues.splice(j, 1);\n                                    newLength -= 1;\n                                    found = true;\n                                    break;\n                                }\n                            }\n\n                            if (!found) {\n                                remove.push(old);\n                                arraySplice(oldValues, i, 1);\n                                removeIndex = i;\n                            } else {\n                                i += 1;\n                            }\n\n                            old = oldValues[i];\n                        }\n\n                        arraySplice(oldValues, oldValues.length, 0, newValues);\n\n                        if (remove.length) {\n                            oldValues.trigger(\"change\", {\n                                action: \"remove\",\n                                items: remove,\n                                index: removeIndex\n                            });\n                        }\n\n                        if (newValues.length) {\n                            oldValues.trigger(\"change\", {\n                                action: \"add\",\n                                items: newValues,\n                                index: oldValues.length - 1\n                            });\n                        }\n                    } else {\n                        that.bindings[VALUE].set(newValues);\n                    }\n\n                    that._initChange = false;\n                },\n\n                refresh: function() {\n                    if (!this._initChange) {\n                        var options = this.options,\n                            widget = this.widget,\n                            field = options.dataValueField || options.dataTextField,\n                            value = this.bindings.value.get(),\n                            data = value,\n                            idx = 0, length,\n                            values = [],\n                            selectedValue;\n\n                        if (field) {\n                            if (value instanceof ObservableArray) {\n                                for (length = value.length; idx < length; idx++) {\n                                    selectedValue = value[idx];\n                                    values[idx] = selectedValue.get ? selectedValue.get(field) : selectedValue;\n                                }\n                                value = values;\n                            } else if (value instanceof ObservableObject) {\n                                value = value.get(field);\n                            }\n                        }\n                        if (options.autoBind === false && options.valuePrimitive !== true) {\n                            widget._preselect(data, value);\n                        } else {\n                            widget.value(value);\n                        }\n                   }\n                },\n\n                destroy: function() {\n                    this.widget.unbind(CHANGE, this._change);\n                }\n            })\n        },\n        gantt: {\n            dependencies: dataSourceBinding(\"dependencies\", \"dependencies\", \"setDependenciesDataSource\")\n        },\n\n        multiselect: {\n            value: Binder.extend({\n                init: function(widget, bindings, options) {\n                    Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                    this.widget = widget;\n                    this._change = this.change.bind(this);\n                    this.widget.first(CHANGE, this._change);\n                    this._initChange = false;\n                },\n\n                change: function() {\n                    var that = this,\n                        oldValues = that.bindings[VALUE].get(),\n                        valuePrimitive = that.options.valuePrimitive,\n                        newValues = valuePrimitive ? that.widget.value() : that.widget.dataItems();\n\n                    var field = this.options.dataValueField || this.options.dataTextField;\n\n                    newValues = newValues.slice(0);\n\n                    that._initChange = true;\n\n                    if (oldValues instanceof ObservableArray) {\n                        var remove = [];\n\n                        var newLength = newValues.length;\n\n                        var i = 0, j = 0;\n                        var old = oldValues[i];\n                        var same = false;\n                        var removeIndex;\n                        var newValue;\n                        var found;\n\n                        while (old !== undefined) {\n                            found = false;\n                            for (j = 0; j < newLength; j++) {\n                                if (valuePrimitive) {\n                                    same = newValues[j] == old;\n                                } else {\n                                    newValue = newValues[j];\n\n                                    newValue = newValue.get ? newValue.get(field) : newValue;\n                                    same = newValue == (old.get ? old.get(field) : old);\n                                }\n\n                                if (same) {\n                                    newValues.splice(j, 1);\n                                    newLength -= 1;\n                                    found = true;\n                                    break;\n                                }\n                            }\n\n                            if (!found) {\n                                remove.push(old);\n                                arraySplice(oldValues, i, 1);\n                                removeIndex = i;\n                            } else {\n                                i += 1;\n                            }\n\n                            old = oldValues[i];\n                        }\n\n                        arraySplice(oldValues, oldValues.length, 0, newValues);\n\n                        if (remove.length) {\n                            oldValues.trigger(\"change\", {\n                                action: \"remove\",\n                                items: remove,\n                                index: removeIndex\n                            });\n                        }\n\n                        if (newValues.length) {\n                            oldValues.trigger(\"change\", {\n                                action: \"add\",\n                                items: newValues,\n                                index: oldValues.length - 1\n                            });\n                        }\n                    } else {\n                        that.bindings[VALUE].set(newValues);\n                    }\n\n                    that._initChange = false;\n                },\n\n                refresh: function() {\n                    if (!this._initChange) {\n                        var options = this.options,\n                            widget = this.widget,\n                            field = options.dataValueField || options.dataTextField,\n                            value = this.bindings.value.get(),\n                            data = value,\n                            idx = 0, length,\n                            values = [],\n                            selectedValue;\n\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        if (field) {\n                            if (value instanceof ObservableArray) {\n                                for (length = value.length; idx < length; idx++) {\n                                    selectedValue = value[idx];\n                                    values[idx] = selectedValue.get ? selectedValue.get(field) : selectedValue;\n                                }\n                                value = values;\n                            } else if (value instanceof ObservableObject) {\n                                value = value.get(field);\n                            }\n                        }\n\n                        if (options.autoBind === false && options.valuePrimitive !== true && !widget._isBound()) {\n                            widget._preselect(data, value);\n                        } else {\n                            widget.value(value);\n                        }\n                    }\n                },\n\n                destroy: function() {\n                    this.widget.unbind(CHANGE, this._change);\n                }\n\n            })\n        },\n        scheduler: {\n            source: dataSourceBinding(\"source\", \"dataSource\", \"setDataSource\").extend({\n                dataBound: function(e) {\n                    var idx;\n                    var length;\n                    var widget = this.widget;\n                    var elements = e.addedItems || widget.items();\n                    var data, parents;\n\n                    if (elements.length) {\n                        data = e.addedDataItems || widget.dataItems();\n                        parents = this.bindings.source._parents();\n\n                        for (idx = 0, length = data.length; idx < length; idx++) {\n                            bindElement(elements[idx], data[idx], this._ns(e.ns), [data[idx]].concat(parents));\n                        }\n                    }\n                }\n            })\n        },\n\n        grid: {\n            source: dataSourceBinding(\"source\", \"dataSource\", \"setDataSource\").extend({\n                dataBound: function(e) {\n                    var idx,\n                    length,\n                    widget = this.widget,\n                    elements = e.addedItems || widget.items(),\n                    parents,\n                    data;\n\n                    if (elements.length) {\n                        data = e.addedDataItems || widget.dataItems();\n                        parents = this.bindings.source._parents();\n\n                        for (idx = 0, length = data.length; idx < length; idx++) {\n                            bindElement(elements[idx], data[idx], this._ns(e.ns), [data[idx]].concat(parents));\n                        }\n                    }\n                }\n            })\n        },\n\n        badge: {\n            text: Binder.extend({\n                init: function(widget, bindings, options) {\n                    Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                    this.widget = widget;\n                },\n                refresh: function() {\n                    var text = this.bindings.text.get();\n\n                    if (text == null) {\n                        text = \"\";\n                    }\n                    this.widget.text(text);\n                }\n            })\n        }\n    };\n\n    var arraySplice = function(arr, idx, remove, add) {\n        add = add || [];\n        remove = remove || 0;\n\n        var addLength = add.length;\n        var oldLength = arr.length;\n\n        var shifted = [].slice.call(arr, idx + remove);\n        var shiftedLength = shifted.length;\n        var index;\n\n        if (addLength) {\n            addLength = idx + addLength;\n            index = 0;\n\n            for (; idx < addLength; idx++) {\n                arr[idx] = add[index];\n                index++;\n            }\n\n            arr.length = addLength;\n        } else if (remove) {\n            arr.length = idx;\n\n            remove += idx;\n            while (idx < remove) {\n                delete arr[--remove];\n            }\n        }\n\n        if (shiftedLength) {\n            shiftedLength = idx + shiftedLength;\n            index = 0;\n\n            for (; idx < shiftedLength; idx++) {\n                arr[idx] = shifted[index];\n                index++;\n            }\n\n            arr.length = shiftedLength;\n        }\n\n        idx = arr.length;\n\n        while (idx < oldLength) {\n            delete arr[idx];\n            idx++;\n        }\n    };\n\n    var BindingTarget = Class.extend( {\n        init: function(target, options) {\n            this.target = target;\n            this.options = options;\n            this.toDestroy = [];\n        },\n\n        bind: function(bindings) {\n            var key,\n                hasValue,\n                hasSource,\n                hasEvents,\n                hasChecked,\n                hasCss,\n                widgetBinding = this instanceof WidgetBindingTarget,\n                specificBinders = this.binders();\n\n            for (key in bindings) {\n                if (key == VALUE) {\n                    hasValue = true;\n                } else if (key == SOURCE) {\n                    hasSource = true;\n                } else if (key == EVENTS && !widgetBinding) {\n                    hasEvents = true;\n                } else if (key == CHECKED) {\n                    hasChecked = true;\n                } else if (key == CSS) {\n                    hasCss = true;\n                } else {\n                    this.applyBinding(key, bindings, specificBinders);\n                }\n            }\n            if (hasSource) {\n                this.applyBinding(SOURCE, bindings, specificBinders);\n            }\n\n            if (hasValue) {\n                this.applyBinding(VALUE, bindings, specificBinders);\n            }\n\n            if (hasChecked) {\n                this.applyBinding(CHECKED, bindings, specificBinders);\n            }\n\n            if (hasEvents && !widgetBinding) {\n                this.applyBinding(EVENTS, bindings, specificBinders);\n            }\n\n            if (hasCss && !widgetBinding) {\n                this.applyBinding(CSS, bindings, specificBinders);\n            }\n\n            if (widgetBinding && this.target && this.target.floatingLabel) {\n                this.applyBinding(\"floatingLabel\", bindings, specificBinders);\n            }\n        },\n\n        binders: function() {\n            return binders[this.target.nodeName.toLowerCase()] || {};\n        },\n\n        applyBinding: function(name, bindings, specificBinders) {\n            var binder = specificBinders[name] || binders[name],\n                toDestroy = this.toDestroy,\n                attribute,\n                binding = bindings[name];\n\n            if (binder) {\n                binder = new binder(this.target, bindings, this.options);\n\n                toDestroy.push(binder);\n\n                if (binding instanceof Binding) {\n                    binder.bind(binding);\n                    toDestroy.push(binding);\n                } else {\n                    for (attribute in binding) {\n                        binder.bind(binding, attribute);\n                        toDestroy.push(binding[attribute]);\n                    }\n                }\n            } else if (name !== \"template\") {\n                throw new Error(\"The \" + name + \" binding is not supported by the \" + this.target.nodeName.toLowerCase() + \" element\");\n            }\n        },\n\n        destroy: function() {\n            var idx,\n                length,\n                toDestroy = this.toDestroy;\n\n            for (idx = 0, length = toDestroy.length; idx < length; idx++) {\n                toDestroy[idx].destroy();\n            }\n        }\n    });\n\n    var WidgetBindingTarget = BindingTarget.extend( {\n        binders: function() {\n            return binders.widget[this.target.options.name.toLowerCase()] || {};\n        },\n\n        applyBinding: function(name, bindings, specificBinders) {\n            var binder = specificBinders[name] || binders.widget[name],\n                toDestroy = this.toDestroy,\n                attribute,\n                binding = bindings[name];\n\n            if (binder) {\n                binder = new binder(this.target, bindings, this.target.options);\n\n                toDestroy.push(binder);\n\n\n                if (binding instanceof Binding) {\n                    binder.bind(binding);\n                    toDestroy.push(binding);\n                } else {\n                    for (attribute in binding) {\n                        binder.bind(binding, attribute);\n                        toDestroy.push(binding[attribute]);\n                    }\n                }\n            } else {\n                throw new Error(\"The \" + name + \" binding is not supported by the \" + this.target.options.name + \" widget\");\n            }\n        }\n    });\n\n    function bindingTargetForRole(element, roles) {\n        var widget = kendo.initWidget(element, {}, roles);\n\n        if (widget) {\n            return new WidgetBindingTarget(widget);\n        }\n    }\n\n    var keyValueRegExp = /[A-Za-z0-9_\\-]+:(\\{([^}]*)\\}|[^,}]+)/g,\n        whiteSpaceRegExp = /\\s/g;\n\n    function parseBindings(bind) {\n        var result = {},\n            idx,\n            length,\n            token,\n            colonIndex,\n            key,\n            value,\n            tokens;\n\n        tokens = bind.match(keyValueRegExp);\n\n        for (idx = 0, length = tokens.length; idx < length; idx++) {\n            token = tokens[idx];\n            colonIndex = token.indexOf(\":\");\n\n            key = token.substring(0, colonIndex);\n            value = token.substring(colonIndex + 1);\n\n            if (value.charAt(0) == \"{\") {\n                value = parseBindings(value);\n            }\n\n            result[key] = value;\n        }\n\n        return result;\n    }\n\n    function createBindings(bindings, source, type) {\n        var binding,\n            result = {};\n\n        for (binding in bindings) {\n            result[binding] = new type(source, bindings[binding]);\n        }\n\n        return result;\n    }\n\n    function bindElement(element, source, roles, parents) {\n\n        if (!element || element.getAttribute(\"data-\" + kendo.ns + \"stop\")) {\n            return;\n        }\n\n        var role = element.getAttribute(\"data-\" + kendo.ns + \"role\"),\n            idx,\n            bind = element.getAttribute(\"data-\" + kendo.ns + \"bind\"),\n            childrenCopy = [],\n            deep = true,\n            bindings,\n            options = {},\n            target;\n\n        parents = parents || [source];\n\n        if (role || bind) {\n            unbindElement(element, false);\n        }\n\n        if (role) {\n            target = bindingTargetForRole(element, roles);\n        }\n\n        if (bind) {\n            bind = parseBindings(bind.replace(whiteSpaceRegExp, \"\"));\n\n            if (!target) {\n                options = kendo.parseOptions(element, { textField: \"\", valueField: \"\", template: \"\", valueUpdate: CHANGE, valuePrimitive: false, autoBind: true }, source);\n                options.roles = roles;\n                target = new BindingTarget(element, options);\n            }\n\n            target.source = source;\n\n            bindings = createBindings(bind, parents, Binding);\n\n            if (options.template) {\n                bindings.template = new TemplateBinding(parents, \"\", options.template);\n            }\n\n            if (bindings.click) {\n                bind.events = bind.events || {};\n                bind.events.click = bind.click;\n                bindings.click.destroy();\n                delete bindings.click;\n            }\n\n            if (bindings.source) {\n                deep = false;\n            }\n\n            if (bind.attr) {\n                bindings.attr = createBindings(bind.attr, parents, Binding);\n            }\n\n            if (bind.style) {\n                bindings.style = createBindings(bind.style, parents, Binding);\n            }\n\n            if (bind.events) {\n                bindings.events = createBindings(bind.events, parents, EventBinding);\n            }\n\n            if (bind.css) {\n                bindings.css = createBindings(bind.css, parents, Binding);\n            }\n\n            target.bind(bindings);\n        }\n\n        if (target) {\n            element.kendoBindingTarget = target;\n        }\n\n        var children = element.children;\n        if (deep && children && !element.getAttribute(\"data-\" + kendo.ns + \"stop\")) {\n            // https://github.com/telerik/kendo/issues/1240 for the weirdness.\n            for (idx = 0; idx < children.length; idx++) {\n                childrenCopy[idx] = children[idx];\n            }\n\n            for (idx = 0; idx < childrenCopy.length; idx++) {\n                bindElement(childrenCopy[idx], source, roles, parents);\n            }\n        }\n    }\n\n    function bind(dom, object) {\n        var idx,\n            length,\n            node,\n            roles = kendo.rolesFromNamespaces([].slice.call(arguments, 2));\n\n        object = kendo.observable(object);\n        dom = $(dom);\n\n        for (idx = 0, length = dom.length; idx < length; idx++) {\n            node = dom[idx];\n            if (node.nodeType === 1) {\n                bindElement(node, object, roles);\n            }\n        }\n    }\n\n    function unbindElement(element, destroyWidget) {\n        var bindingTarget = element.kendoBindingTarget;\n\n        if (bindingTarget) {\n            bindingTarget.destroy();\n\n            if (deleteExpando) {\n                delete element.kendoBindingTarget;\n            } else if (element.removeAttribute) {\n                element.removeAttribute(\"kendoBindingTarget\");\n            } else {\n                element.kendoBindingTarget = null;\n            }\n        }\n\n        if (destroyWidget) {\n            var widget = kendo.widgetInstance($(element));\n            if (widget && typeof widget.destroy === FUNCTION) {\n                widget.destroy();\n            }\n        }\n    }\n\n    function unbindElementTree(element, destroyWidgets) {\n        unbindElement(element, destroyWidgets);\n\n        unbindElementChildren(element, destroyWidgets);\n    }\n\n    function unbindElementChildren(element, destroyWidgets) {\n        var children = element.children;\n\n        if (children) {\n            for (var idx = 0, length = children.length; idx < length; idx++) {\n                unbindElementTree(children[idx], destroyWidgets);\n            }\n        }\n    }\n\n    function unbind(dom) {\n        var idx, length;\n\n        dom = $(dom);\n\n        for (idx = 0, length = dom.length; idx < length; idx++ ) {\n            unbindElementTree(dom[idx], false);\n        }\n    }\n\n    function notify(widget, namespace) {\n        var element = widget.element,\n            bindingTarget = element[0].kendoBindingTarget;\n\n        if (bindingTarget) {\n            bind(element, bindingTarget.source, namespace);\n        }\n    }\n\n    function retrievePrimitiveValues(value, valueField) {\n        var values = [];\n        var idx = 0;\n        var length;\n        var item;\n\n        if (!valueField) {\n            return value;\n        }\n\n        if (value instanceof ObservableArray) {\n            for (length = value.length; idx < length; idx++) {\n                item = value[idx];\n                values[idx] = item.get ? item.get(valueField) : item[valueField];\n            }\n            value = values;\n        } else if (value instanceof ObservableObject) {\n            value = value.get(valueField);\n        }\n\n        return value;\n    }\n\n    kendo.unbind = unbind;\n    kendo.bind = bind;\n    kendo.data.binders = binders;\n    kendo.data.Binder = Binder;\n    kendo.notify = notify;\n\n    kendo.observable = function(object) {\n        if (!(object instanceof ObservableObject)) {\n            object = new ObservableObject(object);\n        }\n\n        return object;\n    };\n\n    kendo.observableHierarchy = function(array) {\n        var dataSource = kendo.data.HierarchicalDataSource.create(array);\n\n        function recursiveRead(data) {\n            var i, children;\n\n            for (i = 0; i < data.length; i++) {\n                data[i]._initChildren();\n\n                children = data[i].children;\n\n                children.fetch();\n\n                data[i].items = children.data();\n\n                recursiveRead(data[i].items);\n            }\n        }\n\n        dataSource.fetch();\n\n        recursiveRead(dataSource.data());\n\n        dataSource._data._dataSource = dataSource;\n\n        return dataSource._data;\n    };\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n\n"],"names":["define","__meta__","id","name","category","description","depends","$","window","kendo","jQuery","undefined","Observable","ObservableObject","data","ObservableArray","toString","binders","Class","VALUE","SOURCE","EVENTS","CHECKED","CSS","deleteExpando","FUNCTION","CHANGE","a","document","createElement","test","e","Binding","extend","init","parents","path","that","this","fn","call","source","dependencies","observable","_access","field","_change","change","bind","_parents","value","get","parent","inArray","concat","dependency","ch","trigger","indexOf","charAt","length","start","stop","unbind","index","result","lastIndexOf","substring","currentSource","set","getter","destroy","EventBinding","handler","TemplateBinding","template","render","html","Binder","element","bindings","options","binding","attribute","refresh","TypedBinder","dataType","getAttribute","ns","type","toLowerCase","parsedValue","_parseValue","parseDate","parseFloat","Boolean","dataSourceBinding","bindingName","fieldName","setter","widget","_dataBinding","dataBinding","_dataBound","dataBound","_itemChange","itemChange","bindElement","item","_ns","idx","items","removedItems","unbindElementTree","ui","all","dataviz","mobile","splice","unshift","rolesFromNamespaces","addedItems","dataSource","view","hds","HierarchicalDataSource","addedDataItems","flatView","select","multiselect","dropdowntree","action","DataSource","_dataSource","Select","MultiSelect","DropDownTree","treeview","retrievePrimitiveValues","dataValueField","attr","key","setAttribute","css","classes","className","hasClass","addClass","removeClass","style","enabled","removeAttribute","readonly","disabled","events","handlers","off","on","text","dataFormat","visible","display","invisible","innerHTML","eventName","valueUpdate","_initChange","autoBind","fetch","add","remove","container","nodeName","tBodies","appendChild","valueField","textField","format","child","clone","cloneNode","reference","children","insertBefore","roles","parentNode","removeChild","unbindElementChildren","input","checked","Date","i","push","val","selectedIndex","target","values","option","selected","attributes","specified","valuePrimitive","valueIndex","sourceValue","match","String","apply","optionIndex","found","optionValue","check","range","end","_range","wrapper","floatingLabel","enable","first","_valueIsObservableObject","_valueIsObservableArray","_source","dataItem","dataTextField","isArray","isObservableObject","valueLength","sourceItem","slice","cascadeFrom","listView","bound","_preselect","oldValues","selectedNode","nonPrimitiveValues","_isMultipleSelection","_getAllChecked","newValues","newLength","j","old","same","removeIndex","newValue","arraySplice","selectedValue","gantt","dataItems","_isBound","scheduler","elements","grid","badge","arr","addLength","oldLength","shifted","shiftedLength","BindingTarget","toDestroy","hasValue","hasSource","hasEvents","hasChecked","hasCss","widgetBinding","WidgetBindingTarget","specificBinders","applyBinding","binder","Error","bindingTargetForRole","initWidget","keyValueRegExp","whiteSpaceRegExp","parseBindings","token","colonIndex","tokens","createBindings","role","childrenCopy","deep","unbindElement","replace","parseOptions","click","kendoBindingTarget","dom","object","node","arguments","nodeType","destroyWidget","bindingTarget","widgetInstance","destroyWidgets","notify","namespace","observableHierarchy","array","create","recursiveRead","_initChildren","_data","amd","a1","a2","a3"],"mappings":"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"}