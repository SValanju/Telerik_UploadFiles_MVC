{"version":3,"file":"kendo.scheduler.recurrence.min.js","sources":["kendo.scheduler.recurrence.js"],"sourcesContent":["(function(f, define) {\n    define('kendo.scheduler.recurrence',[ \"kendo.dropdownlist\", \"kendo.datepicker\", \"kendo.numerictextbox\", \"kendo.buttongroup\" ], f);\n})(function() {\n\nvar __meta__ = { // jshint ignore:line\n    id: \"scheduler.recurrence\",\n    name: \"Recurrence\",\n    category: \"web\",\n    depends: [ \"dropdownlist\", \"datepicker\", \"numerictextbox\", \"buttongroup\" ],\n    hidden: true\n};\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        timezone = kendo.timezone,\n        Class = kendo.Class,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        DropDownList = ui.DropDownList,\n        ButtonGroup = ui.ButtonGroup,\n        kendoDate = kendo.date,\n        setTime = kendoDate.setTime,\n        setDayOfWeek = kendoDate.setDayOfWeek,\n        adjustDST = kendoDate.adjustDST,\n        firstDayOfMonth = kendoDate.firstDayOfMonth,\n        getMilliseconds = kendoDate.getMilliseconds,\n        DAYS_IN_LEAPYEAR = [0,31,60,91,121,152,182,213,244,274,305,335,366],\n        DAYS_IN_YEAR = [0,31,59,90,120,151,181,212,243,273,304,334,365],\n        MONTHS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n        WEEK_DAYS = {\n            0: \"SU\",\n            1: \"MO\",\n            2: \"TU\",\n            3: \"WE\",\n            4: \"TH\",\n            5: \"FR\",\n            6: \"SA\"\n        },\n        WEEK_DAYS_IDX = {\n            \"SU\": 0,\n            \"MO\": 1,\n            \"TU\": 2,\n            \"WE\": 3,\n            \"TH\": 4,\n            \"FR\": 5,\n            \"SA\": 6\n        },\n        DATE_FORMATS = [\n            \"yyyy-MM-ddTHH:mm:ss.fffzzz\",\n            \"yyyy-MM-ddTHH:mm:sszzz\",\n            \"yyyy-MM-ddTHH:mm:ss\",\n            \"yyyy-MM-ddTHH:mm\",\n            \"yyyy-MM-ddTHH\",\n            \"yyyy-MM-dd\",\n            \"yyyyMMddTHHmmssfffzzz\",\n            \"yyyyMMddTHHmmsszzz\",\n            \"yyyyMMddTHHmmss\",\n            \"yyyyMMddTHHmm\",\n            \"yyyyMMddTHH\",\n            \"yyyyMMdd\"\n        ],\n        RULE_NAMES = [\"months\", \"weeks\", \"yearDays\", \"monthDays\", \"weekDays\", \"hours\", \"minutes\", \"seconds\"],\n        RULE_NAMES_LENGTH = RULE_NAMES.length,\n        RECURRENCE_DATE_FORMAT = \"yyyyMMddTHHmmssZ\",\n        limitation = {\n            months: function(date, end, rule) {\n                var monthRules = rule.months,\n                    months = ruleValues(monthRules, date.getMonth() + 1),\n                    changed = false;\n\n                if (months !== null) {\n                    if (months.length) {\n                        date.setMonth(months[0] - 1, 1);\n                    } else {\n                        date.setFullYear(date.getFullYear() + 1, monthRules[0] - 1, 1);\n                    }\n\n                    changed = true;\n                }\n\n                return changed;\n            },\n\n            monthDays: function(date, end, rule) {\n                var monthLength, month, days,\n                    changed = false,\n                    hours = date.getHours(),\n                    normalize = function(monthDay) {\n                        if (monthDay < 0) {\n                            monthDay = monthLength + monthDay + 1;\n                        }\n                        return monthDay;\n                    };\n\n                while (date <= end) {\n                    month = date.getMonth();\n                    monthLength = getMonthLength(date);\n                    days = ruleValues(rule.monthDays, date.getDate(), normalize);\n\n                    if (days === null) {\n                        return changed;\n                    }\n\n                    changed = true;\n\n                    if (days.length) {\n                        date.setMonth(month, days.sort(numberSortPredicate)[0]);\n                        adjustDST(date, hours);\n\n                        if (month === date.getMonth()) {\n                            break;\n                        }\n                    } else {\n                        date.setMonth(month + 1, 1);\n                    }\n                }\n\n                return changed;\n            },\n\n            yearDays: function(date, end, rule) {\n                var year, yearDays,\n                    changed = false,\n                    hours = date.getHours(),\n                    normalize = function(yearDay) {\n                        if (yearDay < 0) {\n                            yearDay = year + yearDay;\n                        }\n                        return yearDay;\n                    };\n\n                while (date < end) {\n                    year = leapYear(date) ? 366 : 365;\n                    yearDays = ruleValues(rule.yearDays, dayInYear(date), normalize);\n\n                    if (yearDays === null) {\n                        return changed;\n                    }\n\n                    changed = true;\n                    year = date.getFullYear();\n\n                    if (yearDays.length) {\n                        date.setFullYear(year, 0, yearDays.sort(numberSortPredicate)[0]);\n                        adjustDST(date, hours);\n                        break;\n                    } else {\n                        date.setFullYear(year + 1, 0, 1);\n                    }\n                }\n\n                return changed;\n            },\n\n            weeks: function(date, end, rule) {\n                var weekStart = rule.weekStart,\n                    year, weeks, day,\n                    changed = false,\n                    hours = date.getHours(),\n                    normalize = function(week) {\n                        if (week < 0) {\n                            week = 53 + week;\n                        }\n                        return week;\n                    };\n\n                while (date < end) {\n                    weeks = ruleValues(rule.weeks, weekInYear(date, weekStart), normalize);\n\n                    if (weeks === null) {\n                        return changed;\n                    }\n\n                    changed = true;\n                    year = date.getFullYear();\n\n                    if (weeks.length) {\n                        day = (weeks.sort(numberSortPredicate)[0] * 7) - 1;\n\n                        date.setFullYear(year, 0, day);\n                        setDayOfWeek(date, weekStart, -1);\n\n                        adjustDST(date, hours);\n                        break;\n                    } else {\n                        date.setFullYear(year + 1, 0, 1);\n                    }\n                }\n\n                return changed;\n            },\n\n            weekDays: function(date, end, rule) {\n                var offsetDate = new Date(date.getTime() + rule.offsets.start);\n                var normalizeDay = offsetDate.getDay() - date.getDay();\n                var weekDays = rule.weekDays;\n                var weekStart = rule.weekStart;\n                var weekDayRules = ruleWeekValues(weekDays, offsetDate, weekStart);\n                var hours = date.getHours();\n                var traverseRuleForNextMont = function(rule) {\n                    var nextMonthFirstDay = new Date(date.getFullYear(), date.getMonth() + 1, 1);\n                    var ruleDay = normalizeDayIndex(rule.day, weekStart);\n\n                    if (nextMonthFirstDay.getDay() <= ruleDay) {\n                        if (!weekDayRule || normalizeDayIndex(weekDayRule.day, weekStart) > ruleDay) {\n                            weekDayRule = rule;\n                        }\n                    }\n                };\n                var weekDayRule, day;\n\n\n                if (weekDayRules === null) {\n                    return false;\n                }\n\n                weekDayRule = weekDayRules[0];\n\n                if (!weekDayRule) {\n                    if (rule.freq === \"monthly\" && !rule.positions || rule.position > 0) {\n                        weekDays.forEach(traverseRuleForNextMont);\n                    }\n                    if (!weekDayRule) {\n                        weekDayRule = weekDays[0];\n                    }\n                    setDayOfWeek(date, weekStart);\n                }\n\n                day = weekDayRule.day;\n                day -= normalizeDay;\n\n                if (weekDayRule.offset) {\n                    while (date <= end && !isInWeek(date, weekDayRule, weekStart)) {\n                        if (weekInMonth(date, weekStart) === numberOfWeeks(date, weekStart)) {\n                            date.setMonth(date.getMonth() + 1, 1);\n                            adjustDST(date, hours);\n                        } else {\n                            date.setDate(date.getDate() + 7);\n                            adjustDST(date, hours);\n\n                            setDayOfWeek(date, weekStart, -1);\n                        }\n                    }\n                }\n\n                if (date.getDay() !== day) {\n                    setDayOfWeek(date, day);\n                }\n\n                return true;\n            },\n\n            hours: function(date, end, rule) {\n                var hourRules = rule.hours,\n                    startTime = rule._startTime,\n                    startHours = startTime.getHours(),\n                    hours = ruleValues(hourRules, startHours),\n                    changed = false;\n\n                if (hours !== null) {\n                    changed = true;\n\n                    date.setHours(startHours);\n                    adjustDST(date, startHours);\n\n                    if (hours.length) {\n                        hours = hours[0];\n                        date.setHours(hours);\n                    } else {\n                        hours = date.getHours();\n                        date.setDate(date.getDate() + 1);\n                        adjustDST(date, hours);\n\n                        hours = hourRules[0];\n                        date.setHours(hours);\n                        adjustDST(date, hours);\n                    }\n\n                    if (rule.minutes) {\n                        date.setMinutes(0);\n                    }\n\n                    startTime.setHours(hours, date.getMinutes());\n                }\n\n                return changed;\n            },\n\n            minutes: function(date, end, rule) {\n                var minuteRules = rule.minutes,\n                    currentMinutes = date.getMinutes(),\n                    minutes = ruleValues(minuteRules, currentMinutes),\n                    hours = rule._startTime.getHours(),\n                    changed = false;\n\n                if (minutes !== null) {\n                    changed = true;\n\n                    if (minutes.length) {\n                        minutes = minutes[0];\n                    } else {\n                        hours += 1;\n                        minutes = minuteRules[0];\n                    }\n\n                    if (rule.seconds) {\n                        date.setSeconds(0);\n                    }\n\n                    date.setHours(hours, minutes);\n\n                    hours = hours % 24;\n                    adjustDST(date, hours);\n                    rule._startTime.setHours(hours, minutes, date.getSeconds());\n                }\n\n                return changed;\n            },\n\n            seconds: function(date, end, rule) {\n                var secondRules = rule.seconds,\n                    hours = rule._startTime.getHours(),\n                    seconds = ruleValues(secondRules, date.getSeconds()),\n                    minutes = date.getMinutes(),\n                    changed = false;\n\n                if (seconds !== null) {\n                    changed = true;\n\n                    if (seconds.length) {\n                        date.setSeconds(seconds[0]);\n                    } else {\n                        minutes += 1;\n                        date.setMinutes(minutes, secondRules[0]);\n\n                        if (minutes > 59) {\n                            minutes = minutes % 60;\n                            hours = (hours + 1) % 24;\n                        }\n                    }\n\n                    rule._startTime.setHours(hours, minutes, date.getSeconds());\n                }\n\n                return changed;\n            }\n        },\n        BaseFrequency = Class.extend({\n            next: function(date, rule) {\n                var startTime = rule._startTime,\n                    day = startTime.getDate(),\n                    minutes, seconds;\n\n                if (rule.seconds) {\n                    seconds = date.getSeconds() + 1;\n\n                    date.setSeconds(seconds);\n                    startTime.setSeconds(seconds);\n                    startTime.setDate(day);\n\n                } else if (rule.minutes) {\n                    minutes = date.getMinutes() + 1;\n\n                    date.setMinutes(minutes);\n                    startTime.setMinutes(minutes);\n                    startTime.setDate(day);\n                } else {\n                    return false;\n                }\n\n                return true;\n            },\n\n            normalize: function(options) {\n                var rule = options.rule;\n\n                if (options.idx === 4 && rule.hours) {\n                    rule._startTime.setHours(0);\n                    this._hour(options.date, rule);\n                }\n            },\n\n            limit: function(date, end, rule) {\n                var interval = rule.interval,\n                    ruleName, firstRule,\n                    modified,\n                    idx, day;\n\n                while (date <= end) {\n                    modified = firstRule = undefined;\n                    day = date.getDate();\n\n                    for (idx = 0; idx < RULE_NAMES_LENGTH; idx++) {\n                        ruleName = RULE_NAMES[idx];\n\n                        if (rule[ruleName]) {\n                            modified = limitation[ruleName](date, end, rule);\n                            if (firstRule !== undefined && modified) {\n                                break;\n                            } else {\n                                firstRule = modified;\n                            }\n                        }\n\n                        if (modified) {\n                            this.normalize({ date: date, rule: rule, day: day, idx: idx });\n                        }\n                    }\n\n                    if ((interval === 1 || !this.interval(rule, date)) && idx === RULE_NAMES_LENGTH) {\n                        break;\n                    }\n                }\n            },\n\n            interval: function(rule, current) {\n                var start = new Date(rule._startPeriod);\n                var date = new Date(current);\n                var hours = current.getHours();\n                var weekStart = rule.weekStart;\n                var interval = rule.interval;\n                var frequency = rule.freq;\n                var modified = false;\n                var excess = 0;\n                var month = 0;\n                var day = 1;\n                var diff;\n\n                var startTimeHours;\n\n                if (frequency === \"hourly\") {\n                    diff = date.getTimezoneOffset() - start.getTimezoneOffset();\n                    startTimeHours = rule._startTime.getHours();\n\n                    date = date.getTime();\n                    if (hours !== startTimeHours) {\n                        date += (startTimeHours - hours) * kendoDate.MS_PER_HOUR;\n                    }\n                    date -= start;\n\n                    if (diff) {\n                        date -= diff * kendoDate.MS_PER_MINUTE;\n                    }\n\n                    diff = Math.floor(date / kendoDate.MS_PER_HOUR);\n                    excess = intervalExcess(diff, interval);\n\n                    if (excess !== 0) {\n                        this._hour(current, rule, excess);\n                        modified = true;\n                    }\n                } else if (frequency === \"daily\") {\n                    kendoDate.setTime(date, -start, true);\n\n                    diff = Math.round(date / kendoDate.MS_PER_DAY);\n                    excess = intervalExcess(diff, interval);\n\n                    if (excess !== 0) {\n                        this._date(current, rule, excess);\n                        modified = true;\n                    }\n\n                } else if (frequency === \"weekly\") {\n                    excess = this._getNumberOfWeeksBetweenDates(start, current);\n\n                    var normalizedCurrentIndex = normalizeDayIndex(current.getDay(), weekStart);\n                    var normalizedStartIndex = normalizeDayIndex(start.getDay(), weekStart);\n\n                    if (normalizedCurrentIndex < normalizedStartIndex) {\n                        excess += 1;\n                    }\n\n                    excess = intervalExcess(excess, interval);\n                    if (excess !== 0) {\n                        kendoDate.setDayOfWeek(current, rule.weekStart, -1);\n\n                        current.setDate(current.getDate() + (excess * 7));\n                        adjustDST(current, hours);\n\n                        modified = true;\n                    }\n                } else if (frequency === \"monthly\") {\n                    diff = current.getFullYear() - start.getFullYear();\n                    diff = current.getMonth() - start.getMonth() + (diff * 12);\n\n                    excess = intervalExcess(diff, interval);\n\n                    if (excess !== 0) {\n                        day = rule._hasRuleValue ? 1 : current.getDate();\n\n                        current.setFullYear(current.getFullYear(), current.getMonth() + excess, day);\n                        adjustDST(current, hours);\n\n                        modified = true;\n                    }\n                } else if (frequency === \"yearly\") {\n                    diff = current.getFullYear() - start.getFullYear();\n                    excess = intervalExcess(diff, interval);\n\n                    if (!rule.months) {\n                        month = current.getMonth();\n                    }\n\n                    if (!rule.yearDays && !rule.monthDays && !rule.weekDays) {\n                        day = current.getDate();\n                    }\n\n                    if (excess !== 0) {\n                        current.setFullYear(current.getFullYear() + excess, month, day);\n                        adjustDST(current, hours);\n\n                        modified = true;\n                    }\n                }\n\n                return modified;\n            },\n\n            _getNumberOfWeeksBetweenDates: function(first, second) {\n                 var weeks = (second - first) / 604800000;\n                 var exactWeeks = Math.floor(weeks);\n\n                //this is happening when weeks pass DST change\n                if (weeks - exactWeeks > 0.99) {\n                    exactWeeks = Math.round(weeks);\n                }\n                return exactWeeks;\n            },\n\n            _hour: function(date, rule, interval) {\n                var startTime = rule._startTime,\n                    hours = startTime.getHours();\n\n                if (interval) {\n                    hours += interval;\n                }\n\n                date.setHours(hours);\n\n                hours = hours % 24;\n                startTime.setHours(hours);\n                adjustDST(date, hours);\n            },\n\n            _date: function(date, rule, interval) {\n                var hours = date.getHours();\n\n                date.setDate(date.getDate() + interval);\n                if (!adjustDST(date, hours)) {\n                    this._hour(date, rule);\n                }\n            }\n        }),\n        HourlyFrequency = BaseFrequency.extend({\n            next: function(date, rule) {\n                if (!BaseFrequency.fn.next(date, rule)) {\n                    this._hour(date, rule, 1);\n                }\n            },\n\n            normalize: function(options) {\n                var rule = options.rule;\n\n                if (options.idx === 4) {\n                    rule._startTime.setHours(0);\n                    this._hour(options.date, rule);\n                }\n            }\n        }),\n        DailyFrequency = BaseFrequency.extend({\n            next: function(date, rule) {\n                if (!BaseFrequency.fn.next(date, rule)) {\n                    this[rule.hours ? \"_hour\" : \"_date\"](date, rule, 1);\n                }\n            }\n        }),\n        WeeklyFrequency = DailyFrequency.extend({\n            setup: function(rule, eventStartDate) {\n                if (!rule.weekDays) {\n                    rule.weekDays = [{\n                        day: eventStartDate.getDay(),\n                        offset: 0\n                    }];\n                }\n            }\n        }),\n        MonthlyFrequency = BaseFrequency.extend({\n            next: function(date, rule) {\n                var day, hours;\n                if (!BaseFrequency.fn.next(date, rule)) {\n                    if (rule.hours) {\n                        this._hour(date, rule, 1);\n                    } else if (rule.monthDays || rule.weekDays || rule.yearDays || rule.weeks) {\n                        this._date(date, rule, 1);\n                    } else {\n                        day = date.getDate();\n                        hours = date.getHours();\n\n                        date.setMonth(date.getMonth() + 1);\n                        adjustDST(date, hours);\n\n                        while (date.getDate() !== day) {\n                            date.setDate(day);\n                            adjustDST(date, hours);\n                        }\n\n                        this._hour(date, rule);\n                    }\n                }\n            },\n            normalize: function(options) {\n                var rule = options.rule,\n                    date = options.date,\n                    hours = date.getHours();\n\n                if (options.idx === 0 && !rule.monthDays && !rule.weekDays) {\n                    date.setDate(options.day);\n                    adjustDST(date, hours);\n                } else {\n                    BaseFrequency.fn.normalize(options);\n                }\n            },\n            setup: function(rule, eventStartDate, date) {\n                if (!rule.monthDays && !rule.weekDays) {\n                    date.setDate(eventStartDate.getDate());\n                }\n            }\n        }),\n        YearlyFrequency = MonthlyFrequency.extend({\n            next: function(date, rule) {\n                var day,\n                    hours = date.getHours();\n\n                if (!BaseFrequency.fn.next(date, rule)) {\n                    if (rule.hours) {\n                        this._hour(date, rule, 1);\n                    } else if (rule.monthDays || rule.weekDays || rule.yearDays || rule.weeks) {\n                        this._date(date, rule, 1);\n                    } else if (rule.months) {\n                        day = date.getDate();\n\n                        date.setMonth(date.getMonth() + 1);\n                        adjustDST(date, hours);\n\n                        while (date.getDate() !== day) {\n                            date.setDate(day);\n                            adjustDST(date, hours);\n                        }\n\n                        this._hour(date, rule);\n                    } else {\n                        date.setFullYear(date.getFullYear() + 1);\n                        adjustDST(date, hours);\n\n                        this._hour(date, rule);\n                    }\n                }\n            },\n            setup: function() {}\n        }),\n        frequencies = {\n            \"hourly\": new HourlyFrequency(),\n            \"daily\": new DailyFrequency(),\n            \"weekly\": new WeeklyFrequency(),\n            \"monthly\": new MonthlyFrequency(),\n            \"yearly\": new YearlyFrequency()\n        },\n        CLICK = \"click\",\n        CHANGE = \"change\";\n\n    function intervalExcess(diff, interval) {\n        var excess;\n        if (diff !== 0 && diff < interval) {\n            excess = interval - diff;\n        } else {\n            excess = diff % interval;\n            if (excess) {\n                excess = interval - excess;\n            }\n        }\n\n        return excess;\n    }\n\n    function dayInYear(date) {\n        var month = date.getMonth();\n        var days = leapYear(date) ? DAYS_IN_LEAPYEAR[month] : DAYS_IN_YEAR[month];\n\n        return days + date.getDate();\n    }\n\n    function weekInYear(date, weekStart) {\n        var year, days;\n\n        date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n        adjustDST(date, 0);\n\n        year = date.getFullYear();\n\n        if (weekStart !== undefined) {\n            setDayOfWeek(date, weekStart, -1);\n            date.setDate(date.getDate() + 4);\n        } else {\n            date.setDate(date.getDate() + (4 - (date.getDay() || 7)));\n        }\n\n        adjustDST(date, 0);\n        days = Math.floor((date.getTime() - new Date(year, 0, 1, -6)) / 86400000);\n\n        return 1 + Math.floor(days / 7);\n    }\n\n    function weekInMonth(date, weekStart) {\n        var firstWeekDay = firstDayOfMonth(date).getDay();\n        var firstWeekLength = 7 - (firstWeekDay + 7 - (weekStart || 7)) || 7;\n\n        if (firstWeekLength < 0) {\n            firstWeekLength += 7;\n        }\n\n        return Math.ceil((date.getDate() - firstWeekLength) / 7) + 1;\n    }\n\n    function normalizeDayIndex(weekDay, weekStart) {\n        return weekDay + (weekDay < weekStart ? 7 : 0);\n    }\n\n    function normalizeOffset(date, rule, weekStart) {\n        var offset = rule.offset;\n\n        if (!offset) {\n            return weekInMonth(date, weekStart);\n        }\n\n        var lastDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n        var weeksInMonth = weekInMonth(lastDate, weekStart);\n\n        var day = normalizeDayIndex(rule.day, weekStart);\n\n        var skipFirst = day < normalizeDayIndex(new Date(date.getFullYear(), date.getMonth(), 1).getDay(), weekStart);\n        var skipLast = day > normalizeDayIndex(lastDate.getDay(), weekStart);\n\n        if (offset < 0) {\n            offset = weeksInMonth + (offset + 1 - (skipLast ? 1 : 0));\n        } else if (skipFirst) {\n            offset += 1;\n        }\n\n        weeksInMonth -= (skipLast ? 1 : 0);\n\n        if (offset < (skipFirst ? 1 : 0) || offset > weeksInMonth) {\n            return null;\n        }\n\n        return offset;\n    }\n\n    function numberOfWeeks(date, weekStart) {\n        return weekInMonth(new Date(date.getFullYear(), date.getMonth() + 1, 0), weekStart);\n    }\n\n    function isInWeek(date, rule, weekStart) {\n        return weekInMonth(date, weekStart) === normalizeOffset(date, rule, weekStart);\n    }\n\n    function ruleWeekValues(weekDays, date, weekStart) {\n        var currentDay = normalizeDayIndex(date.getDay(), weekStart);\n        var length = weekDays.length;\n        var ruleWeekOffset;\n        var weekDay, day;\n        var weekNumber;\n        var result = [];\n        var idx = 0;\n\n        for (;idx < length; idx++) {\n            weekDay = weekDays[idx];\n\n            weekNumber = weekInMonth(date, weekStart);\n            ruleWeekOffset = normalizeOffset(date, weekDay, weekStart);\n\n            if (ruleWeekOffset === null) {\n                continue;\n            }\n\n            if (weekNumber < ruleWeekOffset) {\n                result.push(weekDay);\n            } else if (weekNumber === ruleWeekOffset) {\n                day = normalizeDayIndex(weekDay.day, weekStart);\n\n                if (currentDay < day) {\n                    result.push(weekDay);\n                } else if (currentDay === day) {\n                    return null;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    function ruleValues(rules, value, normalize) {\n        var idx = 0,\n            length = rules.length,\n            availableRules = [],\n            ruleValue;\n\n        for (; idx < length; idx++) {\n            ruleValue = rules[idx];\n\n            if (normalize) {\n                ruleValue = normalize(ruleValue);\n            }\n\n            if (value === ruleValue) {\n                return null;\n            } else if (value < ruleValue) {\n                availableRules.push(ruleValue);\n            }\n        }\n\n        return availableRules;\n    }\n\n    function parseArray(list, range) {\n        var idx = 0,\n            length = list.length,\n            value;\n\n        for (; idx < length; idx++) {\n            value = parseInt(list[idx], 10);\n            if (isNaN(value) || value < range.start || value > range.end || (value === 0 && range.start < 0)) {\n                return null;\n            }\n\n            list[idx] = value;\n        }\n\n        return list.sort(numberSortPredicate);\n    }\n\n    function parseWeekDayList(list) {\n        var idx = 0, length = list.length,\n            value, valueLength, day;\n\n        for (; idx < length; idx++) {\n            value = list[idx];\n            valueLength = value.length;\n            day = value.substring(valueLength - 2).toUpperCase();\n\n            day = WEEK_DAYS_IDX[day];\n            if (day === undefined) {\n                return null;\n            }\n\n            list[idx] = {\n                offset: parseInt(value.substring(0, valueLength - 2), 10) || 0,\n                day: day\n            };\n        }\n        return list;\n    }\n\n    function serializeWeekDayList(list) {\n        var idx = 0, length = list.length,\n            value, valueString, result = [];\n\n        for (; idx < length; idx++) {\n            value = list[idx];\n            if (typeof value === \"string\") {\n                valueString = value;\n            } else {\n                valueString = \"\" + WEEK_DAYS[value.day];\n\n                if (value.offset) {\n                    valueString = value.offset + valueString;\n                }\n            }\n\n            result.push(valueString);\n        }\n        return result.toString();\n    }\n\n    function getMonthLength(date) {\n        var month = date.getMonth();\n\n        if (month === 1) {\n            if (new Date(date.getFullYear(), 1, 29).getMonth() === 1) {\n                return 29;\n            }\n            return 28;\n        }\n        return MONTHS[month];\n    }\n\n    function leapYear(year) {\n        year = year.getFullYear();\n        return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n    }\n\n    function numberSortPredicate(a, b) {\n        return a - b;\n    }\n\n    function parseExceptions(exceptions, zone) {\n        var idx = 0, length, date,\n            dates = [];\n\n        if (exceptions) {\n            exceptions = exceptions.split(exceptions.indexOf(\";\") !== -1 ? \";\" : \",\");\n            length = exceptions.length;\n\n            for (; idx < length; idx++) {\n                date = parseUTCDate(exceptions[idx], zone);\n\n                if (date) {\n                    dates.push(date);\n                }\n            }\n        }\n\n        return dates;\n    }\n\n    function isException(exceptions, date, zone) {\n        var dates = Array.isArray(exceptions) ? exceptions : parseExceptions(exceptions, zone),\n            dateTime = date.getTime() - date.getMilliseconds(),\n            idx = 0, length = dates.length;\n\n        for (; idx < length; idx++) {\n            if (dates[idx].getTime() === dateTime) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function toExceptionString(dates, zone) {\n        var idx = 0;\n        var length;\n        var date;\n        var result = [].concat(dates);\n\n        for (length = result.length; idx < length; idx++) {\n            date = result[idx];\n            date = kendo.timezone.convert(date, zone || date.getTimezoneOffset(), \"Etc/UTC\");\n            result[idx] = kendo.toString(date, RECURRENCE_DATE_FORMAT);\n        }\n\n        return result.join(\",\");\n    }\n\n    function startPeriodByFreq(start, rule) {\n        var date = new Date(start);\n\n        switch (rule.freq) {\n            case \"yearly\":\n                date.setFullYear(date.getFullYear(), 0, 1);\n                break;\n\n            case \"monthly\":\n                date.setFullYear(date.getFullYear(), date.getMonth(), 1);\n                break;\n\n            case \"weekly\":\n                setDayOfWeek(date, rule.weekStart, -1);\n                break;\n\n            default:\n                break;\n        }\n\n        if (rule.hours) {\n            date.setHours(0);\n        }\n\n        if (rule.minutes) {\n            date.setMinutes(0);\n        }\n\n        if (rule.seconds) {\n            date.setSeconds(0);\n        }\n\n        return date;\n    }\n\n    function endPeriodByFreq(start, rule) {\n        var date = new Date(start);\n\n        switch (rule.freq) {\n            case \"yearly\":\n                date.setFullYear(date.getFullYear(), 11, 31);\n                break;\n\n            case \"monthly\":\n                date.setFullYear(date.getFullYear(), date.getMonth() + 1, 0);\n                break;\n\n            case \"weekly\":\n                setDayOfWeek(date, rule.weekStart, -1);\n                date.setDate(date.getDate() + 6);\n                break;\n\n            default:\n                break;\n        }\n\n        if (rule.hours) {\n            date.setHours(23);\n        }\n\n        if (rule.minutes) {\n            date.setMinutes(59);\n        }\n\n        if (rule.seconds) {\n            date.setSeconds(59);\n        }\n\n        return date;\n    }\n\n    function eventsByPosition(periodEvents, start, positions, until) {\n        var periodEventsLength = periodEvents.length;\n        var events = [];\n        var position;\n        var event;\n        var inPeriod;\n\n        for (var idx = 0, length = positions.length; idx < length; idx++) {\n            position = positions[idx];\n\n            if (position < 0) {\n                position = periodEventsLength + position;\n            } else {\n                position -= 1; //convert to zero based index\n            }\n\n            event = periodEvents[position];\n            inPeriod = until ? event.start < until : true;\n\n            if (event && event.start >= start && inPeriod) {\n                events.push(event);\n            }\n        }\n\n        return events;\n    }\n\n    function removeExceptionDates(periodEvents, exceptionDates, zone) {\n        var events = [];\n        var event;\n\n        for (var idx = 0; idx < periodEvents.length; idx++) {\n            event = periodEvents[idx];\n            if (!isException(exceptionDates, event.start, zone)) {\n                events.push(event);\n            }\n        }\n\n        return events;\n    }\n\n    function expand(event, start, end, zone) {\n        var rule,\n            startTime, endTime, endDate,\n            hours, minutes, seconds,\n            durationMS, startPeriod, inPeriod,\n            ruleStart, ruleEnd,\n            useEventStart, freqName,\n            exceptionDates,\n            eventStartTime,\n            eventStartMS,\n            eventStart,\n            count, freq,\n            positions,\n            currentIdx,\n            periodEvents,\n            events = [],\n            shiftedStart,\n            shiftedEnd,\n            shiftedStartTime,\n            shifterEndTime;\n\n        rule = parseRule(event.recurrenceRule, zone, { // offsets argument\n            start: (getZoneOffset(event.start, zone) - getZoneOffset(event.start, event.startTimezone)) * kendo.date.MS_PER_MINUTE,\n            end: (getZoneOffset(event.end, zone) - getZoneOffset(event.end, event.endTimezone)) * kendo.date.MS_PER_MINUTE\n        });\n\n        if (!rule) {\n            return [event];\n        }\n\n        positions = rule.positions;\n        currentIdx = positions ? 0 : 1;\n\n        ruleStart = rule.start;\n        ruleEnd = rule.end;\n\n        if (ruleStart || ruleEnd) {\n            event = event.clone({\n                start: ruleStart ? new Date(ruleStart.value[0]) : undefined,\n                end: ruleEnd ? new Date(ruleEnd.value[0]) : undefined\n            });\n        }\n\n        eventStart = event.start;\n        eventStartMS = eventStart.getTime();\n        eventStartTime = getMilliseconds(eventStart);\n\n        exceptionDates = parseExceptions(event.recurrenceException, zone);\n\n        if (!exceptionDates[0] && rule.exdates) {\n            exceptionDates = rule.exdates.value;\n            event.set(\"recurrenceException\", toExceptionString(exceptionDates, zone));\n        }\n\n        startPeriod = start = new Date(start);\n        end = new Date(end);\n\n        freqName = rule.freq;\n        freq = frequencies[freqName];\n        count = rule.count;\n\n        if (rule.until && rule.until < end) {\n            end = new Date(rule.until);\n        }\n\n        useEventStart = freqName === \"yearly\" || freqName === \"monthly\" || freqName === \"weekly\";\n\n        if (start < eventStartMS || count || rule.interval > 1 || useEventStart ||\n             ((freqName === \"daily\" || freqName === \"hourly\") && !rule.seconds)) {\n                    start = new Date(eventStartMS);\n        } else {\n            hours = start.getHours();\n            minutes = start.getMinutes();\n            seconds = start.getSeconds();\n\n            if (!rule.hours) {\n                hours = eventStart.getHours();\n            }\n\n            if (!rule.minutes) {\n                minutes = eventStart.getMinutes();\n            }\n\n            if (!rule.seconds) {\n                seconds = eventStart.getSeconds();\n            }\n\n            start.setHours(hours, minutes, seconds, eventStart.getMilliseconds());\n        }\n\n        rule._startPeriod = new Date(start);\n\n        if (positions) {\n            start = startPeriodByFreq(start, rule);\n            end = endPeriodByFreq(end, rule);\n\n            var diff = getMilliseconds(end) - getMilliseconds(start);\n            if (diff < 0) {\n                hours = start.getHours();\n                end.setHours(hours, start.getMinutes(), start.getSeconds(), start.getMilliseconds());\n                kendoDate.adjustDST(end, hours);\n            }\n\n            rule._startPeriod = new Date(start);\n            rule._endPeriod = endPeriodByFreq(start, rule);\n        }\n\n        durationMS = event.duration();\n        var allDayCompensation = event.isAllDay ? 86400000 : 0;\n        rule._startTime = startTime = kendoDate.toInvariantTime(start);\n\n        if (freq.setup) {\n            freq.setup(rule, eventStart, start);\n        }\n\n        freq.limit(start, end, rule);\n\n        while (start <= end) {\n            endDate = new Date(start);\n            setTime(endDate, durationMS);\n            var inPeriodCheckEndDate = new Date(start);\n            setTime(inPeriodCheckEndDate, durationMS + allDayCompensation);\n\n            inPeriod = start >= startPeriod || inPeriodCheckEndDate > startPeriod;\n\n            if (inPeriod && !isException(exceptionDates, start, zone) || positions) {\n                startTime = kendoDate.toUtcTime(kendoDate.getDate(start)) + getMilliseconds(rule._startTime);\n                endTime = startTime + durationMS;\n\n                if (eventStartMS !== start.getTime() || eventStartTime !== getMilliseconds(rule._startTime)) {\n                    var startZone = event.startTimezone || event.endTimezone;\n                    var endZone = event.endTimezone || event.startTimezone;\n\n                    if (!event.isAllDay) {\n                        if ((zone && startZone) || (!zone && !startZone)) {\n                            var startOffsetDiff = getZoneOffset(start, zone) - getZoneOffset(event.start, zone);\n                            var endOffsetDiff = getZoneOffset(endDate, zone) - getZoneOffset(event.end, zone);\n                            var startTZOffsetDiff = getZoneOffset(start, startZone) - getZoneOffset(event.start, startZone);\n                            var endTZOffsetDiff = getZoneOffset(endDate, endZone) - getZoneOffset(event.end, endZone);\n\n                            if (startOffsetDiff !== startTZOffsetDiff) {\n                                var offsetTicksStart = (startOffsetDiff - startTZOffsetDiff) * 60000;\n                                shiftedStart = new Date(start.getTime() - offsetTicksStart);\n                                shiftedStartTime = startTime - offsetTicksStart;\n                            }\n\n                            if (endOffsetDiff !== endTZOffsetDiff) {\n                                var offsetTicksEnd = (endOffsetDiff - endTZOffsetDiff) * 60000;\n                                shiftedEnd = new Date(endDate.getTime() - offsetTicksEnd);\n                                shifterEndTime = endTime - offsetTicksEnd;\n                            }\n                        }\n                    }\n\n\n                    events.push(event.toOccurrence({\n                        start: shiftedStart || new Date(start),\n                        end: shiftedEnd || endDate,\n                        _startTime: shiftedStartTime || startTime,\n                        _endTime: shifterEndTime || endTime\n                    }));\n\n                    shiftedStart = shiftedEnd = shiftedStartTime = shifterEndTime = null;\n                } else {\n                    event._startTime = startTime;\n                    event._endTime = endTime;\n                    events.push(event);\n                }\n            }\n\n            if (positions) {\n                freq.next(start, rule);\n                freq.limit(start, end, rule);\n\n                if (start > rule._endPeriod) {\n                    periodEvents = eventsByPosition(events.slice(currentIdx), eventStart, positions, rule.until);\n                    periodEvents = removeExceptionDates(periodEvents, exceptionDates, zone);\n                    events = events.slice(0, currentIdx).concat(periodEvents);\n\n                    rule._endPeriod = endPeriodByFreq(start, rule);\n\n                    currentIdx = events.length;\n                }\n\n                if (count && count === currentIdx) {\n                    break;\n                }\n\n            } else {\n                if (count && count === currentIdx) {\n                    break;\n                }\n\n                currentIdx += 1;\n\n                var isMissingDSTHour = isDSTMissingHour(start);\n                freq.next(start, rule);\n\n                if (isMissingDSTHour && rule.freq !== \"hourly\" && kendoDate.toInvariantTime(event.start).getTime() !== kendoDate.toInvariantTime(start).getTime()) {\n                    rule._startTime = startTime = new Date(start.getTime() - 3600000);\n                }\n\n                freq.limit(start, end, rule);\n            }\n        }\n\n        return events;\n    }\n\n    function isDSTMissingHour(date) {\n        var dateOffset = date.getTimezoneOffset();\n        var dateMinusHour = new Date(date.getTime() - 3600000);\n        var dateMinusHourOffset = dateMinusHour.getTimezoneOffset();\n\n        return dateOffset < dateMinusHourOffset;\n    }\n\n    function getZoneOffset(date, zone) {\n        return zone ? kendo.timezone.offset(date, zone) : date.getTimezoneOffset();\n    }\n\n    function parseUTCDate(value, zone) {\n        value = kendo.parseDate(value, DATE_FORMATS); //Parse UTC to local time\n\n        if (value && zone) {\n            value = timezone.apply(value, zone);\n        }\n\n        return value;\n    }\n\n    function parseDateRule(dateRule, zone) {\n        var pairs = dateRule.split(\";\");\n        var pair;\n        var property;\n        var value;\n        var tzid;\n        var valueIdx, valueLength;\n\n        for (var idx = 0, length = pairs.length; idx < length; idx++) {\n            pair = pairs[idx].split(\":\");\n            property = pair[0];\n            value = pair[1];\n\n            if (property.indexOf(\"TZID\") !== -1) {\n                tzid = property.substring(property.indexOf(\"TZID\")).split(\"=\")[1];\n            }\n\n            if (value) {\n                value = value.split(\",\");\n\n                for (valueIdx = 0, valueLength = value.length; valueIdx < valueLength; valueIdx++) {\n                    value[valueIdx] = parseUTCDate(value[valueIdx], tzid || zone);\n                }\n            }\n        }\n\n        if (value) {\n            return {\n                value: value,\n                tzid: tzid\n            };\n        }\n    }\n\n    function parseRule(recur, zone, offsets) {\n        var instance = {};\n        var splits, value;\n        var idx = 0, length;\n        var ruleValue = false;\n        var rule, part, parts;\n        var property, weekStart, weekDays;\n        var predicate = function(a, b) {\n            var day1 = a.day,\n                day2 = b.day;\n\n            if (day1 < weekStart) {\n               day1 += 7;\n            }\n\n            if (day2 < weekStart) {\n                day2 += 7;\n            }\n\n            return day1 - day2;\n        };\n\n        if (!recur) {\n            return null;\n        }\n\n        parts = recur.split(\"\\n\");\n\n        if (!parts[1] && (recur.indexOf(\"DTSTART\") !== -1 || recur.indexOf(\"DTEND\") !== -1 || recur.indexOf(\"EXDATE\") !== -1)) {\n            parts = recur.split(\" \");\n        }\n\n        for (idx = 0, length = parts.length; idx < length; idx++) {\n            part = kendo.trim(parts[idx]);\n\n            if (part.indexOf(\"DTSTART\") !== -1) {\n                instance.start = parseDateRule(part, zone);\n            } else if (part.indexOf(\"DTEND\") !== -1) {\n                instance.end = parseDateRule(part, zone);\n            } else if (part.indexOf(\"EXDATE\") !== -1) {\n                instance.exdates = parseDateRule(part, zone);\n            } else if (part.indexOf(\"RRULE\") !== -1) {\n                rule = part.substring(6);\n            } else if (kendo.trim(part)) {\n                rule = part;\n            }\n        }\n\n        rule = rule.split(\";\");\n\n        for (idx = 0, length = rule.length; idx < length; idx++) {\n            property = rule[idx];\n            splits = property.split(\"=\");\n            value = kendo.trim(splits[1]).split(\",\");\n\n            switch (kendo.trim(splits[0]).toUpperCase()) {\n                case \"FREQ\":\n                    instance.freq = value[0].toLowerCase();\n                    break;\n                case \"UNTIL\":\n                    instance.until = parseUTCDate(value[0], zone);\n                    break;\n                case \"COUNT\":\n                    instance.count = parseInt(value[0], 10);\n                    break;\n                case \"INTERVAL\":\n                    instance.interval = parseInt(value[0], 10);\n                    break;\n                case \"BYSECOND\":\n                    instance.seconds = parseArray(value, { start: 0, end: 60 });\n                    ruleValue = true;\n                    break;\n                case \"BYMINUTE\":\n                    instance.minutes = parseArray(value, { start: 0, end: 59 });\n                    ruleValue = true;\n                    break;\n                case \"BYHOUR\":\n                    instance.hours = parseArray(value, { start: 0, end: 23 });\n                    ruleValue = true;\n                    break;\n                case \"BYMONTHDAY\":\n                    instance.monthDays = parseArray(value, { start: -31, end: 31 });\n                    ruleValue = true;\n                    break;\n                case \"BYYEARDAY\":\n                    instance.yearDays = parseArray(value, { start: -366, end: 366 });\n                    ruleValue = true;\n                    break;\n                case \"BYMONTH\":\n                    instance.months = parseArray(value, { start: 1, end: 12 });\n                    ruleValue = true;\n                    break;\n                case \"BYDAY\":\n                    instance.weekDays = weekDays = parseWeekDayList(value);\n                    ruleValue = true;\n                    break;\n                case \"BYWEEKNO\":\n                    instance.weeks = parseArray(value, { start: -53, end: 53 });\n                    ruleValue = true;\n                    break;\n                case \"BYSETPOS\":\n                    instance.positions = parseArray(value, { start: -366, end: 366 });\n                    break;\n                case \"WKST\":\n                    instance.weekStart = weekStart = WEEK_DAYS_IDX[value[0]];\n                    break;\n            }\n        }\n\n        if (instance.freq === undefined || (instance.count !== undefined && instance.until)) {\n            return null;\n        }\n\n        if (!instance.interval) {\n            instance.interval = 1;\n        }\n\n        if (weekStart === undefined) {\n            instance.weekStart = weekStart = kendo.culture().calendar.firstDay;\n        }\n\n        if (weekDays) {\n            instance.weekDays = weekDays.sort(predicate);\n        }\n\n        if (instance.positions && !ruleValue) {\n            instance.positions = null;\n        }\n\n        instance._hasRuleValue = ruleValue;\n        instance.offsets = offsets;\n\n        return instance;\n    }\n\n    function serializeDateRule(dateRule, zone) {\n        var value = dateRule.value;\n        var tzid = dateRule.tzid || \"\";\n        var length = value.length;\n        var idx = 0;\n        var val;\n\n        for (; idx < length; idx++) {\n            val = value[idx];\n            val = timezone.convert(val, tzid || zone || val.getTimezoneOffset(), \"Etc/UTC\");\n            value[idx] = kendo.toString(val, \"yyyyMMddTHHmmssZ\");\n        }\n\n        if (tzid) {\n            tzid = \";TZID=\" + tzid;\n        }\n\n        return tzid + \":\" + value.join(\",\") + \" \";\n    }\n\n    function serialize(rule, zone) {\n        var weekStart = rule.weekStart;\n        var ruleString = \"FREQ=\" + rule.freq.toUpperCase();\n        var exdates = rule.exdates || \"\";\n        var start = rule.start || \"\";\n        var end = rule.end || \"\";\n        var until = rule.until;\n\n        if (weekStart === undefined) {\n            weekStart = kendo.culture().calendar.firstDay;\n        }\n\n        if (rule.interval > 1) {\n            ruleString += \";INTERVAL=\" + rule.interval;\n        }\n\n        if (rule.count) {\n            ruleString += \";COUNT=\" + rule.count;\n        }\n\n        if (until) {\n            until = timezone.convert(until, zone || until.getTimezoneOffset(), \"Etc/UTC\");\n\n            ruleString += \";UNTIL=\" + kendo.toString(until, \"yyyyMMddTHHmmssZ\");\n        }\n\n        if (rule.months) {\n            ruleString += \";BYMONTH=\" + rule.months;\n        }\n\n        if (rule.weeks) {\n            ruleString += \";BYWEEKNO=\" + rule.weeks;\n        }\n\n        if (rule.yearDays) {\n            ruleString += \";BYYEARDAY=\" + rule.yearDays;\n        }\n\n        if (rule.monthDays) {\n            ruleString += \";BYMONTHDAY=\" + rule.monthDays;\n        }\n\n        if (rule.weekDays) {\n            ruleString += \";BYDAY=\" + serializeWeekDayList(rule.weekDays);\n        }\n\n        if (rule.hours) {\n            ruleString += \";BYHOUR=\" + rule.hours;\n        }\n\n        if (rule.minutes) {\n            ruleString += \";BYMINUTE=\" + rule.minutes;\n        }\n\n        if (rule.seconds) {\n            ruleString += \";BYSECOND=\" + rule.seconds;\n        }\n\n        if (rule.positions) {\n            ruleString += \";BYSETPOS=\" + rule.positions;\n        }\n\n        if (weekStart !== undefined) {\n            ruleString += \";WKST=\" + WEEK_DAYS[weekStart];\n        }\n\n        if (start) {\n            start = \"DTSTART\" + serializeDateRule(start, zone);\n        }\n\n        if (end) {\n            end = \"DTEND\" + serializeDateRule(end, zone);\n        }\n\n        if (exdates) {\n            exdates = \"EXDATE\" + serializeDateRule(exdates, zone);\n        }\n\n        if (start || end || exdates) {\n            ruleString = start + end + exdates + \"RRULE:\" + ruleString;\n        }\n\n        return ruleString;\n    }\n\n    kendo.recurrence = {\n        rule: {\n            parse: parseRule,\n            serialize: serialize\n        },\n        expand: expand,\n        dayInYear: dayInYear,\n        weekInYear: weekInYear,\n        weekInMonth: weekInMonth,\n        numberOfWeeks: numberOfWeeks,\n        isException: isException,\n        toExceptionString: toExceptionString\n    };\n\n    var RECURRENCE_VIEW_TEMPLATE = kendo.template(\n       '# if (frequency !== \"never\") { #' +\n           '<div class=\"k-edit-label\"><label for=\"recur_interval\">#:messages.repeatEvery#</label></div>' +\n           '<div class=\"k-edit-field\"><input id=\"recur_interval\" class=\"k-recur-interval\" title=\"#:messages.repeatEvery# #:messages.interval#\"/>#:messages.interval#</div>' +\n       '# } #' +\n       '# if (frequency === \"weekly\") { #' +\n           '<div class=\"k-edit-label\"><label>#:messages.repeatOn#</label></div>' +\n           '<div class=\"k-edit-field\"><div class=\"k-button-group-stretched k-recur-weekday-buttons\" title=\"#:messages.repeatOn#\"></div></div>' +\n       '# } else if (frequency === \"monthly\") { #' +\n           '<div class=\"k-edit-label\"><label>#:messages.repeatOn#</label></div>' +\n           '<div class=\"k-edit-field\">' +\n               '<ul class=\"k-reset\">' +\n                   '<li>' +\n                       '<label class=\"k-radio-label\"><input class=\"k-recur-month-radio k-radio k-radio-md\" type=\"radio\" name=\"month\" value=\"monthday\" title=\"#:messages.repeatOn#\" />#:messages.date#:</label>' +\n                       '<input class=\"k-recur-monthday\" aria-label=\"#:messages.date#\" title=\"#:messages.date#\" />' +\n                   '</li>' +\n                   '<li>' +\n                        '<input class=\"k-recur-month-radio k-radio k-radio-md\" type=\"radio\" name=\"month\" value=\"weekday\" aria-label=\"#:messages.repeatOn# #:messages.day#\" title=\"#:messages.repeatOn# #:messages.day#\" />' +\n                        '<input class=\"k-recur-weekday-offset\" title=\"#:messages.repeatOn#\" /><input class=\"k-recur-weekday\" title=\"#:messages.day#\" />' +\n                   '</li>' +\n               '</ul>' +\n           '</div>' +\n       '# } else if (frequency === \"yearly\") { #' +\n           '<div class=\"k-edit-label\"><label>#:messages.repeatOn#</label></div>' +\n           '<div class=\"k-edit-field\">' +\n               '<ul class=\"k-reset\">' +\n                   '<li>' +\n                       '<input class=\"k-recur-year-radio k-radio k-radio-md\" type=\"radio\" name=\"year\" value=\"monthday\" title=\"#:messages.repeatOn# #:messages.month#\" />' +\n                       '<input class=\"k-recur-month\" aria-label=\"#:messages.month#\" title=\"#:messages.month#\" />' +\n                       '<input class=\"k-recur-monthday\" aria-label=\"#:messages.date#\" title=\"#:messages.date#\" />' +\n                   '</li>' +\n                   '<li>' +\n                       '<input class=\"k-recur-year-radio k-radio k-radio-md\" type=\"radio\" name=\"year\" value=\"weekday\" title=\"#:messages.repeatOn# #:messages.day#\" />' +\n                       '<input class=\"k-recur-weekday-offset\" title=\"#:messages.repeatOn#\" /><input class=\"k-recur-weekday\" title=\"#:messages.day#\"  />#:messages.of#<input class=\"k-recur-month\" title=\"#:messages.of + messages.month#\"/>' +\n                   '</li>' +\n               '</ul>' +\n           '</div>' +\n       '# } #' +\n       '# if (frequency !== \"never\") { #' +\n           '<div class=\"k-edit-label\"><label>#:end.label#</label></div>' +\n           '<div class=\"k-edit-field\">' +\n               '<ul class=\"k-reset\">' +\n                   '<li>' +\n                       '<label class=\"k-radio-label\"><input class=\"k-recur-end-never k-radio k-radio-md\" type=\"radio\" name=\"end\" value=\"never\" title=\"#:end.label#\" />#:end.never#</label>' +\n                   '</li>' +\n                   '<li>' +\n                       '<label class=\"k-radio-label\"><input class=\"k-recur-end-count k-radio k-radio-md\" type=\"radio\" name=\"end\" value=\"count\" title=\"#:end.label#\" />#:end.after#</label>' +\n                       '<input class=\"k-recur-count\" aria-label=\"#:end.occurrence#\" title=\"#:end.occurrence#\" />#:end.occurrence#' +\n                   '</li>' +\n                   '<li>' +\n                       '<label class=\"k-radio-label\"><input class=\"k-recur-end-until k-radio k-radio-md\" type=\"radio\" name=\"end\" value=\"until\" title=\"#:end.label#\" />#:end.on#</label>' +\n                       '<input class=\"k-recur-until\" title=\"#:end.on#\" aria-label=\"#:end.on#\" name=\"recur-until\" />' +\n                   '</li>' +\n               '</ul>' +\n           '</div>' +\n       '# } #'\n    );\n\n    var DAY_RULE = [\n        { day: 0, offset: 0 },\n        { day: 1, offset: 0 },\n        { day: 2, offset: 0 },\n        { day: 3, offset: 0 },\n        { day: 4, offset: 0 },\n        { day: 5, offset: 0 },\n        { day: 6, offset: 0 }\n    ];\n\n    var WEEKDAY_RULE = [\n        { day: 1, offset: 0 },\n        { day: 2, offset: 0 },\n        { day: 3, offset: 0 },\n        { day: 4, offset: 0 },\n        { day: 5, offset: 0 }\n    ];\n\n    var WEEKEND_RULE = [\n        { day: 0, offset: 0 },\n        { day: 6, offset: 0 }\n    ];\n\n    var BaseRecurrenceEditor = Widget.extend({\n        init: function(element, options) {\n            var start;\n            var that = this;\n            var frequencies = options && options.frequencies;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.wrapper = that.element;\n\n            options = that.options;\n            options.start = start = options.start || kendoDate.today();\n\n            if (frequencies) {\n                options.frequencies = frequencies;\n            }\n\n            if (typeof start === \"string\") {\n                options.start = kendo.parseDate(start, \"yyyyMMddTHHmmss\");\n            }\n\n            if (options.firstWeekDay === null) {\n                options.firstWeekDay = kendo.culture().calendar.firstDay;\n            }\n\n            that._namespace = \".\" + options.name;\n        },\n\n        options: {\n            value: \"\",\n            start: \"\",\n            timezone: \"\",\n            spinners: true,\n            firstWeekDay: null,\n            frequencies: [\n                \"never\",\n                \"daily\",\n                \"weekly\",\n                \"monthly\",\n                \"yearly\"\n            ],\n            mobile: false,\n            messages: {\n                repeat: \"Repeat\",\n                recurrenceEditorTitle: \"Recurrence editor\",\n                frequencies: {\n                    never: \"Never\",\n                    hourly: \"Hourly\",\n                    daily: \"Daily\",\n                    weekly: \"Weekly\",\n                    monthly: \"Monthly\",\n                    yearly: \"Yearly\"\n                },\n                hourly: {\n                    repeatEvery: \"Repeat every: \",\n                    interval: \" hour(s)\"\n                },\n                daily: {\n                    repeatEvery: \"Repeat every: \",\n                    interval: \" day(s)\"\n                },\n                weekly: {\n                    interval: \" week(s)\",\n                    repeatEvery: \"Repeat every: \",\n                    repeatOn: \"Repeat on: \"\n                },\n                monthly: {\n                    repeatEvery: \"Repeat every: \",\n                    repeatOn: \"Repeat on: \",\n                    interval: \" month(s)\",\n                    day: \"Day \",\n                    date: \"Date\"\n                },\n                yearly: {\n                    repeatEvery: \"Repeat every: \",\n                    repeatOn: \"Repeat on: \",\n                    interval: \" year(s)\",\n                    of: \" of \",\n                    month: \"month\",\n                    day: \"day\",\n                    date: \"Date\"\n                },\n                end: {\n                    label: \"End:\",\n                    mobileLabel: \"Ends\",\n                    never: \"Never\",\n                    after: \"After \",\n                    occurrence: \" occurrence(s)\",\n                    on: \"On \"\n                },\n                offsetPositions: {\n                    first: \"first\",\n                    second: \"second\",\n                    third: \"third\",\n                    fourth: \"fourth\",\n                    last: \"last\"\n                },\n                weekdays: {\n                    day: \"day\",\n                    weekday: \"weekday\",\n                    weekend: \"weekend day\"\n                }\n            }\n        },\n\n        events: [\"change\"],\n\n        _initInterval: function() {\n            var that = this;\n            var rule = that._value;\n\n            that._container\n                .find(\".k-recur-interval\")\n                .kendoNumericTextBox({\n                    spinners: that.options.spinners,\n                    value: rule.interval || 1,\n                    decimals: 0,\n                    format: \"#\",\n                    min: 1,\n                    change: function() {\n                        rule.interval = this.value();\n                        that._trigger();\n                    }\n                });\n        },\n\n        _weekDayButtons: function(firstDay) {\n            var that = this,\n                names = kendo.culture().calendar.days.names,\n                abbreviated = kendo.culture().calendar.days.namesAbbr,\n                repeatOn = that.options.messages.weekly.repeatOn,\n                length = names.length,\n                idx = 0,\n                values = [],\n                items = [];\n\n            for (; idx < length; idx++) {\n                values.push(idx);\n            }\n\n            names = names.slice(firstDay).concat(names.slice(0, firstDay));\n            abbreviated = abbreviated.slice(firstDay).concat(abbreviated.slice(0, firstDay));\n            values = values.slice(firstDay).concat(values.slice(0, firstDay));\n\n            for (idx = 0; idx < length; idx++) {\n                items.push({\n                    text: abbreviated[idx],\n                    attributes: {\n                        \"data-value\": values[idx],\n                        \"aria-label\": repeatOn + \" \" + names[idx]\n                    }\n                });\n            }\n\n            that._weekDayButtonGroup = new ButtonGroup(that._container.find(\".k-recur-weekday-buttons\"), {\n                items: items,\n                selection: \"multiple\",\n                select: function() {\n                    var rule = that._value,\n                        selectedDays = that._weekDayButtonGroup.current();\n\n                    rule.weekDays = selectedDays.map(function(i, day) {\n                        return {\n                            day: Number(day.getAttribute(\"data-value\")),\n                            offset: 0\n                        };\n                    });\n\n                    if (!that.options.mobile) {\n                        that._trigger();\n                    }\n                }\n            });\n        },\n\n        _weekDayRule: function(clear) {\n            var that = this;\n            var weekday = (that._weekDay.element || that._weekDay).val();\n            var offset = Number((that._weekDayOffset.element || that._weekDayOffset).val());\n            var weekDays = null;\n            var positions = null;\n\n            if (!clear) {\n                if (weekday === \"day\") {\n                    weekDays = DAY_RULE;\n                    positions = offset;\n                } else if (weekday === \"weekday\") {\n                    weekDays = WEEKDAY_RULE;\n                    positions = offset;\n                } else if (weekday === \"weekend\") {\n                    weekDays = WEEKEND_RULE;\n                    positions = offset;\n                } else {\n                    weekDays = [{\n                        offset: offset,\n                        day: Number(weekday)\n                    }];\n                }\n            }\n\n            that._value.weekDays = weekDays;\n            that._value.positions = positions;\n        },\n\n        _weekDayView: function() {\n            var that = this;\n            var weekDays = that._value.weekDays;\n            var positions = that._value.positions;\n            var weekDayOffsetWidget = that._weekDayOffset;\n            var weekDayOffset;\n            var weekDayValue;\n            var length;\n            var method;\n\n            if (weekDays) {\n                length = weekDays.length;\n\n                if (positions) {\n                    if (length === 7) {\n                        weekDayValue = \"day\";\n                        weekDayOffset = positions;\n                    } else if (length === 5) {\n                        weekDayValue = \"weekday\";\n                        weekDayOffset = positions;\n                    } else if (length === 2) {\n                        weekDayValue = \"weekend\";\n                        weekDayOffset = positions;\n                    }\n                }\n\n                if (!weekDayValue) {\n                    weekDays = weekDays[0];\n                    weekDayValue = weekDays.day;\n                    weekDayOffset = weekDays.offset || \"\";\n                }\n\n                method = weekDayOffsetWidget.value ? \"value\" : \"val\";\n\n                weekDayOffsetWidget[method](weekDayOffset);\n                that._weekDay[method](weekDayValue);\n            }\n        },\n\n        _initWeekDay: function() {\n            var that = this, data;\n\n            var weekdayMessage = that.options.messages.weekdays;\n            var offsetMessage = that.options.messages.offsetPositions;\n\n            var weekDayInput = that._container.find(\".k-recur-weekday\");\n\n            var change = function() {\n                that._weekDayRule();\n                that._trigger();\n            };\n\n            if (weekDayInput[0]) {\n                that._weekDayOffset = new DropDownList(that._container.find(\".k-recur-weekday-offset\"), {\n                    change: change,\n                    dataTextField: \"text\",\n                    dataValueField: \"value\",\n                    dataSource: [\n                        { text: offsetMessage.first, value: \"1\" },\n                        { text: offsetMessage.second, value: \"2\" },\n                        { text: offsetMessage.third, value: \"3\" },\n                        { text: offsetMessage.fourth, value: \"4\" },\n                        { text: offsetMessage.last, value: \"-1\" }\n                    ]\n                });\n\n                data = [\n                    { text: weekdayMessage.day, value: \"day\" },\n                    { text: weekdayMessage.weekday, value: \"weekday\" },\n                    { text: weekdayMessage.weekend, value: \"weekend\" }\n                ];\n\n                that._weekDay = new DropDownList(weekDayInput, {\n                    value: that.options.start.getDay(),\n                    change: change,\n                    dataTextField: \"text\",\n                    dataValueField: \"value\",\n                    dataSource: data.concat($.map(kendo.culture().calendar.days.names, function(dayName, idx) {\n                        return {\n                            text: dayName,\n                            value: idx\n                        };\n                    }))\n                });\n\n                that._weekDayView();\n            }\n        },\n\n        _initWeekDays: function() {\n            var that = this;\n            var rule = that._value;\n            var weekDayButtonGroup = that._weekDayButtonGroup;\n\n            if (weekDayButtonGroup && rule.weekDays && rule.weekDays.length) {\n                var ruleDays = rule.weekDays,\n                    ruleDaysLength = ruleDays.length,\n                    selectors = [],\n                    i = 0,\n                    selectedWeekDayButtons;\n\n                for (; i < ruleDaysLength; i++) {\n                    selectors.push(\"[data-value='\" + ruleDays[i].day + \"']\");\n                }\n\n                selectedWeekDayButtons = weekDayButtonGroup.element.find(selectors.join(\",\"));\n                weekDayButtonGroup.select(selectedWeekDayButtons);\n            }\n        },\n\n        _initMonthDay: function() {\n            var that = this;\n            var rule = that._value;\n            var monthDayInput = that._container.find(\".k-recur-monthday\");\n\n            if (monthDayInput[0]) {\n                that._monthDay = new kendo.ui.NumericTextBox(monthDayInput, {\n                    spinners: that.options.spinners,\n                    min: 1,\n                    max: 31,\n                    decimals: 0,\n                    format: \"#\",\n                    value: rule.monthDays ? rule.monthDays[0] : that.options.start.getDate(),\n                    change: function() {\n                        var value = this.value();\n\n                        rule.monthDays = value ? [value] : value;\n                        that._trigger();\n                    }\n                });\n            }\n        },\n\n        _initCount: function() {\n            var that = this,\n                input = that._container.find(\".k-recur-count\"),\n                rule = that._value;\n\n            that._count = input.kendoNumericTextBox({\n                spinners: that.options.spinners,\n                value: rule.count || 1,\n                decimals: 0,\n                format: \"#\",\n                min: 1,\n                change: function() {\n                    rule.count = this.value();\n                    that._trigger();\n                }\n            }).data(\"kendoNumericTextBox\");\n        },\n\n        _initUntil: function() {\n            var that = this,\n                input = that._container.find(\".k-recur-until\"),\n                start = that.options.start,\n                rule = that._value,\n                until = rule.until,\n                min = until && until < start ? until : start,\n                startInput = that.wrapper.closest(\".k-scheduler-edit-form\").find(\"[name=start]:visible\"),\n                validDateValidationMessage = kendo.format(kendo.ui.Validator.prototype.options.messages.date, that.options.messages.end.on),\n                dateCompareValidationMessage = kendo.ui.Validator.prototype.options.messages.dateCompare,\n                initialValue = new Date(start.getFullYear(), start.getMonth(), start.getDate(), 23, 59, 59);\n\n            input.attr(\"data-validDate-msg\", validDateValidationMessage);\n            input.attr(\"data-untilDateCompare-msg\", dateCompareValidationMessage);\n\n            if (startInput.length === 0) {\n                startInput = that.wrapper.closest(\".k-scheduler-edit-form\").find(\"[name=start]\");\n            }\n\n            if (startInput.length > 0 && startInput.val()) {\n                min = kendo.parseDate(startInput.val());\n\n                if (initialValue < min) {\n                    initialValue = min;\n                }\n            }\n\n            that._until = input.kendoDatePicker({\n                min: min,\n                value: until || initialValue,\n                change: function() {\n                    var date = this.value();\n                    if (date) {\n                        rule.until = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59);\n                    }\n                    that._trigger();\n                }\n            }).data(\"kendoDatePicker\");\n\n            if (startInput) {\n                startInput.on(\"change\", function() {\n                    that._until.setOptions({\n                        min: startInput.val()\n                    });\n                });\n            }\n        },\n\n        _trigger: function() {\n            if (!this.options.mobile) {\n                this.trigger(\"change\");\n            }\n        }\n    });\n\n    var RecurrenceEditor = BaseRecurrenceEditor.extend({\n        init: function(element, options) {\n            var that = this;\n\n            BaseRecurrenceEditor.fn.init.call(that, element, options);\n\n            that._initFrequency();\n\n            that._initContainer();\n\n            that.value(that.options.value);\n        },\n\n        options: {\n            name: \"RecurrenceEditor\"\n        },\n\n        events: [ \"change\" ],\n\n        destroy: function() {\n            var that = this;\n\n            that._frequency.destroy();\n\n            if (this._weekDayButtonGroup) {\n                this._weekDayButtonGroup.destroy();\n            }\n\n            that._container.find(\"input[type=radio],input[type=checkbox]\").off(CLICK + that._namespace);\n\n            kendo.destroy(that._container);\n\n            BaseRecurrenceEditor.fn.destroy.call(that);\n        },\n\n        value: function(value) {\n            var that = this;\n            var timezone = that.options.timezone;\n            var freq, freqButton;\n\n            if (value === undefined) {\n                if (!that._value.freq) {\n                    return \"\";\n                }\n\n                return serialize(that._value, timezone);\n            }\n\n            that._value = parseRule(value, timezone) || {};\n\n            freq = that._value.freq;\n\n            if (freq) {\n                freqButton = that._frequency.element.find(\"[data-value='\" + freq + \"']\");\n                that._frequency.select(freqButton);\n            } else {\n                that._frequency.select(0);\n            }\n\n            that._initView(that._frequency.current().data(\"value\"));\n        },\n\n        _initContainer: function() {\n            var element = this.element,\n                container = $('<div class=\"k-recur-view\" />'),\n                editContainer = element.parent(\".k-edit-field\");\n\n            if (editContainer[0]) {\n                container.insertAfter(editContainer);\n            } else {\n                element.append(container);\n            }\n\n            this._container = container;\n        },\n\n        _initFrequency: function() {\n            var that = this,\n                options = that.options,\n                frequencies = options.frequencies,\n                messages = options.messages.frequencies,\n                buttonGroupElement = $('<div class=\"k-button-group-stretched k-flex-1\"/>').attr({ title: options.messages.recurrenceEditorTitle }),\n                frequency;\n\n            frequencies = $.map(frequencies, function(frequency) {\n                return {\n                    text: messages[frequency],\n                    attributes: { \"data-value\": frequency, \"aria-label\": options.messages.repeat + messages[frequency] }\n                };\n            });\n\n            frequency = frequencies[0];\n            if (frequency && frequency.attributes && frequency.attributes[\"data-value\"] === \"never\") {\n                frequency.attributes[\"data-value\"] = \"\";\n            }\n\n            that.element.append(buttonGroupElement);\n            that._frequency = new ButtonGroup(buttonGroupElement, {\n                items: frequencies,\n                select: function() {\n                    that._value = {};\n                    that._initView(that._frequency.current().data(\"value\"));\n                    that.trigger(\"change\");\n                }\n            });\n        },\n\n        _initView: function(frequency) {\n            var that = this;\n            var rule = that._value;\n            var options = that.options;\n\n            var data = {\n                 frequency: frequency || \"never\",\n                 firstWeekDay: options.firstWeekDay,\n                 messages: options.messages[frequency],\n                 end: options.messages.end\n            };\n\n            kendo.destroy(that._container);\n            that._container.html(RECURRENCE_VIEW_TEMPLATE(data));\n\n            if (!frequency) {\n                that._value = {};\n                return;\n            }\n\n            rule.freq = frequency;\n\n            if (frequency === \"weekly\" && !rule.weekDays) {\n                rule.weekDays = [{\n                    day: options.start.getDay(),\n                    offset: 0\n                }];\n            }\n\n            that._weekDayButtons(options.firstWeekDay);\n\n            that._initInterval();\n            that._initWeekDays();\n            that._initMonthDay();\n            that._initWeekDay();\n            that._initMonth();\n            that._initCount();\n            that._initUntil();\n\n            that._period();\n            that._end();\n        },\n\n        _initMonth: function() {\n            var that = this;\n            var rule = that._value;\n            var month = rule.months || [that.options.start.getMonth() + 1];\n            var monthInputs = that._container.find(\".k-recur-month\");\n            var options;\n\n            if (monthInputs[0]) {\n                options = {\n                    change: function() {\n                        rule.months = [Number(this.value())];\n                        that.trigger(\"change\");\n                    },\n                    dataTextField: \"text\",\n                    dataValueField: \"value\",\n                    dataSource: $.map(kendo.culture().calendar.months.names, function(monthName, idx) {\n                        return {\n                            text: monthName,\n                            value: idx + 1\n                        };\n                    })\n                };\n\n                that._month1 = new DropDownList(monthInputs[0], options);\n                that._month2 = new DropDownList(monthInputs[1], options);\n\n                if (month) {\n                    month = month[0];\n                    that._month1.value(month);\n                    that._month2.value(month);\n                }\n            }\n\n        },\n\n        _end: function() {\n            var that = this;\n            var rule = that._value;\n            var container = that._container;\n            var namespace = that._namespace;\n            var click = function(e) {\n                that._toggleEnd(e.currentTarget.value);\n                that.trigger(\"change\");\n            };\n            var endRule;\n\n            that._buttonNever = container.find(\".k-recur-end-never\").on(CLICK + namespace, click);\n            that._buttonCount = container.find(\".k-recur-end-count\").on(CLICK + namespace, click);\n            that._buttonUntil = container.find(\".k-recur-end-until\").on(CLICK + namespace, click);\n\n            if (rule.count) {\n                endRule = \"count\";\n            } else if (rule.until) {\n                endRule = \"until\";\n            }\n\n            that._toggleEnd(endRule);\n        },\n\n        _period: function() {\n            var that = this;\n            var rule = that._value;\n            var monthly = rule.freq === \"monthly\";\n\n            var toggleRule = monthly ? that._toggleMonthDay : that._toggleYear;\n\n            var selector = \".k-recur-\" + (monthly ? \"month\" : \"year\") + \"-radio\";\n            var radioButtons = that._container.find(selector);\n\n            if (!monthly && rule.freq !== \"yearly\") {\n                return;\n            }\n\n            radioButtons.on(CLICK + that._namespace, function(e) {\n                toggleRule.call(that, e.currentTarget.value);\n                that.trigger(\"change\");\n            });\n\n            that._buttonMonthDay = radioButtons.eq(0);\n            that._buttonWeekDay = radioButtons.eq(1);\n\n            toggleRule.call(that, rule.weekDays ? \"weekday\" : \"monthday\");\n        },\n\n        _toggleEnd: function(endRule) {\n            var that = this;\n            var count, until;\n            var enableCount, enableUntil;\n\n            if (endRule === \"count\") {\n                that._buttonCount.prop(\"checked\", true);\n\n                enableCount = true;\n                enableUntil = false;\n\n                count = that._count.value();\n                until = null;\n            } else if (endRule === \"until\") {\n                that._buttonUntil.prop(\"checked\", true);\n\n                enableCount = false;\n                enableUntil = true;\n\n                count = null;\n                until = that._until.value();\n            } else {\n                that._buttonNever.prop(\"checked\", true);\n\n                enableCount = enableUntil = false;\n                count = until = null;\n            }\n\n            if (that._count) {\n                that._count.enable(enableCount);\n            }\n\n            if (that._until) {\n                that._until.enable(enableUntil);\n            }\n\n            that._value.count = count;\n            that._value.until = until;\n        },\n\n        _toggleMonthDay: function(monthRule) {\n            var that = this;\n            var enableMonthDay = false;\n            var enableWeekDay = true;\n            var clear = false;\n            var monthDays;\n\n            if (monthRule === \"monthday\") {\n                that._buttonMonthDay.prop(\"checked\", true);\n\n                monthDays = [that._monthDay.value()];\n\n                enableMonthDay = true;\n                enableWeekDay = false;\n                clear = true;\n            } else {\n                that._buttonWeekDay.prop(\"checked\", true);\n                monthDays = null;\n            }\n\n            that._weekDay.enable(enableWeekDay);\n            that._weekDayOffset.enable(enableWeekDay);\n            that._monthDay.enable(enableMonthDay);\n\n            that._value.monthDays = monthDays;\n\n            that._weekDayRule(clear);\n        },\n\n        _toggleYear: function(yearRule) {\n            var that = this;\n            var enableMonth1 = false;\n            var enableMonth2 = true;\n            var month;\n\n            if (yearRule === \"monthday\") {\n                enableMonth1 = true;\n                enableMonth2 = false;\n\n                month = that._month1.value();\n            } else {\n                month = that._month2.value();\n            }\n\n            that._month1.enable(enableMonth1);\n            that._month2.enable(enableMonth2);\n\n            that._value.months = [month];\n            that._toggleMonthDay(yearRule);\n        }\n    });\n\n    ui.plugin(RecurrenceEditor);\n\n\n    var RECURRENCE_HEADER_TEMPLATE = kendo.template(\n        '<div data-role=\"content\">' +\n            '<ul class=\"k-listgroup k-listgroup-flush\">' +\n                '<li class=\"k-item k-listgroup-item\">' +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        '<span class=\"k-item-title k-listgroup-form-field-label\">#:headerTitle#</span>' +\n                        '<div class=\"k-recur-pattern k-listgroup-form-field-wrapper\"></div>' +\n                    '</label>' +\n                '</li>' +\n                '<li class=\"k-item k-listgroup-item k-recur-view\"></li>' +\n            '</ul>' +\n        '</div>'\n    );\n\n    var RECURRENCE_REPEAT_PATTERN_TEMPLATE = kendo.template(\n        '# if (frequency !== \"never\") { #' +\n            '<label class=\"k-label k-listgroup-form-row\">' +\n                '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.repeatEvery#</span>' +\n                '<div class=\"k-recur-editor-wrap k-listgroup-form-field-wrapper\">' +\n                    '<input class=\"k-recur-interval\" type=\"number\" pattern=\"\\\\\\\\d*\"/>' +\n                    '# if (messages.interval.length) { #' +\n                        '<span class=\"k-recur-editor-text\">#:messages.interval#</span>' +\n                    '# } #' +\n                '</div>' +\n            '</label>' +\n        '# } #' +\n        '# if (frequency === \"weekly\") { #' +\n            '<ul class=\"k-recur-items-wrap k-listgroup k-listgroup-flush\">' +\n                '<li class=\"k-item k-listgroup-item k-no-click\">' +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.repeatOn#</span>' +\n                    '</label>' +\n                '</li>' +\n                '<div class=\"k-button-group-stretched k-recur-weekday-buttons\" title=\"#:messages.repeatOn#\">' +\n            '</ul>' +\n        '# } else if (frequency === \"monthly\") { #' +\n            '<ul class=\"k-recur-items-wrap k-listgroup k-listgroup-flush\">' +\n                '<li class=\"k-item k-listgroup-item\">' +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.repeatBy#</span>' +\n                        '<div class=\"k-repeat-rule k-listgroup-form-field-wrapper\"></div>' +\n                    '</label>' +\n                '</li>' +\n                '<li class=\"k-monthday-view k-item k-listgroup-item\" style=\"display:none\">' +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.day#</span>' +\n                        '<div class=\"k-listgroup-form-field-wrapper\"><input class=\"k-recur-monthday\" type=\"number\" aria-label=\"#:messages.date#\" title=\"#:messages.day#\" pattern=\"\\\\\\\\d*\"/></div>' +\n                    '</label>' +\n                '</li>' +\n                '<li class=\"k-weekday-view k-item k-listgroup-item\" style=\"display:none\">' +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.every#</span>' +\n                        '<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-weekday-offset\" title=\"#:messages.every#\"></select></div>' +\n                    '</label>' +\n                '</li>' +\n                '<li class=\"k-weekday-view k-item k-listgroup-item\" style=\"display:none\">' +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.day#</span>' +\n                        '<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-weekday\" title=\"#:messages.day#\"></select></div>' +\n                    '</label>' +\n                '</li>' +\n            '</ul>' +\n        '# } else if (frequency === \"yearly\") { #' +\n            '<ul class=\"k-recur-items-wrap k-listgroup k-listgroup-flush\">' +\n                '<li class=\"k-item k-listgroup-item\">' +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.repeatBy#</span>' +\n                        '<div class=\"k-repeat-rule k-listgroup-form-field-wrapper\"></div>' +\n                    '</label>' +\n                '</li>' +\n                '<li class=\"k-monthday-view k-item k-listgroup-item\" style=\"display:none\">' +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.day#</span>' +\n                        '<div class=\"k-listgroup-form-field-wrapper\"><input class=\"k-recur-monthday\" type=\"number\" aria-label=\"#:messages.date#\" title=\"#:messages.day#\" pattern=\"\\\\\\\\d*\"/></div>' +\n                    '</label>' +\n                '</li>' +\n                '<li class=\"k-weekday-view k-item k-listgroup-item\" style=\"display:none\">' +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.every#</span>' +\n                        '<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-weekday-offset\" title=\"#:messages.every#\"></select></div>' +\n                    '</label>' +\n                '</li>' +\n                '<li class=\"k-weekday-view k-item k-listgroup-item\" style=\"display:none\">' +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.day#</span>' +\n                        '<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-weekday\" title=\"#:messages.day#\"></select></div>' +\n                    '</label>' +\n                '</li>' +\n                '<li class=\"k-item k-item k-listgroup-item\">' +\n                    '<label class=\"k-label k-listgroup-form-row\">' +\n                        '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.month#</span>' +\n                        '<div class=\"k-listgroup-form-field-wrapper\"><select class=\"k-recur-month\" title=\"#:messages.month#\"></select></div>' +\n                    '</label>' +\n                '</li>' +\n           '</ul>' +\n        '# } #'\n    );\n\n    var RECURRENCE_END_PATTERN_TEMPLATE = kendo.template(\n        '# if (endPattern === \"count\") { #' +\n            '<label class=\"k-label k-listgroup-form-row\">' +\n                '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.after#</span>' +\n                '<div class=\"k-listgroup-form-field-wrapper\"><input class=\"k-recur-count\" aria-label=\"#:messages.occurrence#\" type=\"number\" pattern=\"\\\\\\\\d*\" /></div>' +\n            '</label>' +\n        '# } else if (endPattern === \"until\") { #' +\n            '<label class=\"k-label k-listgroup-form-row\">' +\n                '<span class=\"k-item-title k-listgroup-form-field-label\">#:messages.on#</span>' +\n                '<div class=\"k-listgroup-form-field-wrapper\"><input type=\"date\" class=\"k-recur-until\" aria-label=\"#:messages.on#\" name=\"recur-until\"/></div>' +\n            '</label>' +\n        '# } #'\n    );\n\n    var RECURRENCE_GROUP_BUTTON_TEMPLATE = kendo.template(\n        '<select class=\"k-scheduler-select\">' +\n            '#for (var i = 0, length = dataSource.length; i < length; i++) {#' +\n                '<option value=\"#=dataSource[i].value#\" #= value === dataSource[i].value  ? \\\"selected\\\" : \\\"\\\" #>#:dataSource[i].text#</option>' +\n            '#}#' +\n        '</select>'\n    );\n\n    var MobileRecurrenceEditor = BaseRecurrenceEditor.extend({\n        init: function(element, options) {\n            var that = this;\n\n            BaseRecurrenceEditor.fn.init.call(that, element, options);\n\n            options = that.options;\n\n            that._optionTemplate = kendo.template('<option value=\"#:value#\">#:text#</option>');\n\n            that.value(options.value);\n\n            that._pane = options.pane || that.wrapper.closest(\"[data-role=pane]\").data(\"kendoPane\");\n\n            that._initRepeatButton();\n\n            that._initParentRepeatEnd();\n\n            that._defaultValue = that._value;\n        },\n\n        options: {\n            name: \"MobileRecurrenceEditor\",\n            animations: {\n                left: \"slide\",\n                right: \"slide:right\"\n            },\n            mobile: true,\n            messages: {\n                cancel: \"Cancel\",\n                update: \"Save\",\n                endTitle: \"Repeat ends\",\n                repeatTitle: \"Repeat pattern\",\n                headerTitle: \"Repeat event\",\n                end: {\n                    patterns: {\n                        never: \"Never\",\n                        after: \"After...\",\n                        on: \"On...\"\n                    },\n                    never: \"Never\",\n                    after: \"End repeat after\",\n                    on: \"End repeat on\"\n                },\n                daily: {\n                    interval: \"\"\n                },\n                hourly: {\n                    interval: \"\"\n                },\n                weekly: {\n                    interval: \"\"\n                },\n                monthly: {\n                    interval: \"\",\n                    repeatBy: \"Repeat by: \",\n                    dayOfMonth: \"Day of the month\",\n                    dayOfWeek: \"Day of the week\",\n                    repeatEvery: \"Repeat every\",\n                    every: \"Every\",\n                    day: \"Day \"\n                },\n                yearly: {\n                    interval: \"\",\n                    repeatBy: \"Repeat by: \",\n                    dayOfMonth: \"Day of the month\",\n                    dayOfWeek: \"Day of the week\",\n                    repeatEvery: \"Repeat every: \",\n                    every: \"Every\",\n                    month: \"Month\",\n                    day: \"Day\"\n                }\n            }\n        },\n\n        events: [ \"change\" ],\n\n        value: function(value) {\n            var that = this;\n            var timezone = that.options.timezone;\n\n            if (value === undefined) {\n                if (!that._value.freq) {\n                    return \"\";\n                }\n\n                return serialize(that._value, timezone);\n            }\n\n            that._value = parseRule(value, timezone) || {};\n        },\n\n        destroy: function() {\n            this._destroyView();\n\n            kendo.destroy(this._endFields);\n\n            if (this._weekDayButtonGroup) {\n                this._weekDayButtonGroup.destroy();\n            }\n\n            this.element.off(CLICK + this._namespace);\n\n            BaseRecurrenceEditor.fn.destroy.call(this);\n        },\n\n        _initInterval: function() {\n            var that = this;\n            var rule = that._value;\n\n            that._container.find(\".k-recur-interval\")\n                .val(that._value.interval || 1)\n                .on(CHANGE + that._namespace, function(e) {\n                    rule.interval = e.target.value;\n                    that._trigger();\n                });\n        },\n\n        _initRepeatButton: function() {\n            var that = this;\n            var freq = that.options.messages.frequencies[this._value.freq || \"never\"];\n\n            that._chevronButton = $('<span class=\"k-icon k-i-arrow-chevron-right\"></span>');\n            that._repeatValue = $('<span class=\"\">' + freq + '</span>');\n\n            that.element.append(that._repeatValue).append(that._chevronButton);\n\n            that.element.parents(\"li.k-item\").on(CLICK + that._namespace, function(e) {\n                e.preventDefault();\n                that._createView(\"repeat\");\n                that._pane.navigate(that._view, that.options.animations.left);\n            });\n        },\n\n        _endLiItem: function() {\n            var that = this;\n            return '<li class=\"k-item k-listgroup-item\"><label class=\"k-label k-listgroup-form-row\"><span class=\"k-item-title k-listgroup-form-field-label\">' + that.options.messages.end.mobileLabel + '</span></label></li>';\n        },\n\n        _initParentRepeatEnd: function() {\n            var that = this;\n\n            var endLabelField = $(that._endLiItem()).insertAfter(that.element.parents(\"li.k-item\"));\n\n            var endEditField = $('<div class=\"k-scheduler-recur-end-wrap k-listgroup-form-field-wrapper\"><span class=\"k-scheduler-recur-end\"></span></div>')\n                .appendTo(endLabelField.find(\".k-label\"));\n\n            endLabelField.on(CLICK + that._namespace, function(e) {\n                e.preventDefault();\n                that._navigateToView(\"repeat\");\n            });\n\n            that._endParentLabelField = endLabelField.toggle(!!that._value.freq);\n            that._endParentEndButton = endEditField.find(\".k-scheduler-recur-end\").text(that._endText());\n        },\n\n        _initRepeatEnd: function() {\n            var that = this;\n\n            var endLabelField = $(that._endLiItem()).insertAfter(that._container);\n\n            var endEditField = $('<div class=\"k-scheduler-recur-end-wrap k-listgroup-form-field-wrapper\"><span class=\"k-scheduler-recur-end\"></span><span class=\"k-icon k-i-arrow-chevron-right\"></span></div>')\n                .appendTo(endLabelField.find(\".k-label\"));\n\n            endLabelField.on(CLICK + that._namespace, function(e) {\n                e.preventDefault();\n                that._navigateToView(\"end\");\n            });\n\n            that._endLabelField = endLabelField.toggleClass(\"k-state-disabled\", !that._value.freq);\n            that._endButton = endEditField.find(\".k-scheduler-recur-end\").text(that._endText());\n        },\n\n        _navigateToView: function(viewName) {\n            var that = this;\n            that._createView(viewName);\n            that._pane.navigate(that._view, that.options.animations.left);\n        },\n\n        _endText: function() {\n            var rule = this._value;\n            var messages = this.options.messages.end;\n\n            var text = messages.never;\n\n            if (rule.count) {\n                text = kendo.format(\"{0} {1}\", messages.after, rule.count);\n            } else if (rule.until) {\n                text = kendo.format(\"{0} {1:d}\", messages.on, rule.until);\n            }\n\n            return text;\n        },\n\n        _initFrequency: function() {\n            var that = this;\n            var frequencyMessages = that.options.messages.frequencies;\n\n            var html = RECURRENCE_GROUP_BUTTON_TEMPLATE({\n                dataSource: $.map(this.options.frequencies, function(frequency) {\n                    return {\n                        text: frequencyMessages[frequency],\n                        value: frequency !== \"never\" ? frequency : \"\"\n                    };\n                }),\n                value: that._value.freq || \"\",\n                ns: kendo.ns\n            });\n\n            that._view.element\n                .find(\".k-recur-pattern\")\n                .append(html);\n\n            that._view.element.find(\".k-scheduler-select\")\n                .on(CHANGE + that._namespace, function(e) {\n                    var value = e.target.value;\n                    that._value = { freq: value };\n                    that._defaultValue = $.extend({}, that._value);\n                    that._initRepeatView();\n                    that._endButton.text(that._endText());\n                    that._endParentEndButton.text(that._endText());\n                });\n        },\n\n        _initEndNavigation: function() {\n            var that = this;\n            var endMessages = that.options.messages.end.patterns;\n            var rule = that._value;\n            var value = \"\";\n\n            if (rule.count) {\n                value = \"count\";\n            } else if (rule.until) {\n                value = \"until\";\n            }\n\n            var html = RECURRENCE_GROUP_BUTTON_TEMPLATE({\n                dataSource: [\n                    { text: endMessages.never, value: \"\" },\n                    { text: endMessages.after, value: \"count\" },\n                    { text: endMessages.on, value: \"until\" }\n                ],\n                value: value,\n                ns: kendo.ns\n            });\n\n            that._view.element\n                .find(\".k-recur-pattern\")\n                .append(html);\n\n            that._view.element.find(\".k-scheduler-select\")\n                .on(CHANGE + that._namespace, function(e) {\n                    var value = e.target.value;\n                    var count = null;\n                    var until = null;\n\n                    that._initEndView(value);\n\n                    if (that._count.length) {\n                        count = that._count.val();\n                        until = null;\n                    } else if (that._until.length) {\n                        count = null;\n                        until = that._until.val ? kendo.parseDate(that._until.val(), \"yyyy-MM-dd\") : that._until.value();\n                    }\n\n                    rule.count = count;\n                    rule.until = until;\n                });\n        },\n\n        _createView: function(viewType) {\n            var that = this;\n            var options = that.options;\n            var messages = options.messages;\n            var headerTitle = messages[viewType === \"repeat\" ? \"repeatTitle\" : \"endTitle\"];\n\n            var html = '<div data-role=\"view\" class=\"k-popup-edit-form k-scheduler-edit-form\" id=\"recurrence\">' +\n                       '<div data-role=\"header\" class=\"k-header\">' +\n                           '<a href=\"#\" class=\"k-header-cancel k-scheduler-cancel k-link\" title=\"' + messages.cancel + '\"' +\n                           'aria-label=\"' + messages.cancel + '\"><span class=\"k-icon k-i-arrow-chevron-left\"></span></a>' +\n                               messages.headerTitle +\n                           '<a href=\"#\" class=\"k-header-done k-scheduler-update k-link\" title=\"' + messages.update + '\" ' +\n                           'aria-label=\"' + messages.update + '\"><span class=\"k-icon k-i-check\"></span></a>' +\n                       '</div>';\n\n            var returnViewId = that._pane.view().id;\n\n            that._view = that._pane.append(html + RECURRENCE_HEADER_TEMPLATE({ headerTitle: headerTitle }));\n\n            that._view.element.on(CLICK + that._namespace, \"a.k-scheduler-cancel, a.k-scheduler-update\", function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                if ($(this).hasClass(\"k-scheduler-update\")) {\n                    that.trigger(\"change\");\n                    that._defaultValue = $.extend({}, that._value);\n                } else {\n                    that._value = that._defaultValue;\n                }\n\n                var frequency = that._value.freq;\n\n                that._endParentEndButton.text(that._endText());\n                that._endParentLabelField.toggle(!!frequency && frequency !== \"never\");\n                that._endButton.text(that._endText());\n\n                that._repeatValue.text(messages.frequencies[frequency || \"never\"]);\n\n                that._pane.one(\"viewShow\", function() {\n                    that._destroyView();\n                });\n\n                that._pane.navigate(returnViewId, that.options.animations.right);\n            });\n\n            that._container = that._view.element.find(\".k-recur-view\");\n\n            if (viewType === \"repeat\") {\n                that._initFrequency();\n                that._initRepeatView();\n                that._initRepeatEnd();\n            } else {\n                that._initEndNavigation();\n                that._initEndView();\n            }\n        },\n\n        _destroyView: function() {\n            if (this._view) {\n\n                this._view.destroy();\n                this._view.element.remove();\n                this._container = null;\n            }\n\n\n            this._view = null;\n        },\n\n        _initRepeatView: function() {\n            var that = this;\n            var frequency = that._value.freq || \"never\";\n\n            var data = {\n                 frequency: frequency,\n                 firstWeekDay: that.options.firstWeekDay,\n                 messages: that.options.messages[frequency]\n            };\n\n            var html = RECURRENCE_REPEAT_PATTERN_TEMPLATE(data);\n\n            var container = that._container = that._container || this._pane.view().content.find(\"li.k-recur-view\");\n            var rule = that._value;\n\n            if (that._endLabelField) {\n                that._endLabelField.toggleClass(\"k-state-disabled\", frequency === \"never\");\n            }\n\n            kendo.destroy(container);\n            container.html(html);\n\n            if (!html) {\n                that._value = {};\n                container.hide();\n                return;\n            } else {\n                container.show();\n            }\n\n            if (frequency === \"weekly\" && !rule.weekDays) {\n                 rule.weekDays = [{\n                    day: that.options.start.getDay(),\n                    offset: 0\n                 }];\n            }\n\n            that._weekDayButtons(that.options.firstWeekDay);\n\n            that._initInterval();\n            that._initMonthDay();\n            that._initWeekDays();\n            that._initWeekDay();\n            that._initMonth();\n\n            that._period();\n        },\n\n        _initMonthDay: function() {\n            var that = this;\n            var rule = that._value;\n            var monthDayInput = that._monthDay = that._container.find(\".k-recur-monthday\");\n\n            monthDayInput.attr({\n                min: 1,\n                max: 31\n            })\n            .val(rule.monthDays ? rule.monthDays[0] : that.options.start.getDate())\n            .on(CHANGE + that._namespace, function(e) {\n                rule.count = e.target.value;\n                that._trigger();\n            });\n        },\n\n        _initCount: function() {\n            var that = this,\n                input = that._count = that._container.find(\".k-recur-count\"),\n                rule = that._value;\n\n            input.val(rule.count || 1)\n                .on(CHANGE + that._namespace, function(ev) {\n                    rule.count = ev.target.value;\n                    that._trigger();\n                });\n        },\n\n        _initEndView: function(endPattern) {\n            var that = this;\n            var rule = that._value;\n\n            if (endPattern === undefined) {\n                if (rule.count) {\n                    endPattern = \"count\";\n                } else if (rule.until) {\n                    endPattern = \"until\";\n                }\n            }\n\n            var data = {\n                 endPattern: endPattern,\n                 messages: that.options.messages.end\n            };\n\n            kendo.destroy(that._container);\n            that._container.html(RECURRENCE_END_PATTERN_TEMPLATE(data));\n\n            that._initCount();\n            that._initUntil();\n        },\n\n        _initWeekDay: function() {\n            var that = this, data;\n\n            var weekdayMessage = that.options.messages.weekdays;\n            var offsetMessage = that.options.messages.offsetPositions;\n\n            var weekDaySelect = that._container.find(\".k-recur-weekday\");\n\n            var change = function() {\n                that._weekDayRule();\n                that.trigger(\"change\");\n            };\n\n            if (weekDaySelect[0]) {\n                that._weekDayOffset = that._container.find(\".k-recur-weekday-offset\")\n                                          .html(that._options([\n                                            { text: offsetMessage.first, value: \"1\" },\n                                            { text: offsetMessage.second, value: \"2\" },\n                                            { text: offsetMessage.third, value: \"3\" },\n                                            { text: offsetMessage.fourth, value: \"4\" },\n                                            { text: offsetMessage.last, value: \"-1\" }\n                                          ]))\n                                          .on(\"change\", change);\n\n                data = [\n                    { text: weekdayMessage.day, value: \"day\" },\n                    { text: weekdayMessage.weekday, value: \"weekday\" },\n                    { text: weekdayMessage.weekend, value: \"weekend\" }\n                ];\n\n                data = data.concat($.map(kendo.culture().calendar.days.names, function(dayName, idx) {\n                    return {\n                        text: dayName,\n                        value: idx\n                    };\n                }));\n\n                that._weekDay = weekDaySelect.html(that._options(data))\n                                             .on(\"change\", change)\n                                             .val(that.options.start.getDay());\n\n                that._weekDayView();\n            }\n        },\n\n        _initMonth: function() {\n            var that = this;\n            var rule = that._value;\n            var start = that.options.start;\n            var month = rule.months || [start.getMonth() + 1];\n            var monthSelect = that._container.find(\".k-recur-month\");\n            var monthNames = kendo.culture().calendar.months.names;\n\n            if (monthSelect[0]) {\n                var data = $.map(monthNames, function(monthName, idx) {\n                    return {\n                        text: monthName,\n                        value: idx + 1\n                    };\n                });\n\n                monthSelect.html(that._options(data))\n                           .on(\"change\", function() {\n                               rule.months = [Number(this.value)];\n                           });\n\n                that._monthSelect = monthSelect;\n\n                if (month) {\n                    monthSelect.val(month[0]);\n                }\n            }\n\n        },\n\n        _period: function() {\n            var that = this;\n            var rule = that._value;\n            var container = that._container;\n            var messages = that.options.messages[rule.freq];\n            var repeatRuleGroupButton = container.find(\".k-repeat-rule\");\n            var weekDayView = container.find(\".k-weekday-view\");\n            var monthDayView = container.find(\".k-monthday-view\");\n\n            if (repeatRuleGroupButton[0]) {\n                var currentValue = rule.weekDays ? \"weekday\" : \"monthday\";\n\n                var html = RECURRENCE_GROUP_BUTTON_TEMPLATE({\n                    value: currentValue,\n                    dataSource: [\n                        { text: messages.dayOfMonth, value: \"monthday\" },\n                        { text: messages.dayOfWeek, value: \"weekday\" }\n                    ],\n                    ns: kendo.ns\n                });\n\n                var init = function(val) {\n                    var weekDayName = that._weekDay.val();\n                    var weekDayOffset = that._weekDayOffset.val();\n                    var monthDay = that._monthDay.val();\n                    var month = that._monthSelect ? that._monthSelect.val() : null;\n\n                    if (val === \"monthday\") {\n                        rule.weekDays = null;\n                        rule.monthDays = monthDay ? [monthDay] : monthDay;\n                        rule.months = month ? [Number(month)] : month;\n\n                        weekDayView.hide();\n                        monthDayView.show();\n                    } else {\n                        rule.monthDays = null;\n                        rule.months = month ? [Number(month)] : month;\n\n                        rule.weekDays = [{\n                            offset: Number(weekDayOffset),\n                            day: Number(weekDayName)\n                        }];\n\n                        weekDayView.show();\n                        monthDayView.hide();\n                    }\n                };\n\n                repeatRuleGroupButton\n                    .append(html);\n\n                repeatRuleGroupButton.find(\".k-scheduler-select\")\n                    .on(CHANGE + that._namespace, function(e) {\n                        init(e.target.value);\n                    });\n\n                init(currentValue);\n            }\n        },\n\n        _initUntil: function() {\n            var that = this;\n            var input = that._container.find(\".k-recur-until\");\n            var start = that.options.start;\n            var rule = that._value;\n            var until = rule.until;\n            var min = until && until < start ? until : start;\n            var validDateValidationMessage = kendo.format(kendo.ui.Validator.prototype.options.messages.date, that.options.messages.end.on);\n            var dateCompareValidationMessage = kendo.ui.Validator.prototype.options.messages.dateCompare;\n\n            input.attr(\"data-validDate-msg\", validDateValidationMessage);\n            input.attr(\"data-untilDateCompare-msg\", dateCompareValidationMessage);\n\n            if (kendo.support.input.date) {\n                that._until = input.attr(\"min\", kendo.toString(min, \"yyyy-MM-dd\"))\n                                   .val(kendo.toString(until || start, \"yyyy-MM-dd\"))\n                                   .on(\"change\", function() {\n                                        var date = kendo.parseDate(this.value, \"yyyy-MM-dd\");\n                                        if (date) {\n                                            rule.until = date;\n                                        }\n                                        that._trigger();\n                                   });\n            } else {\n                that._until = input.kendoDatePicker({\n                    min: min,\n                    value: until || start,\n                    change: function() {\n                        var date = this.value();\n                        if (date) {\n                            rule.until = date;\n                        }\n                        that._trigger();\n                    }\n                }).data(\"kendoDatePicker\");\n            }\n        },\n\n        _options: function(data, optionLabel) {\n            var idx = 0;\n            var html = \"\";\n            var length = data.length;\n            var template = this._optionTemplate;\n\n            if (optionLabel) {\n                html += template({ value: \"\", text: optionLabel });\n            }\n\n            for (; idx < length; idx++) {\n                html += template(data[idx]);\n            }\n\n            return html;\n        }\n    });\n\n    ui.plugin(MobileRecurrenceEditor);\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n\n"],"names":["define","__meta__","id","name","category","depends","hidden","$","window","kendo","jQuery","undefined","timezone","Class","ui","Widget","DropDownList","ButtonGroup","kendoDate","date","setTime","setDayOfWeek","adjustDST","firstDayOfMonth","getMilliseconds","DAYS_IN_LEAPYEAR","DAYS_IN_YEAR","MONTHS","WEEK_DAYS","0","1","2","3","4","5","6","WEEK_DAYS_IDX","SU","MO","TU","WE","TH","FR","SA","DATE_FORMATS","RULE_NAMES","RULE_NAMES_LENGTH","length","RECURRENCE_DATE_FORMAT","limitation","months","end","rule","monthRules","ruleValues","getMonth","changed","setMonth","setFullYear","getFullYear","monthDays","monthLength","month","days","hours","getHours","normalize","monthDay","getMonthLength","getDate","sort","numberSortPredicate","yearDays","year","yearDay","leapYear","dayInYear","weeks","weekStart","day","week","weekInYear","weekDays","offsetDate","Date","getTime","offsets","start","normalizeDay","getDay","weekDayRules","ruleWeekValues","traverseRuleForNextMont","nextMonthFirstDay","ruleDay","normalizeDayIndex","weekDayRule","freq","positions","position","forEach","offset","isInWeek","weekInMonth","numberOfWeeks","setDate","hourRules","startTime","_startTime","startHours","setHours","minutes","setMinutes","getMinutes","minuteRules","currentMinutes","seconds","setSeconds","getSeconds","secondRules","BaseFrequency","extend","next","options","idx","this","_hour","limit","interval","ruleName","firstRule","modified","current","_startPeriod","frequency","excess","diff","startTimeHours","getTimezoneOffset","MS_PER_HOUR","MS_PER_MINUTE","Math","floor","intervalExcess","round","MS_PER_DAY","_date","_getNumberOfWeeksBetweenDates","normalizedCurrentIndex","normalizedStartIndex","_hasRuleValue","first","second","exactWeeks","HourlyFrequency","fn","DailyFrequency","WeeklyFrequency","setup","eventStartDate","MonthlyFrequency","YearlyFrequency","frequencies","hourly","daily","weekly","monthly","yearly","CLICK","CHANGE","firstWeekDay","firstWeekLength","ceil","weekDay","normalizeOffset","lastDate","weeksInMonth","skipFirst","skipLast","currentDay","ruleWeekOffset","weekNumber","result","push","rules","value","availableRules","ruleValue","parseArray","list","range","parseInt","isNaN","parseWeekDayList","valueLength","substring","toUpperCase","serializeWeekDayList","valueString","toString","a","b","parseExceptions","exceptions","zone","dates","split","indexOf","parseUTCDate","isException","Array","isArray","dateTime","toExceptionString","concat","convert","join","startPeriodByFreq","endPeriodByFreq","eventsByPosition","periodEvents","until","periodEventsLength","events","event","inPeriod","removeExceptionDates","exceptionDates","expand","endTime","endDate","durationMS","startPeriod","ruleStart","ruleEnd","useEventStart","freqName","eventStartTime","eventStartMS","eventStart","count","currentIdx","shiftedStart","shiftedEnd","shiftedStartTime","shifterEndTime","parseRule","recurrenceRule","getZoneOffset","startTimezone","endTimezone","clone","recurrenceException","exdates","set","_endPeriod","duration","allDayCompensation","isAllDay","toInvariantTime","inPeriodCheckEndDate","toUtcTime","startZone","endZone","startOffsetDiff","endOffsetDiff","startTZOffsetDiff","endTZOffsetDiff","offsetTicksStart","offsetTicksEnd","toOccurrence","_endTime","slice","isMissingDSTHour","isDSTMissingHour","dateOffset","dateMinusHour","dateMinusHourOffset","parseDate","apply","parseDateRule","dateRule","pairs","pair","property","tzid","valueIdx","recur","instance","splits","part","parts","predicate","day1","day2","trim","toLowerCase","culture","calendar","firstDay","serializeDateRule","val","serialize","ruleString","recurrence","parse","RECURRENCE_VIEW_TEMPLATE","template","DAY_RULE","WEEKDAY_RULE","WEEKEND_RULE","BaseRecurrenceEditor","init","element","that","call","wrapper","today","_namespace","spinners","mobile","messages","repeat","recurrenceEditorTitle","never","repeatEvery","repeatOn","of","label","mobileLabel","after","occurrence","on","offsetPositions","third","fourth","last","weekdays","weekday","weekend","_initInterval","_value","_container","find","kendoNumericTextBox","decimals","format","min","change","_trigger","_weekDayButtons","names","abbreviated","namesAbbr","values","items","text","attributes","data-value","aria-label","_weekDayButtonGroup","selection","select","selectedDays","map","i","Number","getAttribute","_weekDayRule","clear","_weekDay","_weekDayOffset","_weekDayView","weekDayOffsetWidget","weekDayOffset","weekDayValue","method","_initWeekDay","data","weekdayMessage","offsetMessage","weekDayInput","dataTextField","dataValueField","dataSource","dayName","_initWeekDays","weekDayButtonGroup","ruleDays","ruleDaysLength","selectors","selectedWeekDayButtons","_initMonthDay","monthDayInput","_monthDay","NumericTextBox","max","_initCount","input","_count","_initUntil","startInput","closest","validDateValidationMessage","Validator","prototype","dateCompareValidationMessage","dateCompare","initialValue","attr","_until","kendoDatePicker","setOptions","trigger","RecurrenceEditor","_initFrequency","_initContainer","destroy","_frequency","off","freqButton","_initView","container","editContainer","parent","insertAfter","append","buttonGroupElement","title","html","_initMonth","_period","_end","monthInputs","monthName","_month1","_month2","namespace","click","e","_toggleEnd","currentTarget","endRule","_buttonNever","_buttonCount","_buttonUntil","toggleRule","_toggleMonthDay","_toggleYear","selector","radioButtons","_buttonMonthDay","eq","_buttonWeekDay","enableCount","enableUntil","prop","enable","monthRule","enableMonthDay","enableWeekDay","yearRule","enableMonth1","enableMonth2","RECURRENCE_HEADER_TEMPLATE","plugin","RECURRENCE_REPEAT_PATTERN_TEMPLATE","RECURRENCE_END_PATTERN_TEMPLATE","RECURRENCE_GROUP_BUTTON_TEMPLATE","MobileRecurrenceEditor","_optionTemplate","_pane","pane","_initRepeatButton","_initParentRepeatEnd","_defaultValue","animations","left","right","cancel","update","endTitle","repeatTitle","headerTitle","patterns","repeatBy","dayOfMonth","dayOfWeek","every","_destroyView","_endFields","target","_chevronButton","_repeatValue","parents","preventDefault","_createView","navigate","_view","_endLiItem","endLabelField","endEditField","appendTo","_navigateToView","_endParentLabelField","toggle","_endParentEndButton","_endText","_initRepeatEnd","_endLabelField","toggleClass","_endButton","viewName","frequencyMessages","ns","_initRepeatView","_initEndNavigation","endMessages","_initEndView","viewType","returnViewId","view","stopPropagation","hasClass","one","remove","content","hide","show","ev","endPattern","weekDaySelect","_options","monthSelect","monthNames","_monthSelect","repeatRuleGroupButton","weekDayView","monthDayView","currentValue","weekDayName","support","optionLabel","amd","a1","a2","a3"],"mappings":"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"}