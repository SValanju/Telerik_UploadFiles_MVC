{"version":3,"file":"kendo.pivotgrid.min.js","sources":["kendo.pivotgrid.js"],"sourcesContent":["(function(f, define) {\n    define('kendo.pivotgrid',[ \"kendo.pivot.common\", \"kendo.dom\", \"kendo.data\" ], f);\n})(function() {\n\nvar __meta__ = { // jshint ignore:line\n    id: \"pivotgrid\",\n    name: \"PivotGrid\",\n    category: \"web\",\n    description: \"The PivotGrid widget is a data summarization tool.\",\n    depends: [ \"dom\", \"data\", \"data.xml\", \"sortable\", \"pivot.common\" ],\n    features: [{\n        id: \"pivotgrid-configurator\",\n        name: \"Configurator\",\n        description: \"The PivotConfigurator widget allows the user to select data slices displayed in PivotGrid\",\n        depends: [ \"pivot.configurator\" ]\n    }, {\n        id: \"pivotgrid-filtering\",\n        name: \"Filtering\",\n        description: \"Support for filtering\",\n        depends: [ \"pivot.fieldmenu\" ]\n    }, {\n        id: \"pivotgrid-excel-export\",\n        name: \"Excel export\",\n        description: \"Export pivot grid data as Excel spreadsheet\",\n        depends: [ \"ooxml\" ]\n    }, {\n        id: \"pivotgrid-pdf-export\",\n        name: \"PDF export\",\n        description: \"Export pivot grid data as PDF\",\n        depends: [ \"pdf\", \"drawing\" ]\n    }, {\n        id: \"mobile-scroller\",\n        name: \"Mobile scroller\",\n        description: \"Support for kinetic scrolling in mobile device\",\n        depends: [ \"mobile.scroller\" ]\n    }]\n};\n\n/*jshint eqnull: true, laxbreak:true */\n(function($, undefined) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Class = kendo.Class,\n        Comparer = kendo.data.Comparer,\n        Widget = ui.Widget,\n        DataSource = kendo.data.DataSource,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        common = window.kendo.pivotgrid.common,\n        fetchDiscover = common.fetchDiscover,\n        normalizeFilter = kendo.data.Query.normalizeFilter,\n        normalizeSort = kendo.data.Query.normalizeSort,\n        toString = {}.toString,\n        identity = function(o) { return o; },\n        map = $.map,\n        extend = $.extend,\n        isFunction = kendo.isFunction,\n        fetchData = common.fetchData,\n        createDataState = common.createDataState,\n        toColumns = common.toColumns,\n        toRows = common.toRows,\n        toTree = common.toTree,\n        toData = common.toData,\n        headersReducer = common.headersReducer,\n        RESIZE = \"resize\",\n        READ = \"read\",\n        CHANGE = \"change\",\n        ERROR = \"error\",\n        REQUESTSTART = \"requestStart\",\n        PROGRESS = \"progress\",\n        REQUESTEND = \"requestEnd\",\n        MEASURES = \"Measures\",\n        STATERESET = \"stateReset\",\n        AUTO = \"auto\",\n        DIV = \"<div></div>\",\n        NS = \".kendoPivotGrid\",\n        ROW_TOTAL_KEY = \"__row_total__\",\n        DATABINDING = \"dataBinding\",\n        DATABOUND = \"dataBound\",\n        EXPANDMEMBER = \"expandMember\",\n        HEADERTEMPLATE = '<th data-key=\"#:key#\" class=\"#:headerClass#\" #if (colspan) {#colspan=\"#:colspan#\"#}# #if (rowspan) {#rowspan=\"#:rowspan#\"#}#>' +\n                                    '#if (expandable) {# <span class=\"k-icon k-i-arrow-chevron-#:iconClass# k-color-inherit\" role=\"presentation\"></span>#}#' +\n                                '</th>',\n        COLLAPSEMEMBER = \"collapseMember\",\n        STATE_EXPANDED = \"k-i-collapse\",\n        STATE_COLLAPSED = \"k-i-expand\",\n        HEADER_TEMPLATE = \"<span>#: data.member.caption || data.member.name #</span>\",\n        KPISTATUS_TEMPLATE = '<span class=\"k-icon k-i-kpi-status-#=data.dataItem.value > 0 ? \\\"open\\\" : data.dataItem.value < 0 ? \\\"deny\\\" : \\\"hold\\\"#\" title=\"#:data.dataItem.value#\"></span>',\n        KPITREND_TEMPLATE = '<span class=\"k-icon k-i-kpi-trend-#=data.dataItem.value > 0 ? \\\"increase\\\" : data.dataItem.value < 0 ? \\\"decrease\\\" : \\\"equal\\\"#\" title=\"#:data.dataItem.value#\"></span>',\n        DATACELL_TEMPLATE = '#= data.dataItem ? kendo.htmlEncode(data.dataItem.fmtValue || data.dataItem.value) || \"&nbsp;\" : \"&nbsp;\" #',\n        LAYOUT_TABLE = '<table class=\"k-pivot-layout\">' +\n                            '<tr>' +\n                                '<td>' +\n                                    '<div class=\"k-pivot-rowheaders\"></div>' +\n                                '</td>' +\n                                '<td>' +\n                                    '<div class=\"k-pivot-table\"></div>' +\n                                '</td>' +\n                            '</tr>' +\n                        '</table>';\n        var AXIS_ROWS = \"rows\";\n        var AXIS_COLUMNS = \"columns\";\n\n    function normalizeMeasures(measure) {\n        var descriptor = typeof measure === \"string\" ? [{ name: measure }] : measure;\n        var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            if (typeof d === \"string\") {\n                return { name: d };\n            }\n            return { name: d.name, type: d.type };\n        });\n    }\n\n    function normalizeMembers(member) {\n        var descriptor = typeof member === \"string\" ? [{ name: [member], expand: false }] : member;\n        var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            if (typeof d === \"string\") {\n                return { name: [d], expand: false };\n            }\n            return { name: (toString.call(d.name) === \"[object Array]\" ? d.name.slice() : [d.name]), expand: d.expand };\n        });\n    }\n\n    function normalizeName(name) {\n        if (name.indexOf(\" \") !== -1) {\n            name = '[\"' + name + '\"]';\n        }\n\n        return name;\n    }\n\n    function accumulateMembers(accumulator, rootTuple, tuple, level) {\n        var idx, length;\n        var children;\n        var member;\n\n        if (!tuple) {\n            tuple = rootTuple;\n        }\n\n        if (!level) {\n            level = 0;\n        }\n\n        member = tuple.members[level];\n\n        if (!member || member.measure) { //return if no member or measure\n            return;\n        }\n\n        children = member.children;\n        length = children.length;\n\n        if (tuple === rootTuple) {\n            accumulator[kendo.stringify([member.name])] = !!length;\n        } else if (length) {\n            accumulator[kendo.stringify(buildPath(tuple, level))] = true;\n        }\n\n        if (length) {\n            for (idx = 0; idx < length; idx++) {\n                accumulateMembers(accumulator, rootTuple, children[idx], level);\n            }\n        }\n\n        accumulateMembers(accumulator, rootTuple, tuple, level + 1);\n    }\n\n    function descriptorsForAxes(tuples) {\n        var result = {};\n\n        if (tuples.length) {\n            accumulateMembers(result, tuples[0]);\n        }\n\n        var descriptors = [];\n        for (var k in result) {\n            descriptors.push({ name: JSON.parse(k), expand: result[k] });\n        }\n\n        return descriptors;\n    }\n\n    function addMissingPathMembers(members, axis) {\n        var tuples = axis.tuples || [];\n        var firstTuple = tuples[0];\n\n        if (firstTuple && members.length < firstTuple.members.length) {\n            var tupleMembers = firstTuple.members;\n\n            for (var idx = 0; idx < tupleMembers.length; idx++) {\n                if (tupleMembers[idx].measure) {\n                    continue;\n                }\n\n                var found = false;\n                for (var j = 0; j < members.length; j++) {\n                    if (getName(members[j]).indexOf(tupleMembers[idx].hierarchy) === 0) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    members.push({ name: [tupleMembers[idx].name], expand: false }); //calling normalize here to make name from string to array\n                }\n            }\n        }\n    }\n\n    function tupleToDescriptors(tuple) {\n        var result = [];\n        var members = tuple.members;\n\n        for (var idx = 0; idx < members.length; idx++) {\n            if (members[idx].measure) {\n                continue;\n            }\n\n            //make tuple name an array\n            result.push({ name: [members[idx].name], expand: members[idx].children.length > 0 });\n        }\n\n        return result;\n    }\n\n    function descriptorsForMembers(axis, members, measures) {\n        axis = axis || {};\n\n        addMissingPathMembers(members, axis);\n\n        if (measures.length > 1) {\n            members.push({\n                name: MEASURES,\n                measure: true,\n                children: normalizeMembers(measures)\n            });\n        }\n\n        var tupletoSearch = {\n            members: members\n        };\n\n        if (axis.tuples) {\n            var result = findExistingTuple(axis.tuples, tupletoSearch);\n            if (result.tuple) {\n                members = tupleToDescriptors(result.tuple);\n            }\n        }\n\n        return members;\n    }\n\n    function createAggregateGetter(m) {\n        var measureGetter = kendo.getter(m.field, true);\n        return function(aggregatorContext, state) {\n            return m.aggregate(measureGetter(aggregatorContext.dataItem), state, aggregatorContext);\n        };\n    }\n\n    function isNumber(val) {\n        return typeof val === \"number\" && !isNaN(val);\n    }\n\n    function isDate(val) {\n        return val && val.getTime;\n    }\n\n    function getScollWidth() {\n        var scrollbar = 0;\n        var div;\n        if (document && document.createElement) {\n            div = document.createElement('div');\n\n            div.style.cssText = 'overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block';\n            div.innerHTML = '&nbsp;';\n            document.body.appendChild(div);\n\n            scrollbar = div.offsetWidth - div.scrollWidth;\n\n            document.body.removeChild(div);\n        }\n\n        return scrollbar;\n    }\n\n    var functions = {\n        sum: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator)) {\n                accumulator = value;\n            } else if (isNumber(value)) {\n                accumulator += value;\n            }\n\n            return accumulator;\n        },\n        count: function(value, state) {\n            return (state.accumulator || 0) + 1;\n        },\n        average: {\n            aggregate: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (state.count === undefined) {\n                    state.count = 0;\n                }\n\n                if (!isNumber(accumulator)) {\n                    accumulator = value;\n                } else if (isNumber(value)) {\n                    accumulator += value;\n                }\n\n                if (isNumber(value)) {\n                    state.count++;\n                }\n\n                return accumulator;\n            },\n            result: function(state) {\n                var accumulator = state.accumulator;\n\n                if (isNumber(accumulator)) {\n                    accumulator = accumulator / state.count;\n                }\n\n                return accumulator;\n            }\n        },\n        max: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator < value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        },\n        min: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator > value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        }\n    };\n\n    var PivotCubeBuilder = Class.extend({\n        init: function(options) {\n            this.options = extend({}, this.options, options);\n            this.dimensions = this._normalizeDescriptors(\"field\", this.options.dimensions);\n            this.measures = this._normalizeDescriptors(\"name\", this.options.measures);\n        },\n\n        _normalizeDescriptors: function(keyField, descriptors) {\n            descriptors = descriptors || {};\n            var fields = {};\n            var field;\n\n            if (toString.call(descriptors) === \"[object Array]\") {\n                for (var idx = 0, length = descriptors.length; idx < length; idx++) {\n                    field = descriptors[idx];\n                    if (typeof field === \"string\") {\n                        fields[field] = {};\n                    } else if (field[keyField]) {\n                        fields[field[keyField]] = field;\n                    }\n                }\n                descriptors = fields;\n            }\n\n            return descriptors;\n        },\n\n        _rootTuples: function(rootNames, measureAggregators) {\n            var aggregatorsLength = measureAggregators.length || 1;\n            var dimensionsSchema = this.dimensions || [];\n            var root, name, parts;\n            var measureIdx = 0;\n            var idx;\n\n            var rootNamesLength = rootNames.length;\n            var result = [];\n            var keys = [];\n\n            if (rootNamesLength || measureAggregators.length) {\n                for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n\n                    root = { members: [] };\n\n                    for (idx = 0; idx < rootNamesLength; idx++) {\n                        name = rootNames[idx];\n                        parts = name.split(\"&\");\n\n                        root.members[root.members.length] = {\n                            children: [],\n                            caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                            name: name,\n                            levelName: name,\n                            levelNum: \"0\",\n                            hasChildren: true,\n                            parentName: parts.length > 1 ? parts[0] : undefined,\n                            hierarchy: name\n                        };\n                    }\n\n                    if (aggregatorsLength > 1) {\n                        root.members[root.members.length] = {\n                            children: [],\n                            caption: (measureAggregators[measureIdx]).caption,\n                            name: measureAggregators[measureIdx].descriptor.name,\n                            levelName: \"MEASURES\",\n                            levelNum: \"0\",\n                            hasChildren: false,\n                            parentName: undefined,\n                            hierarchy: \"MEASURES\"\n                        };\n                    }\n\n                    result[result.length] = root;\n                }\n\n                keys.push(ROW_TOTAL_KEY);\n            }\n\n            return {\n                keys: keys,\n                tuples: result\n            };\n        },\n\n        _sortMap: function(map, sortDescriptors) {\n            var sortedMaps = [];\n            var sortTree = [];\n            var flattenTree = [];\n            var mapItem;\n            var key;\n\n            for (key in map) {\n                if (!map[key].directParentName) {\n                    sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                }\n            }\n\n            //if there are no root this means that something is expanding\n            //and we should only sort that part of the tree\n            if (!sortTree.length) {\n                for (key in map) {\n                    sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                }\n            }\n\n            fillSortTree(sortTree, map);\n\n            // fill tree recursive\n            for (var i = 0; i < sortDescriptors.length; i++) {\n                sortItemsTree(sortDescriptors[i].field.split(\".\").pop(), sortTree, Comparer.create({ field: \"name\", dir: sortDescriptors[i].dir }));\n            }\n\n            flattenTree = flatColumns(sortTree);\n\n            //we need to flatten the structure so the tuples can build correctly\n            for (var j = 0; j < flattenTree.length; j++) {\n                mapItem = map[flattenTree[j].name];\n                mapItem.index = j;\n                sortedMaps[j] = mapItem;\n            }\n\n            return sortedMaps;\n        },\n\n        _expandedTuples: function(map, expanded, measureAggregators, sortDescriptors) {\n            var aggregatorsLength = measureAggregators.length || 1;\n            var dimensionsSchema = this.dimensions || [];\n            var measureIdx;\n            var tuple;\n\n            var key;\n            var mapItem;\n            var current;\n            var currentKeys;\n            var accumulator = [];\n            var accumulatorKeys = [];\n            var memberInfo;\n\n            var expandedNames;\n            var parts;\n            var name;\n            var idx;\n\n            if (sortDescriptors && sortDescriptors.length && !$.isEmptyObject(map)) {\n                map = this._sortMap(map, sortDescriptors);\n            }\n\n            for (key in map) {\n                mapItem = map[key];\n                memberInfo = this._findExpandedMember(expanded, mapItem.uniquePath);\n\n                current = accumulator[memberInfo.index] || [];\n                currentKeys = accumulatorKeys[memberInfo.index] || [];\n\n                expandedNames = memberInfo.member.names;\n\n                for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n                    tuple = { members: [] };\n                    for (idx = 0; idx < expandedNames.length; idx++) {\n                        if (idx === memberInfo.member.expandedIdx) {\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: mapItem.value,\n                                name: mapItem.name,\n                                hasChildren: false,\n                                levelNum: 1,\n                                levelName: mapItem.parentName + mapItem.name,\n                                parentName: mapItem.parentName,\n                                hierarchy: mapItem.parentName + mapItem.name\n                            };\n\n                            if (measureIdx === 0) {\n                                currentKeys.push(buildPath(tuple, idx).join(\"\"));\n                            }\n                        } else {\n                            name = expandedNames[idx];\n                            parts = name.split(\"&\");\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                                name: name,\n                                levelName: name,\n                                levelNum: \"0\",\n                                hasChildren: true,\n                                parentName: parts.length > 1 ? parts[0] : undefined,\n                                hierarchy: name\n                            };\n                        }\n                    }\n\n                    if (aggregatorsLength > 1) {\n                        tuple.members[tuple.members.length] = {\n                            children: [],\n                            caption: measureAggregators[measureIdx].caption,\n                            name: measureAggregators[measureIdx].descriptor.name,\n                            levelName: \"MEASURES\",\n                            levelNum: \"0\",\n                            hasChildren: true,\n                            parentName: undefined,\n                            hierarchy: \"MEASURES\"\n                        };\n                    }\n\n                    current[current.length] = tuple;\n                }\n\n                accumulator[memberInfo.index] = current;\n                accumulatorKeys[memberInfo.index] = currentKeys;\n            }\n\n            return {\n                keys: accumulatorKeys,\n                tuples: accumulator\n            };\n        },\n\n        _findExpandedMember: function(members, parentName) {\n            for (var idx = 0; idx < members.length; idx++) {\n                if (members[idx].uniquePath === parentName) {\n                    return {\n                        member: members[idx],\n                        index: idx\n                    };\n                }\n            }\n        },\n\n        _asTuples: function(map, descriptor, measureAggregators, sortDescriptors) {\n            measureAggregators = measureAggregators || [];\n\n            var rootInfo = this._rootTuples(descriptor.root, measureAggregators);\n            var expandedInfo = this._expandedTuples(map, descriptor.expanded, measureAggregators, sortDescriptors);\n\n            return {\n                keys: [].concat.apply(rootInfo.keys, expandedInfo.keys),\n                tuples: [].concat.apply(rootInfo.tuples, expandedInfo.tuples)\n            };\n        },\n\n        _measuresInfo: function(measures, rowAxis) {\n            var idx = 0;\n            var length = measures && measures.length;\n\n            var aggregateNames = [];\n            var resultFuncs = {};\n            var formats = {};\n\n            var descriptors = (this.measures || {});\n            var measure;\n            var name;\n\n            for (; idx < length; idx++) {\n                name = measures[idx].descriptor.name;\n                measure = descriptors[name] || {};\n\n                aggregateNames.push(name);\n\n                if (measure.result) {\n                    resultFuncs[name] = measure.result;\n                }\n\n                if (measure.format) {\n                    formats[name] = measure.format;\n                }\n            }\n\n            return {\n                names: aggregateNames,\n                formats: formats,\n                resultFuncs: resultFuncs,\n                rowAxis: rowAxis\n            };\n        },\n\n        _toDataArray: function(map, measuresInfo, rowKeys, columnKeys) {\n            var result = [];\n\n            var aggregates;\n            var name, i, j, k, n;\n            var row, column, columnKey;\n\n            var rowMeasureNamesLength = 1;\n            var rowMeasureNames = [];\n            var columnMeasureNames;\n\n            var rowLength = rowKeys.length || 1;\n            var columnLength = columnKeys.length || 1;\n\n            if (measuresInfo.rowAxis) {\n                rowMeasureNames = measuresInfo.names;\n                rowMeasureNamesLength = rowMeasureNames.length;\n            } else {\n                columnMeasureNames = measuresInfo.names;\n            }\n\n            for (i = 0; i < rowLength; i++) {\n                row = map[rowKeys[i] || ROW_TOTAL_KEY];\n\n                for (n = 0; n < rowMeasureNamesLength; n++) {\n                    if (measuresInfo.rowAxis) {\n                        columnMeasureNames = [rowMeasureNames[n]];\n                    }\n\n                    for (j = 0; j < columnLength; j++) {\n                        columnKey = columnKeys[j] || ROW_TOTAL_KEY;\n                        column = row.items[columnKey];\n\n                        if (columnKey === ROW_TOTAL_KEY) {\n                            aggregates = row.aggregates;\n                        } else {\n                            aggregates = column ? column.aggregates : {};\n                        }\n\n                        for (k = 0; k < columnMeasureNames.length; k++) {\n                            name = columnMeasureNames[k];\n                            this._addData(result, aggregates[name], measuresInfo.formats[name], measuresInfo.resultFuncs[name]);\n                        }\n                    }\n                }\n            }\n\n            return result;\n        },\n\n        _addData: function(result, value, format, resultFunc) {\n            var fmtValue = \"\";\n            var ordinal;\n\n            if (value) {\n                value = resultFunc ? resultFunc(value) : value.accumulator;\n                fmtValue = format ? kendo.format(format, value) : value;\n            }\n\n            ordinal = result.length;\n\n            result[ordinal] = {\n                ordinal: ordinal,\n                value: value || \"\",\n                fmtValue: fmtValue\n            };\n        },\n\n        _matchDescriptors: function(dataItem, descriptor, getters) {\n            var parts;\n            var parentField;\n            var expectedValue;\n\n            var names = descriptor.names;\n            var idx = descriptor.expandedIdx;\n            var value;\n\n            while (idx > 0) {\n                parts = names[--idx].split(\"&\");\n                if (parts.length > 1) {\n                    parentField = parts[0];\n                    expectedValue = parts[1];\n\n                    value = getters[parentField](dataItem);\n                    value = (value !== undefined && value !== null) ? value.toString() : value;\n\n                    if (value != expectedValue) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        },\n\n        _calculateAggregate: function(measureAggregators, aggregatorContext, totalItem) {\n            var result = {};\n            var state;\n            var name;\n\n            for (var measureIdx = 0; measureIdx < measureAggregators.length; measureIdx++) {\n                name = measureAggregators[measureIdx].descriptor.name;\n                state = totalItem.aggregates[name] || { };\n                state.accumulator = measureAggregators[measureIdx].aggregator(aggregatorContext, state);\n                result[name] = state;\n            }\n\n            return result;\n        },\n\n        _processColumns: function(measureAggregators, descriptors, getters, columns, aggregatorContext, rowTotal, state, updateColumn) {\n            var value;\n            var descriptor;\n            var column;\n            var totalItem;\n            var key, name, parentName, path;\n            var dataItem = aggregatorContext.dataItem;\n            var idx = 0;\n\n            for (; idx < descriptors.length; idx++) {\n                descriptor = descriptors[idx];\n\n                //checks whether the dataItem is relevant to the descriptors\n                if (!this._matchDescriptors(dataItem, descriptor, getters)) {\n                    continue;\n                }\n\n                path = descriptor.names.slice(0, descriptor.expandedIdx).join(\"\");\n                name = descriptor.names[descriptor.expandedIdx];\n\n\n                value = getters[name](dataItem);\n                value = (value !== undefined && value !== null) ? value.toString() : value;\n\n                parentName = name;\n                name = name + \"&\" + value;\n                key = path + name;\n\n                column = columns[key] || {\n                    index: state.columnIndex,\n                    parentName: parentName,\n                    name: name,\n                    directParentName: path.indexOf(\"&\") !== -1 ? path : \"\",\n                    uniquePath: path + parentName,\n                    childrenMap: {},\n                    value: value\n                };\n\n                if (path && columns[path] && !columns[path].childrenMap[path + parentName + \"&\" + value]) {\n                    columns[path].childrenMap[path + parentName + \"&\" + value] = true;\n                }\n\n                totalItem = rowTotal.items[key] || {\n                    aggregates: {}\n                };\n\n                rowTotal.items[key] = {\n                    index: column.index,\n                    aggregates: this._calculateAggregate(measureAggregators, aggregatorContext, totalItem)\n                };\n\n                if (updateColumn) {\n                    if (!columns[key]) {\n                        state.columnIndex++;\n                    }\n                    columns[key] = column;\n                }\n            }\n        },\n\n        _measureAggregators: function(options) {\n            var measureDescriptors = options.measures || [];\n            var measures = this.measures || {};\n            var aggregators = [];\n            var descriptor, measure, idx, length;\n            var defaultAggregate, aggregate;\n\n            if (measureDescriptors.length) {\n                for (idx = 0, length = measureDescriptors.length; idx < length; idx++) {\n                    descriptor = measureDescriptors[idx];\n                    measure = measures[descriptor.name];\n                    defaultAggregate = null;\n\n                    if (measure) {\n                        aggregate = measure.aggregate;\n                        if (typeof aggregate === \"string\") {\n                            defaultAggregate = functions[aggregate.toLowerCase()];\n\n                            if (!defaultAggregate) {\n                                throw new Error(\"There is no such aggregate function\");\n                            }\n\n                            measure.aggregate = defaultAggregate.aggregate || defaultAggregate;\n                            measure.result = defaultAggregate.result;\n                        }\n\n\n                        aggregators.push({\n                            descriptor: descriptor,\n                            caption: measure.caption,\n                            result: measure.result,\n                            aggregator: createAggregateGetter(measure)\n                        });\n                    }\n                }\n            } else {\n                aggregators.push({\n                    descriptor: { name: \"default\" },\n                    caption: \"default\",\n                    aggregator: function() { return 1; }\n                });\n            }\n\n            return aggregators;\n        },\n\n        _buildGetters: function(names) {\n            var result = {};\n            var parts;\n            var name;\n\n            for (var idx = 0; idx < names.length; idx++) {\n                name = names[idx];\n                parts = name.split(\"&\");\n\n                if (parts.length > 1) {\n                    result[parts[0]] = kendo.getter(parts[0], true);\n                } else {\n                    result[name] = kendo.getter(normalizeName(name), true);\n                }\n            }\n\n            return result;\n        },\n\n        _parseDescriptors: function(descriptors) {\n            var parsedDescriptors = parseDescriptors(descriptors);\n            var rootNames = getRootNames(parsedDescriptors.root);\n            var expanded = parsedDescriptors.expanded;\n            var result = [];\n\n            for (var idx = 0; idx < expanded.length; idx++) {\n                result.push(mapNames(expanded[idx].name, rootNames));\n            }\n\n            return {\n                root: rootNames,\n                expanded: result\n            };\n        },\n\n        _filter: function(data, filter) {\n            if (!filter) {\n                return data;\n            }\n\n            var expr;\n            var idx = 0;\n            var filters = filter.filters;\n\n            for (; idx < filters.length; idx++) {\n                expr = filters[idx];\n\n                if (expr.operator === \"in\") {\n                    filters[idx] = this._normalizeFilter(expr);\n                }\n            }\n\n            return new kendo.data.Query(data).filter(filter).data;\n        },\n\n        _normalizeFilter: function(filter) {\n            var value = filter.value.split(\",\");\n            var result = [];\n\n            if (!value.length) {\n                return value;\n            }\n\n            for (var idx = 0; idx < value.length; idx++) {\n                result.push({\n                    field: filter.field,\n                    operator: \"eq\",\n                    value: value[idx]\n                });\n            }\n\n            return {\n                logic: \"or\",\n                filters: result\n            };\n        },\n\n        process: function(data, options) {\n            data = data || [];\n            options = options || {};\n\n            data = this._filter(data, options.filter);\n\n            var measures = options.measures || [];\n\n            var measuresRowAxis = options.measuresAxis === \"rows\";\n\n            var columnDescriptors = options.columns || [];\n            var rowDescriptors = options.rows || [];\n\n            if (!columnDescriptors.length && rowDescriptors.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                columnDescriptors = rowDescriptors;\n                rowDescriptors = [];\n                measuresRowAxis = false;\n            }\n\n            if (!columnDescriptors.length && !rowDescriptors.length) {\n                measuresRowAxis = false;\n            }\n\n            if (!columnDescriptors.length && measures.length) {\n                columnDescriptors = normalizeMembers(options.measures);\n            }\n\n            columnDescriptors = this._parseDescriptors(columnDescriptors);\n            rowDescriptors = this._parseDescriptors(rowDescriptors);\n\n            var aggregatedData = {};\n            var columns = {};\n            var rows = {};\n\n            var rowValue;\n            var state = { columnIndex: 0 };\n\n            var measureAggregators = this._measureAggregators(options);\n\n            var columnGetters = this._buildGetters(columnDescriptors.root);\n            var rowGetters = this._buildGetters(rowDescriptors.root);\n\n            var processed = false;\n\n            var expandedColumns = columnDescriptors.expanded;\n            var expandedRows = rowDescriptors.expanded;\n\n            var dataItem;\n            var aggregatorContext;\n            var hasExpandedRows = expandedRows.length !== 0;\n\n            var rowIdx, rowDescriptor, rowName, rowTotal;\n            var key, path, parentName, value;\n            var columnsInfo, rowsInfo;\n            var length = data.length;\n            var idx = 0;\n\n            if (columnDescriptors.root.length || rowDescriptors.root.length) {\n                processed = true;\n\n                for (idx = 0; idx < length; idx++) {\n                    dataItem = data[idx];\n\n                    aggregatorContext = {\n                        dataItem: dataItem,\n                        index: idx\n                    };\n\n                    rowTotal = aggregatedData[ROW_TOTAL_KEY] || {\n                        items: {},\n                        aggregates: {}\n                    };\n\n                    this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, rowTotal, state, !hasExpandedRows);\n\n                    rowTotal.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, rowTotal);\n                    aggregatedData[ROW_TOTAL_KEY] = rowTotal;\n\n                    for (rowIdx = 0; rowIdx < expandedRows.length; rowIdx++) {\n                        rowDescriptor = expandedRows[rowIdx];\n\n                        if (!this._matchDescriptors(dataItem, rowDescriptor, rowGetters)) {\n                            this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, { items: {}, aggregates: {} }, state, true);\n                            continue;\n                        }\n\n                        path = rowDescriptor.names.slice(0, rowDescriptor.expandedIdx).join(\"\");\n                        rowName = rowDescriptor.names[rowDescriptor.expandedIdx];\n\n                        parentName = rowName;\n\n                        rowValue = rowGetters[rowName](dataItem);\n                        rowValue = rowValue !== undefined ? rowValue.toString() : rowValue;\n\n                        rowName = rowName + \"&\" + rowValue;\n                        key = path + rowName;\n\n                        rows[key] = {\n                            uniquePath: path + parentName,\n                            parentName: parentName,\n                            name: rowName,\n                            value: rowValue\n                        };\n\n                        value = aggregatedData[key] || {\n                            items: {},\n                            aggregates: {}\n                        };\n\n                        this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, value, state, true);\n\n                        value.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, value);\n                        aggregatedData[key] = value;\n                    }\n                }\n            }\n\n            if (processed && length) {\n                if (measureAggregators.length > 1 && (!options.columns || !options.columns.length)) {\n                    columnDescriptors = {\n                        root: [],\n                        expanded: []\n                    };\n                }\n\n                columnsInfo = this._asTuples(columns, columnDescriptors, measuresRowAxis ? [] : measureAggregators, options.sort ? options.sort : []);\n                rowsInfo = this._asTuples(rows, rowDescriptors, measuresRowAxis ? measureAggregators : [], options.sort ? options.sort : []);\n\n                columns = columnsInfo.tuples;\n                rows = rowsInfo.tuples;\n\n                aggregatedData = this._toDataArray(aggregatedData, this._measuresInfo(measureAggregators, measuresRowAxis), rowsInfo.keys, columnsInfo.keys);\n            } else {\n                aggregatedData = columns = rows = [];\n            }\n\n            return {\n                axes: {\n                    columns: { tuples: columns },\n                    rows: { tuples: rows }\n                },\n                data: aggregatedData\n            };\n        }\n    });\n\n    var PivotTransport = Class.extend({\n        init: function(options, transport) {\n            this.transport = transport;\n            this.options = transport.options || {};\n\n            if (!this.transport.discover) {\n                if (isFunction(options.discover)) {\n                    this.discover = options.discover;\n                }\n            }\n        },\n        read: function(options) {\n            return this.transport.read(options);\n        },\n        update: function(options) {\n            return this.transport.update(options);\n        },\n        create: function(options) {\n            return this.transport.create(options);\n        },\n        destroy: function(options) {\n            return this.transport.destroy(options);\n        },\n        discover: function(options) {\n            if (this.transport.discover) {\n                return this.transport.discover(options);\n            }\n            options.success({});\n        },\n        catalog: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined) {\n                return (options.connection || {}).catalog;\n\n            }\n\n            var connection = options.connection || {};\n            connection.catalog = val;\n\n            this.options.connection = connection;\n            $.extend(this.transport.options, { connection: connection });\n        },\n        cube: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined) {\n                return (options.connection || {}).cube;\n            }\n\n            var connection = options.connection || {};\n            connection.cube = val;\n\n            this.options.connection = connection;\n            extend(true, this.transport.options, { connection: connection });\n        }\n    });\n\n    var PivotDataSourceV2 = DataSource.extend({\n        init: function(options) {\n\n            DataSource.fn.init.call(this, extend(true, {}, {\n                //schema: schema\n            }, options));\n\n            var transportOptions = this.options.transport || {};\n            if ((this.options.type || \"xmla\").toLowerCase() === \"xmla\") {\n                this._online = true;\n                this.transport = new XmlaTransportV2(transportOptions);\n            }\n\n            this._columns = normalizeMembers(this.options.columns);\n            this._rows = normalizeMembers(this.options.rows);\n\n            var measures = this.options.measures || [];\n\n            if (toString.call(measures) === \"[object Object]\") {\n                this._measuresAxis = measures.axis || \"columns\";\n                measures = measures.values || [];\n            }\n\n            this._measures = normalizeMeasures(measures);\n        },\n\n        options: {\n            serverSorting: true,\n            serverPaging: true,\n            serverFiltering: true,\n            serverGrouping: true,\n            serverAggregates: true\n        },\n\n        axes: function() {\n            return {\n                columns: normalizeAxis(this.columns()),\n                rows: normalizeAxis(this.rows())\n            };\n        },\n\n        catalog: function(val) {\n            if (val === undefined) {\n                return this.transport.catalog();\n            }\n\n            this.transport.catalog(val);\n            this._mergeState({});// clears current state\n            this.read();\n        },\n\n        cube: function(val) {\n            if (val === undefined) {\n                return this.transport.cube();\n            }\n\n            this.transport.cube(val);\n            this._mergeState({});// clears current state\n            this.read();\n        },\n\n        measuresAxis: function() {\n            return this._measuresAxis || \"columns\";\n        },\n\n        fetch: function() {\n            if (this.options.type.toLowerCase() === \"xmla\" && (this._data === undefined || this._data.length === 0)) {\n                this._query();\n            }\n        },\n\n        read: function(data) {\n            var that = this;\n            var isPrevented = that.trigger(REQUESTSTART, { type: READ });\n            var params = that._params(data);\n            if (!isPrevented) {\n                that.trigger(PROGRESS);\n\n                that.transport.read({\n                    data: params,\n                    success: function(newDataState) {\n                        that._saveState(newDataState);\n                        that.trigger(REQUESTEND, { response: newDataState, type: READ });\n                        that.trigger(CHANGE);\n                        if (that._preventRefresh) {\n                            that._preventRefresh = false;\n                        }\n                    },\n                    error: function(err) {\n                        that.trigger(ERROR, { error: err });\n                    }\n                });\n            }\n        },\n\n        _params: function(data) {\n            var that = this;\n            var options = DataSource.fn._params.call(that, data);\n\n            options = extend({\n                connection: that.options.transport.connection,\n                columnAxes: JSON.parse(JSON.stringify(that._columns)),\n                rowAxes: JSON.parse(JSON.stringify(that._rows)),\n                measuresAxis: that.measuresAxis(),\n                measureAxes: that._measures\n            }, options);\n\n            if (options.filter) {\n                options.filter = normalizeFilter(options.filter);\n                options.filter = (options.filter || {}).filters;\n            }\n\n            if (options.sort) {\n                options.sort = normalizeSort(options.sort);\n            }\n\n            return options;\n        },\n\n        discover: function(options) {\n            var that = this,\n                transport = that.transport;\n\n            if (transport.discover) {\n                return transport.discover(options);\n            }\n        },\n\n        schemaMeasures: function() {\n            var that = this;\n            return that.discover(\n                {\n                    command: \"schemaMeasures\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }, function(response) {\n                    return response;\n                });\n        },\n\n        schemaKPIs: function() {\n            var that = this;\n\n            return that.discover(\n            {\n                command: \"schemaKPIs\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaDimensions: function() {\n            var that = this;\n\n            return that.discover(\n            {\n                command: \"schemaDimensions\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaHierarchies: function(dimensionName) {\n            var that = this;\n\n            return that.discover({\n               command: \"schemaHierarchies\",\n               restrictions: {\n                   catalogName: that.transport.catalog(),\n                   cubeName: that.transport.cube(),\n                   dimensionUniqueName: dimensionName\n               }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaLevels: function(hierarchyName) {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaLevels\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube(),\n                    hierarchyUniqueName: hierarchyName\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaCubes: function() {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaCubes\",\n                restrictions: {\n                    catalogName: that.transport.catalog()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaCatalogs: function() {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaCatalogs\"\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaMembers: function(restrictions) {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaMembers\",\n                restrictions: extend({\n                   catalogName: that.transport.catalog(),\n                   cubeName: that.transport.cube()\n                }, restrictions)\n            }, function(response) {\n                return response;\n            });\n        },\n\n        _saveState: function(state) {\n            var that = this;\n\n            that._columnTuples = state.columns;\n            that._rowTuples = state.rows;\n            that._view = state.data;\n        },\n\n        columns: function(val) {\n            if (val === undefined) {\n                return this._columns;\n            }\n\n            this._columns = normalizeMembers(val);\n            this.read();\n        },\n\n        rows: function(val) {\n            if (val === undefined) {\n                return this._rows;\n            }\n\n            this._rows = normalizeMembers(val);\n\n            this.read();\n        },\n\n        measures: function(val) {\n            if (val === undefined) {\n                return this._measures;\n            }\n\n            this._measures = normalizeMeasures(val);\n\n            this.read();\n        },\n\n        _mergeState: function(options) {\n            options = DataSource.fn._mergeState.call(this, options);\n\n            return options;\n        },\n\n        _query: function(options) {\n            var that = this;\n            var params = extend({}, {\n                sort: that.sort(),\n                measuresAxis: that.measuresAxis(),\n                filter: that.filter()\n            }, options);\n            var state = this._mergeState(params);\n\n            return this.read(state);\n        },\n    });\n\n    var PivotDataSource = DataSource.extend({\n        init: function(options) {\n            var cube = ((options || {}).schema || {}).cube;\n            var measuresAxis = \"columns\";\n            var measures;\n\n            var schema = {\n                axes: identity,\n                cubes: identity,\n                catalogs: identity,\n                measures: identity,\n                dimensions: identity,\n                hierarchies: identity,\n                levels: identity,\n                members: identity\n            };\n\n            if (cube) {\n                schema = $.extend(schema, this._cubeSchema(cube));\n                this.cubeBuilder = new PivotCubeBuilder(cube);\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, {\n                schema: schema\n            }, options));\n\n            this.transport = new PivotTransport(this.options.transport || {}, this.transport);\n\n            this._columns = normalizeMembers(this.options.columns);\n            this._rows = normalizeMembers(this.options.rows);\n\n            measures = this.options.measures || [];\n\n            if (toString.call(measures) === \"[object Object]\") {\n                measuresAxis = measures.axis || \"columns\";\n                measures = measures.values || [];\n            }\n\n            this._measures = normalizeMeasures(measures);\n            this._measuresAxis = measuresAxis;\n\n            this._skipNormalize = 0;\n            this._axes = {};\n        },\n\n        _cubeSchema: function(cube) {\n            return {\n                dimensions: function() {\n                    var result = [];\n                    var dimensions = cube.dimensions;\n\n                    for (var key in dimensions) {\n                        result.push({\n                            name: key,\n                            caption: dimensions[key].caption || key,\n                            uniqueName: key,\n                            defaultHierarchy: key,\n                            type: 1\n                        });\n                    }\n\n                    if (cube.measures) {\n                        result.push({\n                            name: MEASURES,\n                            caption: MEASURES,\n                            uniqueName: MEASURES,\n                            type: 2\n                        });\n                    }\n\n                    return result;\n                },\n                hierarchies: function() {\n                    return [];\n                },\n                measures: function() {\n                    var result = [];\n                    var measures = cube.measures;\n\n                    for (var key in measures) {\n                        result.push({\n                            name: key,\n                            caption: key,\n                            uniqueName: key,\n                            aggregator: key\n                        });\n                    }\n\n                    return result;\n                },\n                members: function(response, restrictions) {\n                    var name = restrictions.levelUniqueName || restrictions.memberUniqueName;\n                    var schemaData = this.options.schema.data;\n                    var dataGetter = isFunction(schemaData) ? schemaData : kendo.getter(schemaData, true);\n                    var data = (this.options.data && dataGetter(this.options.data)) || this._rawData || [];\n                    var result = [];\n                    var getter;\n                    var value;\n                    var idx = 0;\n                    var distinct = {};\n\n                    if (name) {\n                        name = name.split(\".\")[0];\n                    }\n\n                    if (!restrictions.treeOp) {\n                        result.push({\n                            caption: cube.dimensions[name].caption || name,\n                            childrenCardinality: \"1\",\n                            dimensionUniqueName: name,\n                            hierarchyUniqueName: name,\n                            levelUniqueName: name,\n                            name: name,\n                            uniqueName: name\n                        });\n\n                        return result;\n                    }\n\n                    getter = kendo.getter(normalizeName(name), true);\n\n                    for (; idx < data.length; idx++) {\n                        value = getter(data[idx]);\n                        if ((value || value === 0) && !distinct[value]) {\n                            distinct[value] = true;\n\n                            result.push({\n                                caption: value,\n                                childrenCardinality: \"0\",\n                                dimensionUniqueName: name,\n                                hierarchyUniqueName: name,\n                                levelUniqueName: name,\n                                name: value,\n                                uniqueName: value\n                            });\n                        }\n                    }\n\n                    return result;\n                }.bind(this)\n            };\n        },\n\n        options: {\n            serverSorting: true,\n            serverPaging: true,\n            serverFiltering: true,\n            serverGrouping: true,\n            serverAggregates: true\n        },\n\n        catalog: function(val) {\n            if (val === undefined) {\n                return this.transport.catalog();\n            }\n\n            this.transport.catalog(val);\n            this._mergeState({});// clears current state\n            this._axes = {};\n            this.data([]);\n        },\n\n        cube: function(val) {\n            if (val === undefined) {\n                return this.transport.cube();\n            }\n\n            this.transport.cube(val);\n            this._axes = {};\n            this._mergeState({});// clears current state\n            this.data([]);\n        },\n\n        axes: function() {\n            return this._axes;\n        },\n\n        columns: function(val) {\n            if (val === undefined) {\n                return this._columns;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this._columns = normalizeMembers(val);\n            this.query({\n                columns: val,\n                rows: this.rowsAxisDescriptors(),\n                measures: this.measures(),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        rows: function(val) {\n            if (val === undefined) {\n                return this._rows;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this._rows = normalizeMembers(val);\n\n            this.query({\n                columns: this.columnsAxisDescriptors(),\n                rows: val,\n                measures: this.measures(),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        measures: function(val) {\n            if (val === undefined) {\n                return this._measures;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this.query({\n                columns: this.columnsAxisDescriptors(),\n                rows: this.rowsAxisDescriptors(),\n                measures: normalizeMeasures(val),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        measuresAxis: function() {\n            return this._measuresAxis || \"columns\";\n        },\n\n        _expandPath: function(path, axis) {\n            var origin = axis === \"columns\" ? \"columns\" : \"rows\";\n            var other = axis === \"columns\" ? \"rows\" : \"columns\";\n\n            var members = normalizeMembers(path);\n            var memberToExpand = getName(members[members.length - 1]);\n\n            this._lastExpanded = origin;\n\n            members = descriptorsForMembers(this.axes()[origin], members, this.measures());\n\n            for (var idx = 0; idx < members.length; idx++) {\n                var memberName = getName(members[idx]);\n\n                if (memberName === memberToExpand) {\n                    if (members[idx].expand) {\n                        return;\n                    }\n                    members[idx].expand = true;\n                } else {\n                    members[idx].expand = false;\n                }\n            }\n\n            var descriptors = {};\n            descriptors[origin] = members;\n            descriptors[other] = this._descriptorsForAxis(other);\n\n            this._query(descriptors);\n        },\n\n        _descriptorsForAxis: function(axis) {\n            var axes = this.axes();\n            var descriptors = this[axis]() || [];\n\n            if (axes && axes[axis] && axes[axis].tuples && axes[axis].tuples[0]) {\n                descriptors = descriptorsForAxes(axes[axis].tuples || []);\n            }\n            return descriptors;\n        },\n\n        columnsAxisDescriptors: function() {\n            return this._descriptorsForAxis(\"columns\");\n        },\n\n        rowsAxisDescriptors: function() {\n            return this._descriptorsForAxis(\"rows\");\n        },\n\n        _process: function(data, e) {\n            this._view = data;\n\n            e = e || {};\n            e.items = e.items || this._view;\n\n            this.trigger(CHANGE, e);\n        },\n\n        _query: function(options) {\n            var that = this;\n\n            if (!options) {\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n            }\n\n            return that.query(extend({}, {\n                page: that.page(),\n                pageSize: that.pageSize(),\n                sort: that.sort(),\n                filter: that.filter(),\n                group: that.group(),\n                aggregate: that.aggregate(),\n                columns: this.columnsAxisDescriptors(),\n                rows: this.rowsAxisDescriptors(),\n                measures: this.measures()\n            }, options));\n        },\n\n        query: function(options) {\n            var state = this._mergeState(options);\n\n            if (this._data.length && this.cubeBuilder) {\n                this._params(state);\n                this._updateLocalData(this._pristineData);\n\n                return $.Deferred().resolve().promise();\n            }\n\n            return this.read(state);\n        },\n\n        _mergeState: function(options) {\n            options = DataSource.fn._mergeState.call(this, options);\n\n            if (options !== undefined) {\n                this._measures = normalizeMeasures(options.measures);\n\n                if (options.columns) {\n                    options.columns = normalizeMembers(options.columns);\n                } else if (!options.columns) {\n                    this._columns = [];\n                }\n\n                if (options.rows) {\n                    options.rows = normalizeMembers(options.rows);\n                } else if (!options.rows) {\n                    this._rows = [];\n                }\n            }\n            return options;\n        },\n\n        filter: function(val) {\n            if (val === undefined) {\n                return this._filter;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n            this._query({ filter: val, page: 1 });\n        },\n\n        expandColumn: function(path) {\n            this._expandPath(path, \"columns\");\n        },\n\n        expandRow: function(path) {\n            this._expandPath(path, \"rows\");\n        },\n\n        success: function(data) {\n            var originalData;\n            if (this.cubeBuilder) {\n                originalData = (this.reader.data(data) || []).slice(0);\n            }\n            DataSource.fn.success.call(this, data);\n            if (originalData) {\n                this._pristineData = originalData;\n            }\n        },\n\n        _processResult: function(data, axes) {\n            if (this.cubeBuilder) {\n                var processedData = this.cubeBuilder.process(data, this._requestData);\n\n                data = processedData.data;\n                axes = processedData.axes;\n            }\n\n            var columnIndexes, rowIndexes;\n            var tuples, resultAxis, measures, axisToSkip;\n            var columnDescriptors = this.columns();\n            var rowDescriptors = this.rows();\n            var hasColumnTuples = axes.columns && axes.columns.tuples;\n\n            if (!columnDescriptors.length && rowDescriptors.length && hasColumnTuples && (this._rowMeasures().length || !this.measures().length)) {\n                axes = {\n                    columns: {},\n                    rows: axes.columns\n                };\n            }\n\n            if (!columnDescriptors.length && !rowDescriptors.length && this.measuresAxis() === \"rows\" && hasColumnTuples) {\n                axes = {\n                    columns: {},\n                    rows: axes.columns\n                };\n            }\n\n            this._axes = {\n                columns: normalizeAxis(this._axes.columns),\n                rows: normalizeAxis(this._axes.rows)\n            };\n\n            axes = {\n                columns: normalizeAxis(axes.columns),\n                rows: normalizeAxis(axes.rows)\n            };\n\n            columnIndexes = this._normalizeTuples(axes.columns.tuples, this._axes.columns.tuples, columnDescriptors, this._columnMeasures());\n            rowIndexes = this._normalizeTuples(axes.rows.tuples, this._axes.rows.tuples, rowDescriptors, this._rowMeasures());\n\n            if (this._skipNormalize > 0) {\n                this._skipNormalize -= 1;\n            }\n\n            if (!this.cubeBuilder) {\n                data = this._normalizeData({\n                    columnsLength: axes.columns.tuples.length,\n                    rowsLength: axes.rows.tuples.length,\n                    columnIndexes: columnIndexes,\n                    rowIndexes: rowIndexes,\n                    data: data\n                });\n            }\n\n            if (this._lastExpanded == \"rows\") {\n                tuples = axes.columns.tuples;\n                measures = this._columnMeasures();\n                resultAxis = validateAxis(axes.columns, this._axes.columns, measures);\n\n                if (resultAxis) {\n                    axisToSkip = \"columns\";\n                    axes.columns = resultAxis;\n                    adjustDataByColumn(tuples, resultAxis.tuples, axes.rows.tuples.length, measures, data);\n                    if (!this.cubeBuilder) {\n                        data = this._normalizeData({\n                            columnsLength: membersCount(axes.columns.tuples, measures),\n                            rowsLength: axes.rows.tuples.length,\n                            data: data\n                        });\n                    }\n                }\n            } else if (this._lastExpanded == \"columns\") {\n                tuples = axes.rows.tuples;\n                measures = this._rowMeasures();\n                resultAxis = validateAxis(axes.rows, this._axes.rows, measures);\n\n                if (resultAxis) {\n                    axisToSkip = \"rows\";\n                    axes.rows = resultAxis;\n                    adjustDataByRow(tuples, resultAxis.tuples, axes.columns.tuples.length, measures, data);\n\n                    if (!this.cubeBuilder) {\n                        data = this._normalizeData({\n                            columnsLength: membersCount(axes.rows.tuples, measures),\n                            rowsLength: axes.columns.tuples.length,\n                            data: data\n                        });\n                    }\n                }\n            }\n\n            this._lastExpanded = null;\n\n            var result = this._mergeAxes(axes, data, axisToSkip);\n            this._axes = result.axes;\n\n            return result.data;\n        },\n\n        _readData: function(data) {\n            var axes = this.reader.axes(data);\n            var newData = this.reader.data(data);\n\n            if (this.cubeBuilder) {\n                this._rawData = newData;\n            }\n\n            return this._processResult(newData, axes);\n        },\n\n        _createTuple: function(tuple, measure, buildRoot) {\n            var members = tuple.members;\n            var length = members.length;\n            var root = { members: [] };\n            var levelName, levelNum;\n            var name, parentName;\n            var hasChildren;\n            var hierarchy;\n            var caption;\n            var member;\n            var idx = 0;\n\n            if (measure) {\n                length -= 1;\n            }\n\n            for (; idx < length; idx++) {\n                member = members[idx];\n                levelNum = Number(member.levelNum);\n\n                name = member.name;\n                parentName = member.parentName;\n                caption = member.caption || name;\n                hasChildren = member.hasChildren;\n                hierarchy = member.hierarchy;\n                levelName = member.levelName;\n\n                if (buildRoot) {\n                    caption = \"All\";\n                    if (levelNum === 0) {\n                        parentName = member.name;\n                    } else {\n                        levelNum -= 1;\n                    }\n\n                    hasChildren = true;\n                    name = hierarchy = levelName = parentName;\n                }\n\n                root.members.push({\n                    name: name,\n                    children: [],\n                    caption: caption,\n                    levelName: levelName,\n                    levelNum: levelNum.toString(),\n                    hasChildren: hasChildren,\n                    hierarchy: hierarchy,\n                    parentName: !buildRoot ? parentName : \"\"\n                });\n            }\n\n            if (measure) {\n                root.members.push({\n                    name: measure.name,\n                    children: []\n                });\n            }\n\n            return root;\n        },\n\n        _hasRoot: function(target, source, descriptors) {\n            if (source.length) {\n                return findExistingTuple(source, target).tuple;\n            }\n\n            var members = target.members;\n            var member;\n            var descriptor;\n\n            var isRoot = true;\n            var levelNum;\n\n            for (var idx = 0, length = members.length; idx < length; idx++) {\n                member = members[idx];\n                levelNum = Number(member.levelNum) || 0;\n                descriptor = descriptors[idx];\n\n                if (!(levelNum === 0 || (descriptor && member.name === getName(descriptor)))) {\n                    isRoot = false;\n                    break;\n                }\n            }\n\n            return isRoot;\n        },\n\n        _mergeAxes: function(sourceAxes, data, axisToSkip) {\n            var columnMeasures = this._columnMeasures();\n            var rowMeasures = this._rowMeasures();\n            var axes = this.axes();\n            var startIndex, tuples;\n\n            var oldRowsLength = membersCount(axes.rows.tuples, rowMeasures);\n            var newRowsLength = sourceAxes.rows.tuples.length;\n\n            var oldColumnsLength = membersCount(axes.columns.tuples, columnMeasures);\n            var newColumnsLength = sourceAxes.columns.tuples.length;\n\n            if (axisToSkip == \"columns\") {\n                newColumnsLength = oldColumnsLength;\n                tuples = sourceAxes.columns.tuples;\n            } else {\n                tuples = parseSource(sourceAxes.columns.tuples, columnMeasures);\n                data = prepareDataOnColumns(tuples, data);\n            }\n\n            var mergedColumns = mergeTuples(axes.columns.tuples, tuples, columnMeasures);\n\n            if (axisToSkip == \"rows\") {\n                newRowsLength = membersCount(sourceAxes.rows.tuples, rowMeasures);\n                tuples = sourceAxes.rows.tuples;\n            } else {\n                tuples = parseSource(sourceAxes.rows.tuples, rowMeasures);\n                data = prepareDataOnRows(tuples, data);\n            }\n            var mergedRows = mergeTuples(axes.rows.tuples, tuples, rowMeasures);\n\n            axes.columns.tuples = mergedColumns.tuples;\n            axes.rows.tuples = mergedRows.tuples;\n\n            if (oldColumnsLength !== membersCount(axes.columns.tuples, columnMeasures)) {\n                //columns are expanded\n                startIndex = mergedColumns.index + findDataIndex(mergedColumns.parsedRoot, mergedColumns.memberIndex, columnMeasures);\n                var offset = oldColumnsLength + newColumnsLength;\n                data = this._mergeColumnData(data, startIndex, newRowsLength, newColumnsLength, offset);\n            } else if (oldRowsLength !== membersCount(axes.rows.tuples, rowMeasures)) {\n                //rows are expanded\n                startIndex = mergedRows.index + findDataIndex(mergedRows.parsedRoot, mergedRows.memberIndex, rowMeasures);\n                data = this._mergeRowData(data, startIndex, newRowsLength, newColumnsLength);\n            }\n\n            if (axes.columns.tuples.length === 0 && axes.rows.tuples.length === 0) {\n                data = [];\n            }\n\n            return {\n                axes: axes,\n                data: data\n            };\n        },\n\n        _mergeColumnData: function(newData, columnIndex, rowsLength, columnsLength, offset) {\n            var data = this.data().toJSON();\n            var rowIndex, index, drop = 0, toAdd;\n            var columnMeasures = Math.max(this._columnMeasures().length, 1);\n\n            rowsLength = Math.max(rowsLength, 1);\n\n            if (data.length > 0) {\n                //if there is already data, drop the first new data item\n                drop = columnMeasures;\n                offset -= columnMeasures;\n            }\n\n            for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                index = columnIndex + (rowIndex * offset);\n                toAdd = newData.splice(0, columnsLength);\n                toAdd.splice(0, drop);\n                [].splice.apply(data, [index, 0].concat(toAdd));\n            }\n\n            return data;\n        },\n\n        _mergeRowData: function(newData, rowIndex, rowsLength, columnsLength) {\n            var data = this.data().toJSON();\n            var idx, dataIndex, toAdd;\n            var rowMeasures = Math.max(this._rowMeasures().length, 1);\n\n            columnsLength = Math.max(columnsLength, 1);\n            if (data.length > 0) {\n                //if there is already data, drop the first new data item\n                rowsLength -= rowMeasures;\n                newData.splice(0, columnsLength * rowMeasures);\n            }\n\n            for (idx = 0; idx < rowsLength; idx++) {\n                toAdd = newData.splice(0, columnsLength);\n                dataIndex = (rowIndex * columnsLength) + (idx * columnsLength);\n                [].splice.apply(data, [dataIndex, 0].concat(toAdd));\n            }\n\n            return data;\n        },\n\n        _columnMeasures: function() {\n            var measures = this.measures();\n            var columnMeasures = [];\n\n            if (this.measuresAxis() === \"columns\") {\n                if (this.columns().length === 0) {\n                    columnMeasures = measures;\n                } else if (measures.length > 1) {\n                    columnMeasures = measures;\n                }\n            }\n\n            return columnMeasures;\n        },\n\n        _rowMeasures: function() {\n            var measures = this.measures();\n            var rowMeasures = [];\n\n            if (this.measuresAxis() === \"rows\") {\n                if (this.rows().length === 0) {\n                    rowMeasures = measures;\n                } else if (measures.length > 1) {\n                    rowMeasures = measures;\n                }\n            }\n\n            return rowMeasures;\n        },\n\n        _updateLocalData: function(data, state) {\n            if (this.cubeBuilder) {\n                if (state) {\n                    this._requestData = state;\n                }\n                data = this._processResult(data);\n            }\n\n            this._data = this._observe(data);\n\n            this._ranges = [];\n            this._addRange(this._data);\n\n            this._total = this._data.length;\n            this._pristineTotal = this._total;\n            this._process(this._data);\n        },\n\n        data: function(value) {\n            var that = this;\n            if (value !== undefined) {\n                this._pristineData = value.slice(0);\n                this._updateLocalData(value, {\n                        columns: this.columns(),\n                        rows: this.rows(),\n                        measures: this.measures()\n                    });\n            } else {\n                return that._data;\n            }\n        },\n\n        _normalizeTuples: function(tuples, source, descriptors, measures) {\n            var length = measures.length || 1;\n            var idx = 0;\n\n            var roots = [];\n            var indexes = {};\n            var measureIdx = 0;\n            var tuple, memberIdx, last;\n\n            if (!tuples.length) {\n                return;\n            }\n\n            if (this._skipNormalize <= 0 && !this._hasRoot(tuples[0], source, descriptors)) {\n                this._skipNormalize = 0;\n                for (; idx < length; idx++) {\n                    roots.push(this._createTuple(tuples[0], measures[idx], true));\n                    indexes[idx] = idx;\n                }\n\n                tuples.splice.apply(tuples, [0, tuples.length].concat(roots).concat(tuples));\n                idx = length;\n            }\n\n            if (measures.length) {\n                last = tuple = tuples[idx];\n                memberIdx = tuple.members.length - 1;\n\n                while (tuple) {\n                    if (measureIdx >= length) {\n                        measureIdx = 0;\n                    }\n\n                    if (tuple.members[memberIdx].name !== measures[measureIdx].name) {\n                        tuples.splice(idx, 0, this._createTuple(tuple, measures[measureIdx]));\n                        indexes[idx] = idx;\n                    }\n\n                    idx += 1;\n                    measureIdx += 1;\n                    tuple = tuples[idx];\n\n                    if (length > measureIdx && (!tuple || tupleName(last, memberIdx - 1) !== tupleName(tuple, memberIdx - 1))) {\n                        for (; measureIdx < length; measureIdx++) {\n                            tuples.splice(idx, 0, this._createTuple(last, measures[measureIdx]));\n                            indexes[idx] = idx;\n                            idx += 1;\n                        }\n                        tuple = tuples[idx];\n                    }\n                    last = tuple;\n                }\n            }\n\n            return indexes;\n        },\n\n        _addMissingDataItems: function(result, metadata) {\n            while (metadata.rowIndexes[parseInt(result.length / metadata.columnsLength, 10)] !== undefined) {\n                for (var idx = 0; idx < metadata.columnsLength; idx++) {\n                    result = addEmptyDataItem(result);\n                }\n            }\n\n            while (metadata.columnIndexes[result.length % metadata.columnsLength] !== undefined) {\n                result = addEmptyDataItem(result);\n            }\n\n            return result;\n        },\n\n        _normalizeOrdinals: function(result, dataItem, metadata) {\n            var lastOrdinal = metadata.lastOrdinal;\n\n            if (!dataItem) {\n                return addEmptyDataItem(result);\n            }\n\n            if ((dataItem.ordinal - lastOrdinal) > 1) {\n                lastOrdinal += 1;\n\n                while (lastOrdinal < dataItem.ordinal && result.length < metadata.length) {\n                    result = this._addMissingDataItems(addEmptyDataItem(result), metadata);\n                    lastOrdinal += 1;\n                }\n            }\n\n            dataItem.ordinal = result.length;\n            result[result.length] = dataItem;\n\n            return result;\n        },\n\n        _normalizeData: function(options) {\n            var data = options.data;\n            var dataIdx = 0;\n            var dataItem;\n            var result = [];\n            var lastOrdinal;\n            var length;\n\n            options.lastOrdinal = 0;\n            options.columnIndexes = options.columnIndexes || {};\n            options.rowIndexes = options.rowIndexes || {};\n            options.columnsLength = options.columnsLength || 1;\n            options.rowsLength = options.rowsLength || 1;\n            options.length = options.columnsLength * options.rowsLength;\n            length = options.length;\n\n            if (data.length === length) {\n                return data;\n            }\n\n            while (result.length < length) {\n                dataItem = data[dataIdx++];\n                if (dataItem) {\n                    lastOrdinal = dataItem.ordinal;\n                }\n\n                result = this._normalizeOrdinals(this._addMissingDataItems(result, options), dataItem, options);\n\n                options.lastOrdinal = lastOrdinal;\n            }\n\n            return result;\n        },\n\n        discover: function(options, converter) {\n            var that = this,\n                transport = that.transport;\n\n            return $.Deferred(function(deferred) {\n                transport.discover(extend({\n                    success: function(response) {\n                       response = that.reader.parse(response);\n\n                        if (that._handleCustomErrors(response)) {\n                            return;\n                        }\n\n                        if (converter) {\n                            response = converter(response);\n                        }\n                        deferred.resolve(response);\n                    },\n                    error: function(response, status, error) {\n                        deferred.reject(response);\n                        that.error(response, status, error);\n                    }\n                }, options));\n            }).promise().done(function() {\n                that.trigger(\"schemaChange\");\n            });\n        },\n\n        schemaMeasures: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaMeasures\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.measures(response);\n            });\n        },\n\n        schemaKPIs: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaKPIs\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.kpis(response);\n            });\n        },\n\n        schemaDimensions: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaDimensions\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.dimensions(response);\n            });\n        },\n\n        schemaHierarchies: function(dimensionName) {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaHierarchies\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        dimensionUniqueName: dimensionName\n                    }\n                }\n            }, function(response) {\n                return that.reader.hierarchies(response);\n            });\n        },\n\n        schemaLevels: function(hierarchyName) {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaLevels\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        hierarchyUniqueName: hierarchyName\n                    }\n                }\n            }, function(response) {\n                return that.reader.levels(response);\n            });\n        },\n\n        schemaCubes: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaCubes\",\n                    restrictions: {\n                        catalogName: that.transport.catalog()\n                    }\n                }\n            }, function(response) {\n                return that.reader.cubes(response);\n            });\n        },\n\n        schemaCatalogs: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaCatalogs\"\n                }\n            }, function(response) {\n                return that.reader.catalogs(response);\n            });\n        },\n\n        schemaMembers: function(restrictions) {\n            var that = this;\n            var success = (function(restrictions) {\n                return function(response) {\n                    return that.reader.members(response, restrictions);\n                };\n            }(restrictions));\n\n            return that.discover({\n                data: {\n                    command: \"schemaMembers\",\n                    restrictions: extend({\n                       catalogName: that.transport.catalog(),\n                       cubeName: that.transport.cube()\n                   }, restrictions)\n                }\n            }, success);\n        },\n\n        _params: function(data) {\n            if (this._clearAxesData) {\n                this._axes = {};\n                this._data = this._observe([]);\n                this._clearAxesData = false;\n                this.trigger(STATERESET);\n            }\n\n            var options = DataSource.fn._params.call(this, data);\n\n            options = extend({\n                measures: this.measures(),\n                measuresAxis: this.measuresAxis(),\n                columns: this.columns(),\n                rows: this.rows()\n            }, options);\n\n            if (this.cubeBuilder) {\n                this._requestData = options;\n            }\n\n            return options;\n        }\n    });\n\n    function flatColumns(columns) {\n        var result = [];\n        for (var idx = 0; idx < columns.length; idx++) {\n            result.push(columns[idx]);\n            if (columns[idx].children) {\n                result = result.concat(flatColumns(columns[idx].children));\n            }\n        }\n\n        return result;\n    }\n\n    function sortItemsTree(field, items, sortFunction) {\n        for (var i = 0; i < items.length; i++) {\n            if (items[i].children && items[i].children.length) {\n                sortItemsTree(field, items[i].children, sortFunction);\n            }\n        }\n        if (items[0].parentName != field) {\n            return;\n        }\n        items = items.sort(sortFunction);\n    }\n\n    function fillSortTree(items, map) {\n        for (var i = 0; i < items.length; i++) {\n            var currentItem = map[items[i].name];\n\n            if (!$.isEmptyObject(currentItem.childrenMap)) {\n                items[i].children = [];\n                for (var name in currentItem.childrenMap) {\n                    items[i].children.push($.extend({}, { name: name, parentName: map[name].parentName }));\n                }\n\n                fillSortTree(items[i].children, map);\n            }\n        }\n    }\n\n    function addEmptyDataItem(result) {\n        result[result.length] = { value: \"\", fmtValue: \"\", ordinal: result.length };\n        return result;\n    }\n\n    function validateAxis(newAxis, axis, measures) {\n        if (newAxis.tuples.length < membersCount(axis.tuples, measures)) {\n\n            return axis;\n        }\n\n        return;\n    }\n\n    function adjustDataByColumn(sourceTuples, targetTuples, rowsLength, measures, data) {\n        var columnIdx, rowIdx, dataIdx;\n        var columnsLength = sourceTuples.length;\n        var targetColumnsLength = membersCount(targetTuples, measures);\n        var measuresLength = measures.length || 1;\n\n        for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n            for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                dataIdx = tupleIndex(sourceTuples[columnIdx], targetTuples) * measuresLength;\n                dataIdx += columnIdx % measuresLength;\n\n                data[rowIdx * columnsLength + columnIdx].ordinal = rowIdx * targetColumnsLength + dataIdx;\n            }\n        }\n    }\n\n    function adjustDataByRow(sourceTuples, targetTuples, columnsLength, measures, data) {\n        var columnIdx, rowIdx, dataIdx;\n        var rowsLength = sourceTuples.length;\n        var measuresLength = measures.length || 1;\n\n        for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n            dataIdx = tupleIndex(sourceTuples[rowIdx], targetTuples);\n            dataIdx *= measuresLength;\n            dataIdx += rowIdx % measuresLength;\n\n            for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                data[rowIdx * columnsLength + columnIdx].ordinal = dataIdx * columnsLength + columnIdx;\n            }\n        }\n    }\n\n    function tupleIndex(tuple, collection) {\n        return findExistingTuple(collection, tuple).index;\n    }\n\n    function membersCount(tuples, measures) {\n        if (!tuples.length) {\n            return 0;\n        }\n\n        var queue = tuples.slice();\n        var current = queue.shift();\n        var result = 1;\n\n        while (current) {\n            if (current.members) {\n                [].push.apply(queue, current.members);\n            } else if (current.children) {\n                if (!current.measure) {\n                    result += current.children.length;\n                }\n                [].push.apply(queue, current.children);\n            }\n\n            current = queue.shift();\n        }\n\n        if (measures.length) {\n            result = result * measures.length;\n        }\n\n        return result;\n    }\n\n    function normalizeAxis(axis) {\n        if (!axis) {\n            axis = {\n                tuples: []\n            };\n        }\n\n        if (!axis.tuples) {\n            axis.tuples = [];\n        }\n\n        return axis;\n    }\n\n    function findDataIndex(tuple, memberIndex, measures) {\n        if (!tuple) {\n            return 0;\n        }\n\n        var measuresLength = Math.max(measures.length, 1);\n        var tuples = tuple.members.slice(0, memberIndex);\n        var current = tuples.shift();\n\n        //the initial value is equal to the total number of measures\n        //as the measures member is not extracted from the members of the starting tuple\n        //but should be calculated in the final result\n        var counter = measuresLength;\n\n        while (current) {\n            if (current.name === MEASURES) {\n                //subtract 1 as the measures member has been already counted as a single standard member\n                //but we are interested in the total number of measures instead\n                counter += (measuresLength - 1);\n            } else if (current.children) {\n                //is member\n                [].push.apply(tuples, current.children);\n            } else {\n                //is tuple\n                counter ++;\n                [].push.apply(tuples, current.members);\n            }\n\n            current = tuples.shift();\n        }\n\n        return counter;\n    }\n\n    function mergeTuples(target, source, measures) {\n        if (!source[0]) {\n            return {\n                parsedRoot: null,\n                tuples: target,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        var result = findExistingTuple(target, source[0]);\n\n        if (!result.tuple) {\n            return {\n                parsedRoot: null,\n                tuples: source,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        var targetMembers = result.tuple.members;\n        var sourceMembers = source[0].members;\n        var memberIndex = -1;\n\n        if (targetMembers.length !== sourceMembers.length) {\n            return {\n                parsedRoot: null,\n                tuples: source,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        for (var idx = 0, length = targetMembers.length; idx < length; idx++) {\n            if (!targetMembers[idx].measure && sourceMembers[idx].children[0]) {\n                if (memberIndex == -1 && sourceMembers[idx].children.length) {\n                    memberIndex = idx;\n                }\n\n                targetMembers[idx].children = sourceMembers[idx].children;\n            }\n        }\n\n        measures = Math.max(measures.length, 1);\n\n        return {\n            parsedRoot: result.tuple,\n            index: result.index * measures,\n            memberIndex: memberIndex,\n            tuples: target\n        };\n    }\n\n    function equalTuples(first, second) {\n        var equal = true;\n        var idx, length;\n\n        first = first.members;\n        second = second.members;\n\n        for (idx = 0, length = first.length; idx < length; idx++) {\n            if (first[idx].measure || second[idx].measure) {\n                continue;\n            }\n\n            equal = equal && (getName(first[idx]) === getName(second[idx]));\n        }\n\n        return equal;\n    }\n\n    function findExistingTuple(tuples, toFind) {\n        var idx, length, tuple, found, counter = 0;\n        var memberIndex, membersLength, member;\n\n        for (idx = 0, length = tuples.length; idx < length; idx++) {\n            tuple = tuples[idx];\n            if (equalTuples(tuple, toFind)) {\n                return {\n                    tuple: tuple,\n                    index: counter\n                };\n            }\n\n            counter ++;\n\n            for (memberIndex = 0, membersLength = tuple.members.length; memberIndex < membersLength; memberIndex++) {\n                member = tuple.members[memberIndex];\n                if (member.measure) {\n                    //counter += member.children.length;\n                    continue;\n                }\n                found = findExistingTuple(member.children, toFind);\n                counter += found.index;\n                if (found.tuple) {\n                    return {\n                        tuple: found.tuple,\n                        index: counter\n                    };\n                }\n            }\n        }\n\n        return {\n            index: counter\n        };\n    }\n\n    function addMembers(members, map) {\n        var member, i, len, path = \"\";\n        for (i = 0, len = members.length; i < len; i++) {\n            member = members[i];\n            path += member.name;\n            if (!map[path]) {\n                map[path] = member;\n            }\n        }\n    }\n\n\n    function findParentMember(tuple, map) {\n        var members = tuple.members;\n        var i, len, member, path = \"\";\n        var parentPath = \"\";\n        var parentMember;\n\n        for (i = 0, len = members.length; i < len; i++) {\n            member = members[i];\n            if (parentMember) {\n                if (map[path + member.name]) {\n                    path += member.name;\n                    parentMember = map[path];\n                    continue;\n                } else if (map[path + member.parentName]) {\n                    return map[path + member.parentName];\n                } else if (map[parentPath + member.parentName]) {\n                    return map[parentPath + member.parentName];\n                } else {\n                    return map[parentPath];\n                }\n            }\n\n            path += member.name;\n            parentMember = map[member.parentName];\n\n            if (!parentMember) {\n                parentMember = map[path];\n                if (!parentMember) {\n                    return null;\n                }\n            }\n\n            if (parentMember) {\n                parentPath += parentMember.name;\n            }\n        }\n\n        return parentMember;\n    }\n\n    function measurePosition(tuple, measures) {\n        if (measures.length === 0) {\n            return -1;\n        }\n\n        var measure = measures[0];\n        var members = tuple.members;\n        for (var idx = 0, len = members.length; idx < len; idx ++) {\n            if (members[idx].name == measure.name) {\n                return idx;\n            }\n        }\n    }\n\n    function normalizeTupleMeasures(tuple, index) {\n        if (index < 0) {\n            return;\n        }\n        var member = {\n            name: MEASURES,\n            measure: true,\n            children: [\n                $.extend({ members: [], dataIndex: tuple.dataIndex }, tuple.members[index])\n            ]\n        };\n        tuple.members.splice(index, 1, member);\n        tuple.dataIndex = undefined;\n    }\n\n    function parseSource(tuples, measures) {\n        if (tuples.length < 1) {\n            return [];\n        }\n        var result = [];\n        var map = { };\n        var measureIndex = measurePosition(tuples[0], measures);\n\n        for (var i = 0; i < tuples.length; i++) {\n            var tuple = tuples[i];\n\n            //keep the old data index of the tuple\n            tuple.dataIndex = i;\n\n            normalizeTupleMeasures(tuple, measureIndex);\n            var parentMember = findParentMember(tuple, map);\n\n            if (parentMember) {\n                if (measureIndex < 0 || !parentMember.measure) {\n                    parentMember.children.push(tuple);\n                } else {\n                    parentMember.children.push(tuple.members[measureIndex].children[0]);\n                }\n            } else {\n                result.push(tuple);\n            }\n\n            addMembers(tuple.members, map);\n        }\n\n        return result;\n    }\n\n    function prepareDataOnRows(tuples, data) {\n        if (!tuples || !tuples.length) {\n            return data;\n        }\n\n        var result = [];\n        var indices = buildDataIndices(tuples);\n        var rowsLength = indices.length;\n        var columnsLength = Math.max(data.length / rowsLength, 1);\n        var rowIndex, columnIndex, targetIndex, sourceIndex;\n        var calcIndex;\n\n        for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n            targetIndex = columnsLength * rowIndex;\n            sourceIndex = columnsLength * indices[rowIndex];\n            for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                calcIndex = parseInt(sourceIndex + columnIndex, 10);\n                result[parseInt(targetIndex + columnIndex, 10)] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n            }\n        }\n\n        return result;\n    }\n\n    function prepareDataOnColumns(tuples, data) {\n        if (!tuples || !tuples.length) {\n            return data;\n        }\n\n        var result = [];\n        var indices = buildDataIndices(tuples);\n        var columnsLength = indices.length;\n        var rowsLength = Math.max(data.length / columnsLength, 1);\n        var columnIndex, rowIndex, dataIndex, calcIndex;\n\n        for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n            dataIndex = columnsLength * rowIndex;\n            for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                calcIndex = indices[columnIndex] + dataIndex;\n                result[dataIndex + columnIndex] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n            }\n        }\n\n        return result;\n    }\n\n    function buildDataIndices(tuples) {\n        tuples = tuples.slice();\n        var result = [];\n        var tuple = tuples.shift();\n        var idx, length, spliceIndex, children, member;\n\n        while (tuple) {\n            //required for multiple measures\n            if (tuple.dataIndex !== undefined) {\n                result.push(tuple.dataIndex);\n            }\n\n            spliceIndex = 0;\n            for (idx = 0, length = tuple.members.length; idx < length; idx++) {\n                member = tuple.members[idx];\n                children = member.children;\n                if (member.measure) {\n                    [].splice.apply(tuples, [0, 0].concat(children));\n                } else {\n                    [].splice.apply(tuples, [spliceIndex, 0].concat(children));\n                }\n                spliceIndex += children.length;\n            }\n\n            tuple = tuples.shift();\n        }\n\n        return result;\n    }\n\n    PivotDataSourceV2.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data;\n\n        dataSource.data = data;\n\n        if (!(dataSource instanceof PivotDataSourceV2) && dataSource instanceof kendo.data.DataSource) {\n            throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n        }\n\n        return dataSource instanceof PivotDataSourceV2 ? dataSource : new PivotDataSourceV2(dataSource);\n    };\n\n    PivotDataSource.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data;\n\n        dataSource.data = data;\n\n        if (!(dataSource instanceof PivotDataSource) && dataSource instanceof kendo.data.DataSource) {\n            throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n        }\n\n        return dataSource instanceof PivotDataSource ? dataSource : new PivotDataSource(dataSource);\n    };\n\n    function baseHierarchyPath(memberName) {\n        var parts = memberName.split(\".\");\n        if (parts.length > 2) {\n            return parts[0] + \".\" + parts[1];\n        }\n        return memberName;\n    }\n\n    function expandMemberDescriptor(names, sort) {\n        var idx = names.length - 1;\n        var name = names[idx];\n        var sortDescriptor;\n\n        sortDescriptor = sortDescriptorForMember(sort, name);\n\n        if (sortDescriptor && sortDescriptor.dir) {\n            name = \"ORDER(\" + name + \".Children,\" + sortDescriptor.field + \".CurrentMember.MEMBER_CAPTION,\" + sortDescriptor.dir + \")\";\n        } else {\n            name += \".Children\";\n        }\n\n        names[idx] = name;\n\n        return names;\n    }\n\n    function sortDescriptorForMember(sort, member) {\n        for (var idx = 0, length = sort.length; idx < length; idx++) {\n            if (member.indexOf(sort[idx].field) === 0) {\n                return sort[idx];\n            }\n        }\n        return null;\n    }\n\n    function crossJoin(names) {\n        var result = \"CROSSJOIN({\";\n        var r;\n\n        if (names.length > 2) {\n            r = names.pop();\n            result += crossJoin(names);\n        } else {\n            result += names.shift();\n            r = names.pop();\n        }\n\n        result += \"},{\";\n        result += r;\n        result += \"})\";\n        return result;\n    }\n\n    function crossJoinCommand(members, measures) {\n        var tmp = members.slice(0);\n\n        if (measures.length > 1) {\n            tmp.push(\"{\" + measureNames(measures).join(\",\") + \"}\");\n        }\n\n        return crossJoin(tmp);\n    }\n\n    function measureNames(measures) {\n        var idx = 0;\n        var length = measures.length;\n        var result = [];\n        var measure;\n\n        for (; idx < length; idx++) {\n            measure = measures[idx];\n            result.push(measure.name !== undefined ? measure.name : measure);\n        }\n\n        return result;\n    }\n\n    function indexOf(name, items) {\n        var idx, length, index = -1;\n\n        for (idx = 0, length = items.length; idx < length; idx++) {\n            if (getName(items[idx]) === name) {\n                index = idx;\n                break;\n            }\n        }\n        return index;\n    }\n\n    function getName(name) {\n        name = name.name || name;\n\n        if (toString.call(name) === \"[object Array]\") {\n            name = name[name.length - 1];\n        }\n\n        return name;\n    }\n\n    function getRootNames(members) {\n        var length = members.length;\n        var names = [];\n        var idx = 0;\n\n        for (; idx < length; idx++) {\n            names.push(members[idx].name[0]);\n        }\n\n        return names;\n    }\n\n    function mapNames(names, rootNames) {\n        var name;\n        var rootName;\n\n        var j;\n        var idx = 0;\n        var length = names.length;\n        var rootLength = rootNames.length;\n\n        rootNames = rootNames.slice(0);\n\n        for (; idx < length; idx++) {\n            name = names[idx];\n\n            for (j = 0; j < rootLength; j++) {\n                rootName = baseHierarchyPath(rootNames[j]);\n\n                if (name.indexOf(rootName) !== -1) {\n                    rootNames[j] = name;\n                    break;\n                }\n            }\n        }\n\n        return {\n            names: rootNames,\n            expandedIdx: j,\n            uniquePath: rootNames.slice(0, j + 1).join(\"\")\n        };\n    }\n\n    function parseDescriptors(members) {\n        var expanded = [];\n        var child = [];\n        var root = [];\n        var member;\n\n        var j, l;\n        var idx = 0;\n        var length = members.length;\n\n        var name;\n        var hierarchyName;\n\n        var found;\n\n        for (; idx < length; idx++) {\n            member = members[idx];\n            name = member.name;\n            found = false;\n\n            if (toString.call(name) !== \"[object Array]\") {\n                member.name = name = [name];\n            }\n\n            if (name.length > 1) {\n                child.push(member);\n            } else {\n                hierarchyName = baseHierarchyPath(name[0]);\n\n                for (j = 0, l = root.length; j < l; j++) {\n                    if (root[j].name[0].indexOf(hierarchyName) === 0) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    root.push(member);\n                }\n\n                if (member.expand) {\n                    expanded.push(member);\n                }\n            }\n        }\n\n        expanded = expanded.concat(child);\n\n        return {\n            root: root,\n            expanded: expanded\n        };\n    }\n\n    function serializeMembers(members, measures, sort) {\n        var command = \"\";\n\n        members = members || [];\n\n        var expanded = parseDescriptors(members);\n        var root = expanded.root;\n\n        var rootNames = getRootNames(root);\n        var crossJoinCommands = [];\n\n        expanded = expanded.expanded;\n\n        var length = expanded.length;\n        var idx = 0;\n\n        var memberName;\n        var names = [];\n\n        if (rootNames.length > 1 || measures.length > 1) {\n            crossJoinCommands.push(crossJoinCommand(rootNames, measures));\n\n            for (; idx < length; idx++) {\n                memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                names = mapNames(memberName, rootNames).names;\n\n                crossJoinCommands.push(crossJoinCommand(names, measures));\n            }\n\n            command += crossJoinCommands.join(\",\");\n        } else {\n            for (; idx < length; idx++) {\n                memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                names.push(memberName[0]); //check if this is ok\n            }\n\n            command += rootNames.concat(names).join(\",\");\n        }\n\n        return command;\n    }\n\n    var filterFunctionFormats = {\n        contains: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\") > 0\",\n        doesnotcontain: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\")\",\n        startswith: \", Left({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n        endswith: \", Right({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n        eq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\",\n        neq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\"\n    };\n\n    function serializeExpression(expression) {\n        var command = \"\";\n        var value = expression.value;\n        var field = expression.field;\n        var operator = expression.operator;\n\n        if (operator == \"in\") {\n            command += \"{\";\n            command += value;\n            command += \"}\";\n        } else {\n            command += operator == \"neq\" || operator == \"doesnotcontain\" ? \"-\" : \"\";\n            command += \"Filter(\";\n            command += field + \".MEMBERS\";\n            command += kendo.format(filterFunctionFormats[operator], field, value);\n            command += \")\";\n        }\n\n        return command;\n    }\n\n    function serializeFilters(filter, cube) {\n        var command = \"\", current;\n        var filters = filter.filters;\n        var length = filters.length;\n        var idx;\n\n        for (idx = length - 1; idx >= 0; idx--) {\n\n            current = \"SELECT (\";\n            current += serializeExpression(filters[idx]);\n            current += \") ON 0\";\n\n            if (idx == length - 1) {\n                current += \" FROM [\" + cube + \"]\";\n                command = current;\n            } else {\n                command = current + \" FROM ( \" + command + \" )\";\n            }\n        }\n\n        return command;\n    }\n\n    function serializeOptions(parentTagName, options, capitalize) {\n        var result = \"\";\n\n        if (options) {\n            result += \"<\" + parentTagName + \">\";\n            var value;\n            for (var key in options) {\n                value = options[key];\n                if (capitalize) {\n                    key = key.replace(/([A-Z]+(?=$|[A-Z][a-z])|[A-Z]?[a-z]+)/g, \"$1_\").toUpperCase().replace(/_$/, \"\");\n                }\n                result += \"<\" + key + \">\" + value + \"</\" + key + \">\";\n            }\n            result += \"</\" + parentTagName + \">\";\n        } else {\n            result += \"<\" + parentTagName + \"/>\";\n        }\n        return result;\n    }\n\n    var xmlaDiscoverCommands = {\n        schemaCubes: \"MDSCHEMA_CUBES\",\n        schemaCatalogs: \"DBSCHEMA_CATALOGS\",\n        schemaMeasures: \"MDSCHEMA_MEASURES\",\n        schemaDimensions: \"MDSCHEMA_DIMENSIONS\",\n        schemaHierarchies: \"MDSCHEMA_HIERARCHIES\",\n        schemaLevels: \"MDSCHEMA_LEVELS\",\n        schemaMembers: \"MDSCHEMA_MEMBERS\",\n        schemaKPIs: \"MDSCHEMA_KPIS\"\n    };\n\n    var convertersMap = {\n        read: function(options) {\n            var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"><Command><Statement>';\n\n            command += \"SELECT NON EMPTY {\";\n\n            var columns = options.columns || [];\n            var rows = options.rows || [];\n\n            var measures = options.measures || [];\n            var measuresRowAxis = options.measuresAxis === \"rows\";\n            var sort = options.sort || [];\n\n            if (!columns.length && rows.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                columns = rows;\n                rows = [];\n                measuresRowAxis = false;\n            }\n\n            if (!columns.length && !rows.length) {\n                measuresRowAxis = false;\n            }\n\n            if (columns.length) {\n                command += serializeMembers(columns, !measuresRowAxis ? measures : [], sort);\n            } else if (measures.length && !measuresRowAxis) {\n                command += measureNames(measures).join(\",\");\n            }\n\n            command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON COLUMNS\";\n\n            if (rows.length || (measuresRowAxis && measures.length > 1)) {\n                command += \", NON EMPTY {\";\n\n                if (rows.length) {\n                    command += serializeMembers(rows, measuresRowAxis ? measures : [], sort);\n                } else {\n                    command += measureNames(measures).join(\",\");\n                }\n\n                command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON ROWS\";\n            }\n\n            if (options.filter) {\n                command += \" FROM \";\n                command += \"(\";\n                command += serializeFilters(options.filter, options.connection.cube);\n                command += \")\";\n            } else {\n                command += \" FROM [\" + options.connection.cube + \"]\";\n            }\n\n            if (measures.length == 1 && columns.length) {\n                command += \" WHERE (\" + measureNames(measures).join(\",\") + \")\";\n            }\n\n            command += '</Statement></Command><Properties><PropertyList><Catalog>' + options.connection.catalog + '</Catalog><Format>Multidimensional</Format></PropertyList></Properties></Execute></Body></Envelope>';\n            return command.replace(/\\&/g, \"&amp;\");\n        },\n        discover: function(options) {\n            options = options || {};\n\n            var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Discover xmlns=\"urn:schemas-microsoft-com:xml-analysis\">';\n            command += \"<RequestType>\" + (xmlaDiscoverCommands[options.command] || options.command) + \"</RequestType>\";\n\n            command += \"<Restrictions>\" + serializeOptions(\"RestrictionList\", options.restrictions, true) + \"</Restrictions>\";\n\n            if (options.connection && options.connection.catalog) {\n                options.properties = $.extend({}, {\n                    Catalog: options.connection.catalog\n                }, options.properties);\n            }\n\n            command += \"<Properties>\" + serializeOptions(\"PropertyList\", options.properties) + \"</Properties>\";\n\n            command += '</Discover></Body></Envelope>';\n            return command;\n        }\n    };\n\n    var XmlaTransport = kendo.data.RemoteTransport.extend({\n        init: function(options) {\n            var originalOptions = options;\n\n            options = this.options = extend(true, {}, this.options, options);\n\n            kendo.data.RemoteTransport.call(this, options);\n\n            if (isFunction(originalOptions.discover)) {\n                this.discover = originalOptions.discover;\n            } else if (typeof originalOptions.discover === \"string\") {\n                this.options.discover = {\n                    url: originalOptions.discover\n                };\n            } else if (!originalOptions.discover) {\n                this.options.discover = this.options.read;\n            }\n        },\n        setup: function(options, type) {\n            options.data = options.data || {};\n            $.extend(true, options.data, { connection: this.options.connection });\n\n            return kendo.data.RemoteTransport.fn.setup.call(this, options, type);\n        },\n        options: {\n            read: {\n                dataType: \"text\",\n                contentType: \"text/xml\",\n                type: \"POST\"\n            },\n            discover: {\n                dataType: \"text\",\n                contentType: \"text/xml\",\n                type: \"POST\"\n            },\n            parameterMap: function(options, type) {\n                return convertersMap[type](options,type);\n            }\n        },\n\n        discover: function(options) {\n            return $.ajax(this.setup(options, \"discover\"));\n        }\n    });\n\n    var XmlaTransportV2 = Class.extend({\n        init: function(options) {\n            options = this.options = extend(true, {}, this.options, options);\n        },\n        setup: function(options) {\n            return $.extend(true, options || {}, { connection: this.options.connection });\n        },\n        read: function(options) {\n            var that = this,\n                success,\n                error;\n\n            var fetchOptions = that.setup(options.data, READ);\n\n            success = options.success || $.noop;\n            error = options.error || $.noop;\n\n            if (options.parameterMap) {\n                fetchOptions = that.parameterMap(fetchOptions, READ);\n            }\n\n            fetchData({ url: that.options.read }, fetchOptions)\n            .then(createDataState)\n            .then(function(newDataState) {\n                success(newDataState);\n            })\n            .catch(function(err) { error(err); });\n        },\n\n        catalog: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined) {\n                return (options.connection || {}).catalog;\n\n            }\n\n            var connection = options.connection || {};\n            connection.catalog = val;\n\n            this.options.connection = connection;\n            $.extend(this.transport.options, { connection: connection });\n        },\n        cube: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined) {\n                return (options.connection || {}).cube;\n            }\n\n            var connection = options.connection || {};\n            connection.cube = val;\n\n            this.options.connection = connection;\n            extend(true, this.transport.options, { connection: connection });\n        },\n\n        discover: function(options) {\n            return fetchDiscover({ url: this.options.read }, options);\n        }\n    });\n\n    function asArray(object) {\n        if (object == null) {\n            return [];\n        }\n\n        var type = toString.call(object);\n        if (type !== \"[object Array]\") {\n            return [object];\n        }\n\n        return object;\n    }\n\n    function translateAxis(axis) {\n        var result = { tuples: [] };\n        var tuples = asArray(kendo.getter(\"Tuples.Tuple\", true)(axis));\n        var captionGetter = kendo.getter(\"Caption['#text']\");\n        var unameGetter = kendo.getter(\"UName['#text']\");\n        var levelNameGetter = kendo.getter(\"LName['#text']\");\n        var levelNumGetter = kendo.getter(\"LNum['#text']\");\n        var childrenGetter = kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true);\n        var hierarchyGetter = kendo.getter(\"['@Hierarchy']\");\n        var parentNameGetter = kendo.getter(\"PARENT_UNIQUE_NAME['#text']\", true);\n\n        for (var idx = 0; idx < tuples.length; idx++) {\n            var members = [];\n            var member = asArray(tuples[idx].Member);\n            for (var memberIdx = 0; memberIdx < member.length; memberIdx++) {\n                members.push({\n                    children: [],\n                    caption: captionGetter(member[memberIdx]),\n                    name: unameGetter(member[memberIdx]),\n                    levelName: levelNameGetter(member[memberIdx]),\n                    levelNum: levelNumGetter(member[memberIdx]),\n                    hasChildren: parseInt(childrenGetter(member[memberIdx]), 10) > 0,\n                    parentName: parentNameGetter(member[memberIdx]),\n                    hierarchy: hierarchyGetter(member[memberIdx])\n                });\n            }\n\n            result.tuples.push({ members: members });\n        }\n        return result;\n    }\n\n    var schemaDataReaderMap = {\n        cubes: {\n            name: kendo.getter(\"CUBE_NAME['#text']\", true),\n            caption: kendo.getter(\"CUBE_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            type: kendo.getter(\"CUBE_TYPE['#text']\", true)\n        },\n        catalogs: {\n            name: kendo.getter(\"CATALOG_NAME['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true)\n        },\n        measures: {\n            name: kendo.getter(\"MEASURE_NAME['#text']\", true),\n            caption: kendo.getter(\"MEASURE_CAPTION['#text']\", true),\n            uniqueName: kendo.getter(\"MEASURE_UNIQUE_NAME['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            aggregator: kendo.getter(\"MEASURE_AGGREGATOR['#text']\", true),\n            groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"MEASURE_DISPLAY_FOLDER['#text']\", true),\n            defaultFormat: kendo.getter(\"DEFAULT_FORMAT_STRING['#text']\", true)\n        },\n        kpis: {\n            name: kendo.getter(\"KPI_NAME['#text']\", true),\n            caption: kendo.getter(\"KPI_CAPTION['#text']\", true),\n            value: kendo.getter(\"KPI_VALUE['#text']\", true),\n            goal: kendo.getter(\"KPI_GOAL['#text']\", true),\n            status: kendo.getter(\"KPI_STATUS['#text']\", true),\n            trend: kendo.getter(\"KPI_TREND['#text']\", true),\n            statusGraphic: kendo.getter(\"KPI_STATUS_GRAPHIC['#text']\", true),\n            trendGraphic: kendo.getter(\"KPI_TREND_GRAPHIC['#text']\", true),\n            description: kendo.getter(\"KPI_DESCRIPTION['#text']\", true),\n            groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true)\n        },\n        dimensions: {\n            name: kendo.getter(\"DIMENSION_NAME['#text']\", true),\n            caption: kendo.getter(\"DIMENSION_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            defaultHierarchy: kendo.getter(\"DEFAULT_HIERARCHY['#text']\", true),\n            type: kendo.getter(\"DIMENSION_TYPE['#text']\", true)\n//unknown = 0; time = 1; measure = 2; other = 3; quantitative = 5; accounts = 6; customers = 7; products = 8; scenario = 9; utility = 10; currency = 11; rates = 12; channel = 13; promotion = 14; organization = 15; billOfMaterials = 16; geography = 17;\n\n        },\n        hierarchies: {\n            name: kendo.getter(\"HIERARCHY_NAME['#text']\", true),\n            caption: kendo.getter(\"HIERARCHY_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"HIERARCHY_DISPLAY_FOLDER['#text']\", true),\n            origin: kendo.getter(\"HIERARCHY_ORIGIN['#text']\", true),\n            defaultMember: kendo.getter(\"DEFAULT_MEMBER['#text']\", true)\n        },\n        levels: {\n            name: kendo.getter(\"LEVEL_NAME['#text']\", true),\n            caption: kendo.getter(\"LEVEL_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"LEVEL_DISPLAY_FOLDER['#text']\", true),\n            orderingProperty: kendo.getter(\"LEVEL_ORDERING_PROPERTY['#text']\", true),\n            origin: kendo.getter(\"LEVEL_ORIGIN['#text']\", true),\n            hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true)\n        },\n        members: {\n            name: kendo.getter(\"MEMBER_NAME['#text']\", true),\n            caption: kendo.getter(\"MEMBER_CAPTION['#text']\", true),\n            uniqueName: kendo.getter(\"MEMBER_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n            levelUniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n            childrenCardinality: kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true)\n        }\n    };\n\n    var xmlaReaderMethods = [\"axes\", \"catalogs\", \"cubes\", \"dimensions\", \"hierarchies\", \"levels\", \"measures\"];\n\n    var XmlaDataReader = kendo.data.XmlDataReader.extend({\n        init: function(options) {\n            kendo.data.XmlDataReader.call(this, options);\n\n            this._extend(options);\n        },\n        _extend: function(options) {\n            var idx = 0;\n            var length = xmlaReaderMethods.length;\n            var methodName;\n            var option;\n\n            for (; idx < length; idx++) {\n                methodName = xmlaReaderMethods[idx];\n                option = options[methodName];\n\n                if (option && option !== identity) {\n                    this[methodName] = option;\n                }\n            }\n        },\n        parse: function(xml) {\n            var result = kendo.data.XmlDataReader.fn.parse(xml.replace(/<(\\/?)(\\w|-)+:/g, \"<$1\"));\n            return kendo.getter(\"['Envelope']['Body']\", true)(result);\n        },\n        errors: function(root) {\n            var fault = kendo.getter(\"['Fault']\", true)(root);\n            if (fault) {\n                return [{\n                    faultstring: kendo.getter(\"faultstring['#text']\", true)(fault),\n                    faultcode: kendo.getter(\"faultcode['#text']\", true)(fault)\n                }];\n            }\n            return null;\n        },\n        axes: function(root) {\n            root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n            var axes = asArray(kendo.getter(\"Axes.Axis\", true)(root));\n            var axis;\n\n            var result = {\n                columns: {},\n                rows: {}\n            };\n\n            for (var idx = 0; idx < axes.length; idx++) {\n                axis = axes[idx];\n\n                if (axis[\"@name\"].toLowerCase() !== \"sliceraxis\") {\n                    if (!result.columns.tuples) {\n                        result.columns = translateAxis(axis);\n                    } else {\n                        result.rows = translateAxis(axis);\n                    }\n                }\n            }\n\n            return result;\n        },\n        data: function(root) {\n            root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n            var cells = asArray(kendo.getter(\"CellData.Cell\", true)(root));\n\n            var result = [];\n            var ordinalGetter = kendo.getter(\"['@CellOrdinal']\");\n            var valueGetter = kendo.getter(\"Value['#text']\");\n            var fmtValueGetter = kendo.getter(\"FmtValue['#text']\");\n\n            for (var idx = 0; idx < cells.length; idx++) {\n                result.push({\n                    value: valueGetter(cells[idx]),\n                    fmtValue: fmtValueGetter(cells[idx]),\n                    ordinal: parseInt(ordinalGetter(cells[idx]), 10)\n                });\n            }\n\n            return result;\n        },\n        _mapSchema: function(root, getters) {\n            root = kendo.getter(\"DiscoverResponse[\\\"return\\\"].root\", true)(root);\n            var rows = asArray(kendo.getter(\"row\", true)(root));\n\n            var result = [];\n\n            for (var idx = 0; idx < rows.length; idx++) {\n                var obj = {};\n                for (var key in getters) {\n                    obj[key] = getters[key](rows[idx]);\n                }\n                result.push(obj);\n            }\n\n            return result;\n        },\n        measures: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.measures);\n        },\n        kpis: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.kpis);\n        },\n        hierarchies: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.hierarchies);\n        },\n        levels: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.levels);\n        },\n        dimensions: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.dimensions);\n        },\n        cubes: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.cubes);\n        },\n        catalogs: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.catalogs);\n        },\n        members: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.members);\n        }\n    });\n\n    extend(true, kendo.data, {\n       PivotDataSource: PivotDataSource,\n       PivotDataSourceV2: PivotDataSourceV2,\n       XmlaTransport: XmlaTransport,\n       XmlaDataReader: XmlaDataReader,\n       PivotCubeBuilder: PivotCubeBuilder,\n       transports: {\n           xmla: XmlaTransport\n       },\n       readers: {\n           xmla: XmlaDataReader\n       }\n    });\n\n    var sortExpr = function(expressions, name) {\n        if (!expressions) {\n            return null;\n        }\n\n        for (var idx = 0, length = expressions.length; idx < length; idx++) {\n            if (expressions[idx].field === name) {\n                return expressions[idx];\n            }\n        }\n\n        return null;\n    };\n\n    var removeExpr = function(expressions, name) {\n        var result = [];\n\n        for (var idx = 0, length = expressions.length; idx < length; idx++) {\n            if (expressions[idx].field !== name) {\n                result.push(expressions[idx]);\n            }\n        }\n\n        return result;\n    };\n\n    kendo.ui.PivotSettingTarget = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.element.addClass(\"k-pivot-setting\");\n\n            that.dataSource = kendo.data.PivotDataSource.create(options.dataSource);\n\n            that._refreshHandler = that.refresh.bind(that);\n            that.dataSource.first(CHANGE, that._refreshHandler);\n\n            if (!options.template) {\n                var actions = '';\n\n                if (that.options.enabled) {\n                    actions = '<span class=\"k-setting-delete k-chip-action\"><span class=\"k-icon k-i-close\"></span></span>';\n                }\n\n                that.options.template = ''\n                    + '<span class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" data-' + kendo.ns + 'name=\"${data.name || data}\">'\n                        + '<span class=\"k-chip-content\">'\n                            + '<span class=\"k-chip-text\">${data.name || data}</span>'\n                        + '</span>'\n                        + '<span class=\"k-chip-actions\">' + actions + '</span>'\n                    + '</span>';\n            }\n\n            that.template = kendo.template(that.options.template);\n            that.emptyTemplate = kendo.template(that.options.emptyTemplate);\n\n            that._sortable();\n\n            that.element.on(\"click\" + NS, '.k-chip, .k-button' , function(e) {\n                var target = $(e.target);\n                var action = target.closest('.k-chip-action');\n                var name = target.closest(\"[\" + kendo.attr(\"name\") + \"]\")\n                                 .attr(kendo.attr(\"name\"));\n\n                if (!name) {\n                    return;\n                }\n\n                if (action.hasClass(\"k-setting-delete\")) {\n                    that.remove(name);\n                    return;\n                }\n\n                if (target.closest('.k-chip-actions').length > 0) {\n                    return;\n                }\n\n                if (that.options.sortable) {\n                    var sortDirection = $(e.currentTarget).find('.k-i-sort-asc-sm').length ? 'desc' : 'asc';\n\n                    that.sort({\n                        field: name,\n                        dir: sortDirection\n                    });\n                }\n            });\n\n            if (options.filterable || options.sortable) {\n                that.fieldMenu = new ui.PivotFieldMenu(that.element, {\n                    messages: that.options.messages.fieldMenu,\n                    filter: \".k-setting-fieldmenu\",\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    dataSource: that.dataSource\n                });\n            }\n\n            that.refresh();\n        },\n\n        options: {\n            name: \"PivotSettingTarget\",\n            template: null,\n            filterable: false,\n            sortable: false,\n            emptyTemplate: \"<div class='k-empty'>${data}</div>\",\n            setting: \"columns\",\n            enabled: true,\n            messages: {\n                empty: \"Drop Fields Here\"\n            }\n        },\n        setDataSource: function(dataSource) {\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.dataSource = this.options.dataSource = dataSource;\n\n            if (this.fieldMenu) {\n                this.fieldMenu.setDataSource(dataSource);\n            }\n            dataSource.first(CHANGE, this._refreshHandler);\n\n            this.refresh();\n        },\n\n        _sortable: function() {\n            var that = this;\n\n            if (that.options.enabled) {\n                this.sortable = this.element.kendoSortable({\n                    connectWith: this.options.connectWith,\n                    hint: that.options.hint,\n                    filter: \">*:not(.k-empty)\",\n                    cursor: \"move\",\n                    start: function(e) {\n                        e.item.trigger(\"focus\").trigger(\"blur\");\n                    },\n                    change: function(e) {\n                        var name = e.item.attr(kendo.attr(\"name\"));\n\n                        if (e.action == \"receive\") {\n                            that.add(name);\n                        } else if (e.action == \"remove\") {\n                            that.remove(name);\n                        } else if (e.action == \"sort\") {\n                            that.move(name, e.newIndex);\n                        }\n                    }\n                }).data(\"kendoSortable\");\n            }\n        },\n\n        _isKPI: function(data) {\n            return data.type === \"kpi\" || data.measure;\n        },\n\n        validate: function(data) {\n            var isMeasure = (data.type == 2 || \"aggregator\" in data || this._isKPI(data));\n\n            if (isMeasure) {\n                return this.options.setting === \"measures\";\n            }\n\n            if (this.options.setting === \"measures\") {\n                return isMeasure;\n            }\n\n            var items = this.dataSource[this.options.setting]();\n            var name = data.defaultHierarchy || data.uniqueName;\n            if (indexOf(name, items) > -1) {\n                return false;\n            }\n\n            items = this.dataSource[this.options.setting === \"columns\" ? \"rows\" : \"columns\"]();\n            if (indexOf(name, items) > -1) {\n                return false;\n            }\n\n            return true;\n        },\n\n        add: function(name) {\n            var items = this.dataSource[this.options.setting]();\n            var i, l;\n\n            name = Array.isArray(name) ? name.slice(0) : [name];\n\n            for (i = 0, l = name.length; i < l; i++) {\n                if (indexOf(name[i], items) !== -1) {\n                    name.splice(i, 1);\n                    i -= 1;\n                    l -= 1;\n                }\n            }\n\n            if (name.length) {\n                items = items.concat(name);\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        move: function(name, index) {\n            var items = this.dataSource[this.options.setting]();\n            var idx = indexOf(name, items);\n\n            if (idx > -1) {\n                name = items.splice(idx, 1)[0];\n\n                items.splice(index, 0, name);\n\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        remove: function(name) {\n            var items = this.dataSource[this.options.setting]();\n            var idx = indexOf(name, items);\n            var sortExpressions = this.dataSource.sort();\n            var filter = this.dataSource.filter();\n\n            if (idx > -1) {\n                if (filter) {\n                    filter.filters = removeExpr(filter.filters, name);\n                    this.dataSource._filter.filters = filter.filters;\n                    if (!filter.filters.length) {\n                        this.dataSource._filter = null;\n                    }\n                }\n                if (sortExpressions) {\n                    sortExpressions = removeExpr(sortExpressions, name);\n                    this.dataSource._sort = sortExpressions;\n                }\n                items.splice(idx, 1);\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        sort: function(expr) {\n            var sortable = this.options.sortable;\n            var allowUnsort = sortable === true || sortable.allowUnsort;\n            var skipExpr = allowUnsort && expr.dir === \"asc\";\n\n            var expressions = (this.dataSource.sort() || []);\n            var result = removeExpr(expressions, expr.field);\n\n            if (skipExpr && expressions.length !== result.length) {\n                expr = null;\n            }\n\n            if (expr) {\n                result.push(expr);\n            }\n\n            this.dataSource.sort(result);\n        },\n\n        refresh: function() {\n            var html = \"\";\n            var items = this.dataSource[this.options.setting]();\n            var length = items.length;\n            var idx = 0;\n            var item;\n\n            if (length) {\n                for (; idx < length; idx++) {\n                    item = items[idx];\n                    item = item.name === undefined ? { name: item } : item;\n\n                    html += this.template(extend({ sortIcon: this._sortIcon(item.name) }, item));\n                }\n            } else {\n                html = this.emptyTemplate(this.options.messages.empty);\n            }\n\n            this.element.html(html);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.element.off(NS);\n\n            if (this.sortable) {\n                this.sortable.destroy();\n            }\n\n            if (this.fieldMenu) {\n                this.fieldMenu.destroy();\n            }\n\n            this.element = null;\n            this._refreshHandler = null;\n        },\n\n        _sortIcon: function(name) {\n            var expressions = this.dataSource.sort();\n            var expr = sortExpr(expressions, getName(name));\n            var icon = \"\";\n\n            if (expr) {\n                icon = \"k-i-sort-\" + expr.dir;\n            }\n\n            return icon;\n        }\n    });\n\n    kendo.ui.PivotSettingTargetV2 = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(options.dataSource);\n\n            that._refreshHandler = that.refresh.bind(that);\n            that.dataSource.first(CHANGE, that._refreshHandler);\n\n            that.template = kendo.template(that.options.template);\n\n            that._sortable();\n\n            that.element.on(\"click\" + NS, \".k-i-close-circle\", function(e) {\n                var target = $(e.target);\n                var parent = target.closest(\".k-chip\");\n                var name = parent.find(\".k-chip-label\").text();\n\n                if (!name) {\n                    return;\n                }\n\n                that.remove(name);\n                parent.remove();\n                that.trigger(\"remove\", { name: name });\n            });\n\n            if (options.filterable || options.sortable) {\n                that.fieldMenu = new ui.PivotFieldMenuV2(that.element, {\n                    messages: that.options.messages.fieldMenu,\n                    filterable: options.filterable,\n                    filter: \".k-i-more-vertical\",\n                    sortable: options.sortable,\n                    dataSource: that.dataSource\n                });\n            }\n\n            that.refresh();\n        },\n\n        events: [\"remove\"],\n\n        options: {\n            name: \"PivotSettingTargetV2\",\n            template: null,\n            filterable: false,\n            sortable: false,\n            setting: \"columns\",\n            enabled: true,\n            messages: {\n                empty: \"Drop Fields Here\"\n            }\n        },\n        setDataSource: function(dataSource) {\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.dataSource = this.options.dataSource = dataSource;\n\n            if (this.fieldMenu) {\n                this.fieldMenu.setDataSource(dataSource);\n            }\n            dataSource.first(CHANGE, this._refreshHandler);\n\n            this.refresh();\n        },\n\n        _applyState: function() {\n            if (this._sortState !== undefined) {\n                this.dataSource._sort = this._sortState;\n                this._sortState = undefined;\n            }\n\n            if (this._stateFilter !== undefined) {\n                this.dataSource._filter = this._stateFilter;\n                this._stateFilter = undefined;\n            }\n\n            this.dataSource[\"_\" + this.options.setting] = this.options.setting === \"measures\" ? normalizeMeasures(this._savedState) : normalizeMembers(this._savedState);\n        },\n\n        _cancelChanges: function() {\n            this._sortState = undefined;\n            this._stateFilter = undefined;\n            this._savedState = kendo.deepExtend([], this._initialState);\n            this._redraw();\n        },\n\n        _state: function(newState, modifyInit) {\n            var that = this;\n\n            if (!newState) {\n                return that._savedState || [];\n            } else {\n                if (!that._savedState || modifyInit) {\n                    that._initialState = kendo.deepExtend([], newState);\n                }\n                that._savedState = kendo.deepExtend([], newState);\n            }\n        },\n\n        _sortable: function() {\n            var that = this;\n\n            this.sortable = this.element.kendoSortable({\n                connectWith: this.options.connectWith,\n                hint: that.options.hint,\n                filter: \">*:not(.k-empty)\",\n                cursor: \"move\",\n                start: function(e) {\n                    e.item.focus().blur();\n                },\n                change: function(e) {\n                    var name = e.item.find(\".k-chip-label\").text();\n\n                    if (e.action == \"receive\") {\n                        that.add(name);\n                    } else if (e.action == \"remove\") {\n                        that.remove(name);\n                    } else if (e.action == \"sort\") {\n                        that.move(name, e.newIndex);\n                    }\n                }\n            }).data(\"kendoSortable\");\n        },\n\n        add: function(name) {\n            var items = this._state();\n            var i, l;\n\n            name = Array.isArray(name) ? name.slice(0) : [name];\n\n            for (i = 0, l = name.length; i < l; i++) {\n                if (indexOf(name[i], items) !== -1) {\n                    name.splice(i, 1);\n                    i -= 1;\n                    l -= 1;\n                }\n            }\n\n            if (name.length) {\n                items = items.concat(name);\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        move: function(name, index) {\n            var items = this._state();\n            var idx = indexOf(name, items);\n\n            if (idx > -1) {\n                name = items.splice(idx, 1)[0];\n\n                items.splice(index, 0, name);\n\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        remove: function(name) {\n            var items = this._state();\n            var idx = indexOf(name, items);\n            var sortExpressions = this.dataSource.sort();\n            var filter = this.dataSource.filter();\n\n            if (idx > -1) {\n                if (filter) {\n                    filter.filters = removeExpr(filter.filters, name);\n                    this._savedFilter = this.dataSource._filter;\n                    this._savedFilter.filters = filter.filters;\n                    if (!filter.filters.length) {\n                        this._savedFilter = null;\n                    }\n                }\n                if (sortExpressions) {\n                    sortExpressions = removeExpr(sortExpressions, name);\n                    this._sortState = sortExpressions;\n                }\n                items.splice(idx, 1);\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        _emptyState: function(enable) {\n            var that = this;\n            if (enable) {\n                that.element.html(this.options.messages.empty)\n                    .addClass(\"k-settings-description\")\n                    .removeClass(\"k-chip-list\");\n            } else {\n                that.element\n                    .removeClass(\"k-settings-description\")\n                    .addClass(\"k-chip-list\");\n            }\n        },\n\n        _redraw: function() {\n            var items = this._state() || [];\n            this._emptyState(!items.length);\n            if (items.length) {\n                this.element.html(this._targetsHTML(items));\n            }\n        },\n\n        _targetsHTML: function(items) {\n            var item;\n            var html = \"\";\n            var idx = 0;\n            var options = this.options;\n            var enabled = false;\n\n            if (this.options.setting != \"measures\") {\n                enabled = options.filterable || options.sortable;\n            }\n\n            if (items.length) {\n                for (; idx < items.length; idx++) {\n                    item = items[idx];\n                    item = item.name === undefined ? { name: item } : item;\n\n                    html += this.template({ name: item.name, menuenabled: enabled });\n                }\n            }\n            return html;\n        },\n\n        refresh: function() {\n            if (this.dataSource._preventRefresh) {\n                return;\n            }\n            var items = this.dataSource[this.options.setting]();\n            this._emptyState(!this._state().length);\n            this._state(items, true);\n            if (items.length) {\n                this.element.html(this._targetsHTML(items));\n            }\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.element.off(NS);\n\n            if (this.sortable) {\n                this.sortable.destroy();\n            }\n\n            if (this.fieldMenu) {\n                this.fieldMenu.destroy();\n            }\n\n            this.element = null;\n            this._refreshHandler = null;\n        }\n    });\n\n    var PivotConfiguratorButton = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            that.element = $(element);\n\n            that._element();\n            that._attachEvents();\n        },\n\n        options: {\n            name: \"PivotConfiguratorButton\",\n            text: \"Change settings\",\n            configurator: \"\"\n        },\n\n        destroy: function() {\n            this.element.off(NS);\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            kendo.deepExtend(that.options, options);\n            this.init(this.element, this.options);\n        },\n\n        toggle: function() {\n            var attr = kendo.attr(\"role\");\n            var pivotEl = this.element\n                .closest(\"[\" + attr + \"=pivotcontainer]\")\n                .find(\"[\" + attr + \"=pivotgridv2]\");\n            var pivot;\n\n            $(\"#\" + this.options.configurator).toggleClass(\"k-hidden\");\n\n            if (pivotEl.length) {\n                pivot = pivotEl.getKendoPivotGridV2();\n                pivot._setContentWidth();\n                pivot._updateDimensions();\n            }\n        },\n\n        _attachEvents: function() {\n            this.element.on(\"click\" + NS, this.toggle.bind(this));\n        },\n\n        _element: function() {\n            var options = this.options;\n            this.element.addClass(\"k-pivotgrid-configurator-button\");\n            this.element.html(kendo.format(\"<span>{0}<span class='k-icon k-i-gear k-color-inherit'></span></span>\",options.text));\n        }\n    });\n\n    var PivotContainer = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            that.element = $(element);\n            that.options = options;\n\n\n            that._addClasses();\n        },\n\n        options: {\n            name: \"PivotContainer\",\n            configuratorPosition: \"left\"\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            kendo.deepExtend(that.options, options);\n            this.init(this.element, this.options);\n        },\n\n        _addClasses: function() {\n            var options = this.options;\n            var className;\n            this.element.removeClass(\"k-flex-row k-flex-row-reverse k-flex-column k-flex-column-reverse\");\n\n            switch (options.configuratorPosition) {\n                case \"right\":\n                    className = \"k-flex-row\";\n                    break;\n                case \"left\":\n                    className = \"k-flex-row-reverse\";\n                    break;\n                case \"bottom\":\n                    className = \"k-flex-column\";\n                    break;\n                case \"top\":\n                    className = \"k-flex-column-reverse\";\n                    break;\n                default:\n                    className = \"k-flex-row\";\n            }\n\n            this.element\n                .addClass(\"k-d-flex k-pos-relative\")\n                .addClass(className);\n        }\n    });\n\n    var PivotGridV2 = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._dataSource();\n\n            that._bindConfigurator();\n\n            that._wrapper();\n\n            that._columnHeadersWrapper = $('<div class=\"k-pivotgrid-column-headers\"></div>');\n            that._rowHeadersWrapper = $('<div class=\"k-pivotgrid-row-headers\"></div>');\n            that._contentWrapper = $('<div class=\"k-pivotgrid-values\"></div>');\n\n            that.wrapper.append(that._columnHeadersWrapper);\n            that.wrapper.append(that._rowHeadersWrapper);\n            that.wrapper.append(that._contentWrapper);\n\n            that._columnBuilder = new ColumnRowBuilder( { template: this.options.columnHeaderTemplate, axes: \"columns\" });\n            that._rowBuilder = new ColumnRowBuilder( { template: this.options.rowHeaderTemplate, axes: \"rows\" });\n            that._contentBuilder = new ContentBuilderV2( { template: this.options.dataCellTemplate || DATACELL_TEMPLATE });\n\n            that._scrollable();\n            that._rowHeadersWrapper\n                .add(that._columnHeadersWrapper)\n                .on(\"click\", \"span.k-icon\", function() {\n                    var button = $(this);\n                    var path = button.parent().attr(kendo.attr(\"key\"));\n                    var expanded = button.hasClass(\"k-i-arrow-chevron-up\");\n                    var isRow = button.closest(\".k-pivotgrid-row-headers\").length !== 0;\n                    var paths = path.split(\",\");\n                    var eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n\n                    if (that.trigger(eventName, { path: paths, axis: isRow ? \"rows\" : \"columns\" })) {\n                        return;\n                    }\n\n                    var reducerPayLoad = {\n                        type: \"HEADERS_ACTION_TOGGLE\",\n                        payload: paths,\n                        tree: isRow ? that._rowBuilder.getTree() : that._columnBuilder.getTree()\n                    };\n                    var currentAxes = isRow ? that.dataSource._rows : that.dataSource._columns;\n                    var newHeaders = headersReducer(currentAxes, reducerPayLoad);\n\n                    that.dataSource._preventRefresh = true;\n\n                    if (isRow) {\n                        that.dataSource.rows(newHeaders);\n                    } else {\n                        that.dataSource.columns(newHeaders);\n                    }\n                 });\n\n            if (that.options.autoBind) {\n                that.dataSource.fetch();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            DATABINDING,\n            DATABOUND,\n            EXPANDMEMBER,\n            COLLAPSEMEMBER\n        ],\n\n        options: {\n            name: \"PivotGridV2\",\n            autoBind: true,\n            height: null,\n            columnWidth: null,\n            configurator: \"\",\n            columnHeaderTemplate: null,\n            rowHeaderTemplate: null,\n            dataCellTemplate: null\n        },\n\n        destroy: function() {\n            var that = this;\n            Widget.fn.destroy.call(that);\n\n            if (that._windowResizeHandler) {\n                $(window).off(RESIZE + NS, that._windowResizeHandler);\n                that._windowResizeHandler = null;\n            }\n        },\n\n        _dataSource: function() {\n            var that = this;\n            var dataSource = that.options.dataSource;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            if (that.dataSource && this._refreshHandler) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler)\n                               .unbind(PROGRESS, that._progressHandler)\n                               .unbind(ERROR, that._errorHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(dataSource)\n                                   .bind(CHANGE, that._refreshHandler)\n                                   .bind(PROGRESS, that._progressHandler)\n                                   .bind(ERROR, that._errorHandler);\n        },\n\n        _resize: function() {\n            var that = this;\n            that.wrapper[0].style.setProperty('--kendo-scrollbar-width', kendo.format(\"{0}px\", getScollWidth()));\n        },\n\n        _scrollable: function() {\n            var that = this;\n            var columnsHeader = that._columnHeadersWrapper;\n            var rowsHeader = that._rowHeadersWrapper;\n\n            that._resize();\n            that._windowResizeHandler = that._resize.bind(that);\n\n            that._contentWrapper.scroll(function() {\n                kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                rowsHeader.scrollTop(this.scrollTop);\n            });\n\n            rowsHeader.bind(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n            $(window).on(RESIZE + NS, that._windowResizeHandler);\n        },\n\n        _wheelScroll: function(e) {\n            if (e.ctrlKey) {\n                return;\n            }\n\n            var delta = kendo.wheelDeltaY(e);\n            var scrollTop = this._contentWrapper.scrollTop();\n\n            if (delta) {\n                e.preventDefault();\n                $(e.currentTarget).one(\"wheel\" + NS, false);\n\n                this._rowHeadersWrapper.scrollTop(scrollTop + (-delta));\n                this._contentWrapper.scrollTop(scrollTop + (-delta));\n            }\n        },\n\n        _wrapper: function() {\n            var height = this.options.height;\n\n            this.wrapper = this.element.addClass(\"k-widget k-pivotgrid\");\n\n            this.wrapper.append('<span class=\"k-pivotgrid-empty-cell\" />');\n\n            if (height) {\n                this.wrapper.css(\"height\", height);\n            }\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.wrapper, toggle);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _updateDimensions: function() {\n            var that = this;\n            that.wrapper.css({\n                \"grid-template-columns\": kendo.format(\"{0}px 1fr\", that._rowHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetWidth),\n                \"grid-template-rows\": kendo.format(\"{0}px 1fr\", that._columnHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetHeight),\n            });\n        },\n\n        _setContentWidth: function() {\n            if (!this.options.columnWidth) {\n                return;\n            }\n            var contentTable = this._contentWrapper.find(\"table\");\n            var columnTable = this._columnHeadersWrapper.children(\"table\");\n\n            var rowLength = contentTable.children(\"colgroup\").children().length;\n\n            var calculatedWidth = rowLength * this.options.columnWidth;\n            var minWidth = Math.ceil((calculatedWidth / this._contentWrapper.width()) * 100);\n\n            if (minWidth < 100) {\n                minWidth = 100;\n            }\n\n            contentTable.add(columnTable).css(\"width\", minWidth + \"%\");\n        },\n\n        _bindConfigurator: function() {\n            var configurator = this.options.configurator;\n            if (configurator) {\n                $(configurator).kendoPivotConfiguratorV2(\"setDataSource\", this.dataSource);\n            }\n        },\n\n        cellInfoByElement: function(element) {\n            element = $(element);\n\n            return this.cellInfo(element.index(), element.parent(\"tr\").index());\n        },\n\n        cellInfo: function(columnIndex, rowIndex) {\n            var contentBuilder = this._contentBuilder;\n            var dataIndex;\n            var dataItem;\n\n            if (columnIndex >= contentBuilder.columnsCount || columnIndex < 0 ||\n                rowIndex >= contentBuilder.rowsCount || rowIndex < 0) {\n                return null;\n            }\n\n            dataIndex = rowIndex * contentBuilder.columnsCount + columnIndex;\n            dataItem = contentBuilder.hash[dataIndex < 0 ? 0 : dataIndex];\n\n            return {\n                columnTuple: dataItem.columnTuple,\n                rowTuple: dataItem.rowTuple,\n                dataItem: dataItem.data\n            };\n        },\n\n        refresh: function() {\n            var that = this;\n\n            var dataSource = that.dataSource;\n\n            if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                return;\n            }\n\n            that._columnBuilder.setTuples(dataSource._columnTuples);\n            that._columnHeadersWrapper.html(that._columnBuilder.build());\n\n            that._rowBuilder.setTuples(dataSource._rowTuples);\n            that._rowHeadersWrapper.html(that._rowBuilder.build());\n\n            that._contentBuilder.setRowColumnInfo({\n                columnHeaderLeafs: that._columnBuilder.getHeaderLeafs(),\n                rowHeaderLeafs: that._rowBuilder.getHeaderLeafs(),\n                columnHeaderBreadth: that._columnBuilder.getBreadth(),\n                rowHeaderDepth: that._rowBuilder.getBreadth(),\n                data: dataSource._view\n            });\n\n            that._contentWrapper.html(that._contentBuilder.build());\n\n            that._setContentWidth();\n            that._updateDimensions();\n\n            that._progress(false);\n\n            that.trigger(DATABOUND);\n        }\n    });\n\n    ui.plugin(PivotConfiguratorButton);\n    ui.plugin(PivotContainer);\n    ui.plugin(PivotGridV2);\n\n    var PivotGrid = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            var columnBuilder;\n            var rowBuilder;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._dataSource();\n\n            that._bindConfigurator();\n\n            that._wrapper();\n            that._createLayout();\n\n            that._columnBuilder = columnBuilder = new ColumnBuilder();\n            that._rowBuilder = rowBuilder = new RowBuilder();\n            that._contentBuilder = new ContentBuilder();\n\n            that._templates();\n\n            that.columnsHeader\n                .add(that.rowsHeader)\n                .on(\"click\", \"span.k-icon\", function() {\n                    var button = $(this);\n                    var builder = columnBuilder;\n                    var action = \"expandColumn\";\n                    var eventName;\n                    var path = button.attr(kendo.attr(\"path\"));\n                    var eventArgs = {\n                        axis: \"columns\",\n                        path: $.parseJSON(path)\n                    };\n\n                    if (button.parent().is(\"td\")) {\n                        builder = rowBuilder;\n                        action = \"expandRow\";\n                        eventArgs.axis = \"rows\";\n                    }\n\n                    var expanded = button.hasClass(STATE_EXPANDED);\n                    var metadata = builder.metadata[path];\n                    var request = metadata.expanded === undefined;\n\n                    eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n                    eventArgs.childrenLoaded = metadata.maxChildren > metadata.children;\n\n                    if (that.trigger(eventName, eventArgs)) {\n                        return;\n                    }\n\n                    builder.metadata[path].expanded = !expanded;\n\n                    button.toggleClass(STATE_EXPANDED, !expanded)\n                          .toggleClass(STATE_COLLAPSED, expanded);\n\n                    if (!expanded && request) {\n                        that.dataSource[action](eventArgs.path);\n                    } else {\n                        that.refresh();\n                    }\n                });\n\n            that._scrollable();\n\n            if (that.options.autoBind) {\n                that.dataSource.fetch();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            DATABINDING,\n            DATABOUND,\n            EXPANDMEMBER,\n            COLLAPSEMEMBER\n        ],\n\n        options: {\n            name: \"PivotGrid\",\n            autoBind: true,\n            reorderable: true,\n            filterable: false,\n            sortable: false,\n            height: null,\n            columnWidth: 100,\n            configurator: \"\",\n            columnHeaderTemplate: null,\n            rowHeaderTemplate: null,\n            dataCellTemplate: null,\n            kpiStatusTemplate: null,\n            kpiTrendTemplate: null,\n            messages: {\n                measureFields: \"Drop Data Fields Here\",\n                columnFields: \"Drop Column Fields Here\",\n                rowFields: \"Drop Rows Fields Here\"\n            }\n        },\n\n        _templates: function() {\n            var columnTemplate = this.options.columnHeaderTemplate;\n            var rowTemplate = this.options.rowHeaderTemplate;\n            var dataTemplate = this.options.dataCellTemplate;\n            var kpiStatusTemplate = this.options.kpiStatusTemplate;\n            var kpiTrendTemplate = this.options.kpiTrendTemplate;\n\n            this._columnBuilder.template = kendo.template(columnTemplate || HEADER_TEMPLATE, { useWithBlock: !!columnTemplate });\n            this._contentBuilder.dataTemplate = kendo.template(dataTemplate || DATACELL_TEMPLATE, { useWithBlock: !!dataTemplate });\n            this._contentBuilder.kpiStatusTemplate = kendo.template(kpiStatusTemplate || KPISTATUS_TEMPLATE, { useWithBlock: !!kpiStatusTemplate });\n            this._contentBuilder.kpiTrendTemplate = kendo.template(kpiTrendTemplate || KPITREND_TEMPLATE, { useWithBlock: !!kpiTrendTemplate });\n            this._rowBuilder.template = kendo.template(rowTemplate || HEADER_TEMPLATE, { useWithBlock: !!rowTemplate });\n        },\n\n        _bindConfigurator: function() {\n            var configurator = this.options.configurator;\n            if (configurator) {\n                $(configurator).kendoPivotConfigurator(\"setDataSource\", this.dataSource);\n            }\n        },\n\n        cellInfoByElement: function(element) {\n            element = $(element);\n\n            return this.cellInfo(element.index(), element.parent(\"tr\").index());\n        },\n\n        cellInfo: function(columnIndex, rowIndex) {\n            var contentBuilder = this._contentBuilder;\n            var columnInfo = contentBuilder.columnIndexes[columnIndex || 0];\n            var rowInfo = contentBuilder.rowIndexes[rowIndex || 0];\n            var dataIndex;\n\n            if (!columnInfo || !rowInfo) {\n                return null;\n            }\n\n            dataIndex = (rowInfo.index * contentBuilder.rowLength) + columnInfo.index;\n\n            return {\n                columnTuple: columnInfo.tuple,\n                rowTuple: rowInfo.tuple,\n                measure: columnInfo.measure || rowInfo.measure,\n                dataItem: this.dataSource.view()[dataIndex]\n            };\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            if (this.measuresTarget) {\n                this.measuresTarget.setDataSource(dataSource);\n            }\n\n            if (this.rowsTarget) {\n                this.rowsTarget.setDataSource(dataSource);\n            }\n\n            if (this.columnsTarget) {\n                this.columnsTarget.setDataSource(dataSource);\n            }\n\n            this._bindConfigurator();\n\n            if (this.options.autoBind) {\n                dataSource.fetch();\n            }\n        },\n\n        setOptions: function(options) {\n            Widget.fn.setOptions.call(this, options);\n\n            this._templates();\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            clearTimeout(this._headerReflowTimeout);\n        },\n\n        _dataSource: function() {\n            var that = this;\n            var dataSource = that.options.dataSource;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            if (that.dataSource && this._refreshHandler) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler)\n                               .unbind(STATERESET, that._stateResetHandler)\n                               .unbind(PROGRESS, that._progressHandler)\n                               .unbind(ERROR, that._errorHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n                that._stateResetHandler = that._stateReset.bind(that);\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSource.create(dataSource)\n                                   .bind(CHANGE, that._refreshHandler)\n                                   .bind(PROGRESS, that._progressHandler)\n                                   .bind(STATERESET, that._stateResetHandler)\n                                   .bind(ERROR, that._errorHandler);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _stateReset: function() {\n            this._columnBuilder.reset();\n            this._rowBuilder.reset();\n        },\n\n        _wrapper: function() {\n            var height = this.options.height;\n\n            this.wrapper = this.element.addClass(\"k-widget k-pivot\");\n\n            if (height) {\n                this.wrapper.css(\"height\", height);\n            }\n        },\n\n        _measureFields: function() {\n            this.measureFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-settings-measures\");\n\n            this.measuresTarget = this._createSettingTarget(this.measureFields, {\n                setting: \"measures\",\n                messages: {\n                    empty: this.options.messages.measureFields\n                }\n            });\n        },\n\n        _createSettingTarget: function(element, options) {\n            var template;\n            var sortable = options.sortable;\n            var icons = '';\n\n            if (sortable) {\n                icons += '#if (data.sortIcon) {#';\n                icons += '<span class=\"k-chip-action\"><span class=\"k-icon ${data.sortIcon}-sm\"></span></span>';\n                icons += '#}#';\n            }\n\n            if (options.filterable || sortable) {\n                icons += '<span class=\"k-setting-fieldmenu k-chip-action\"><span class=\"k-icon k-i-more-vertical\"></span></span>';\n            }\n            if (this.options.reorderable) {\n                icons += '<span class=\"k-setting-delete k-chip-action\"><span class=\"k-icon k-i-close\"></span></span>';\n            }\n\n            template = ''\n                + '<span class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" tabindex=\"0\" data-' + kendo.ns + 'name=\"${data.name}\">'\n                    + '<span class=\"k-chip-content\">'\n                        + '<span class=\"k-chip-text\">${data.name}</span>'\n                    + '</span>'\n                    + '<span class=\"k-chip-actions k-field-actions\">' + icons + '</span>'\n                + '</span>';\n\n            return new kendo.ui.PivotSettingTarget(element, $.extend({\n                dataSource: this.dataSource,\n                template: template,\n                emptyTemplate: '<span class=\"k-empty\">${data}</span>',\n                enabled: this.options.reorderable\n            }, options));\n        },\n\n        _initSettingTargets: function() {\n            this.columnsTarget = this._createSettingTarget(this.columnFields, {\n                connectWith: this.rowFields,\n                setting: \"columns\",\n                filterable: this.options.filterable,\n                sortable: this.options.sortable,\n                messages: {\n                    empty: this.options.messages.columnFields,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n\n            this.rowsTarget = this._createSettingTarget(this.rowFields, {\n                connectWith: this.columnFields,\n                setting: \"rows\",\n                filterable: this.options.filterable,\n                sortable: this.options.sortable,\n                messages: {\n                    empty: this.options.messages.rowFields,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n        },\n\n        _createLayout: function() {\n            var that = this;\n            var layoutTable = $(LAYOUT_TABLE);\n            var leftContainer = layoutTable.find(\".k-pivot-rowheaders\");\n            var rightContainer = layoutTable.find(\".k-pivot-table\");\n            var gridWrapper = $(DIV).addClass(\"k-grid k-widget\");\n\n            that._measureFields();\n            that.columnFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-settings-columns\");\n\n            that.rowFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-settings-rows\");\n            that.columnsHeader = $('<div class=\"k-grid-header-wrap\" />')\n                                    .wrap('<div class=\"k-grid-header\" />');\n\n            that.columnsHeader.parent().css(\"padding-right\", kendo.support.scrollbar());\n\n            that.rowsHeader = $('<div class=\"k-grid k-widget k-alt\"/>');\n            that.content = $('<div class=\"k-grid-content\" />');\n\n            leftContainer.append(that.measureFields);\n            leftContainer.append(that.rowFields);\n            leftContainer.append(that.rowsHeader);\n\n            gridWrapper.append(that.columnsHeader.parent());\n            gridWrapper.append(that.content);\n\n            rightContainer.append(that.columnFields);\n            rightContainer.append(gridWrapper);\n\n            that.wrapper.append(layoutTable);\n\n            that.columnsHeaderTree = new kendo.dom.Tree(that.columnsHeader[0]);\n            that.rowsHeaderTree = new kendo.dom.Tree(that.rowsHeader[0]);\n            that.contentTree = new kendo.dom.Tree(that.content[0]);\n\n            that._initSettingTargets();\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.wrapper, toggle);\n        },\n\n        _resize: function() {\n            if (this.content[0].firstChild) {\n                this._setSectionsWidth();\n                this._setSectionsHeight();\n                this._setContentWidth();\n                this._setContentHeight();\n                this._columnHeaderReflow();\n            }\n        },\n\n        _columnHeaderReflow: function() {\n            var columnTable = this.columnsHeader.children(\"table\");\n\n            if (!kendo.support.browser.mozilla) {\n                return;\n            }\n\n            clearTimeout(this._headerReflowTimeout);\n\n            columnTable.css(\"table-layout\", \"auto\");\n\n            this._headerReflowTimeout = setTimeout(function() {\n                columnTable.css(\"table-layout\", \"\");\n            });\n        },\n\n        _setSectionsWidth: function() {\n            var rowsHeader = this.rowsHeader;\n            var leftColumn = rowsHeader.parent(\".k-pivot-rowheaders\").width(AUTO);\n            var width;\n\n            width = Math.max(outerWidth(this.measureFields), outerWidth(this.rowFields));\n            width = Math.max(rowsHeader.children(\"table\").width(), width);\n\n            leftColumn.width(width);\n        },\n\n        _setSectionsHeight: function() {\n            var measureFieldsHeight = this.measureFields.height(AUTO).height();\n            var columnFieldsHeight = this.columnFields.height(AUTO).height();\n            var rowFieldsHeight = this.rowFields.height(AUTO).innerHeight();\n            var columnsHeight = this.columnsHeader.height(AUTO).innerHeight();\n\n            var padding = rowFieldsHeight - this.rowFields.height();\n\n            var firstRowHeight = columnFieldsHeight > measureFieldsHeight ? columnFieldsHeight : measureFieldsHeight;\n            var secondRowHeight = columnsHeight > rowFieldsHeight ? columnsHeight : rowFieldsHeight;\n\n            this.measureFields.height(firstRowHeight);\n            this.columnFields.height(firstRowHeight);\n            this.rowFields.height(secondRowHeight - padding);\n            this.columnsHeader.height(secondRowHeight);\n        },\n\n        _setContentWidth: function() {\n            var contentTable = this.content.find(\"table\");\n            var columnTable = this.columnsHeader.children(\"table\");\n\n            var rowLength = contentTable.children(\"colgroup\").children().length;\n\n            var calculatedWidth = rowLength * this.options.columnWidth;\n            var minWidth = Math.ceil((calculatedWidth / this.content.width()) * 100);\n\n            if (minWidth < 100) {\n                minWidth = 100;\n            }\n\n            contentTable.add(columnTable).css(\"width\", minWidth + \"%\");\n\n            this._resetColspan(columnTable);\n        },\n\n        _setContentHeight: function() {\n            var that = this;\n            var content = that.content;\n            var rowsHeader = that.rowsHeader;\n            var innerHeight = that.wrapper.innerHeight();\n            var scrollbar = kendo.support.scrollbar();\n            var skipScrollbar = content[0].offsetHeight === content[0].clientHeight;\n            var height = that.options.height;\n\n            if (that.wrapper.is(\":visible\")) {\n                if (!innerHeight || !height) {\n                    if (skipScrollbar) {\n                        scrollbar = 0;\n                    }\n\n                    content.height(\"auto\");\n                    rowsHeader.height(content.height() - scrollbar);\n                    return;\n                }\n\n                innerHeight -= outerHeight(that.columnFields);\n                innerHeight -= outerHeight(that.columnsHeader.parent());\n\n                if (innerHeight <= scrollbar * 2) { // do not set height if proper scrollbar cannot be displayed\n                    innerHeight = scrollbar * 2 + 1;\n                    if (!skipScrollbar) {\n                        innerHeight += scrollbar;\n                    }\n                }\n\n                content.height(innerHeight);\n\n                if (skipScrollbar) {\n                    scrollbar = 0;\n                }\n\n                rowsHeader.height(innerHeight - scrollbar);\n            }\n        },\n\n        _resetColspan: function(columnTable) {\n            var that = this;\n            var cell = columnTable.children(\"tbody\").children().first().children().first();\n\n            if (that._colspan === undefined) {\n                that._colspan = cell.attr(\"colspan\");\n            }\n\n            cell.attr(\"colspan\", 1);\n\n            clearTimeout(that._layoutTimeout);\n\n            that._layoutTimeout = setTimeout(function() {\n                cell.attr(\"colspan\", that._colspan);\n                that._colspan = undefined;\n            });\n        },\n\n        _axisMeasures: function(axis) {\n            var result = [];\n            var dataSource = this.dataSource;\n            var measures = dataSource.measures();\n            var hasMeasure = measures.length > 1 || (measures[0] && measures[0].type);\n\n            if (dataSource.measuresAxis() === axis) {\n                if (dataSource[axis]().length === 0 || hasMeasure) {\n                    result = measures;\n                }\n            }\n\n            return result;\n        },\n\n        items: function() {\n            return [];\n        },\n\n        refresh: function() {\n            var that = this;\n            var dataSource = that.dataSource;\n\n            var axes = dataSource.axes();\n            var columns = (axes.columns || {}).tuples || [];\n            var rows = (axes.rows || {}).tuples || [];\n\n            var columnBuilder = that._columnBuilder;\n            var rowBuilder = that._rowBuilder;\n\n            var columnAxis = {};\n            var rowAxis = {};\n\n            if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                return;\n            }\n\n            columnBuilder.measures = that._axisMeasures(AXIS_COLUMNS);\n            rowBuilder.measures = that._axisMeasures(AXIS_ROWS);\n\n            that.columnsHeaderTree.render(columnBuilder.build(columns));\n            that.rowsHeaderTree.render(rowBuilder.build(rows));\n\n            columnAxis = {\n                indexes: columnBuilder._indexes,\n                measures: columnBuilder.measures,\n                metadata: columnBuilder.metadata\n            };\n\n            rowAxis = {\n                indexes: rowBuilder._indexes,\n                measures: rowBuilder.measures,\n                metadata: rowBuilder.metadata\n            };\n\n            that.contentTree.render(that._contentBuilder.build(dataSource.view(), columnAxis, rowAxis));\n\n            that._resize();\n\n            if (that.touchScroller) {\n                that.touchScroller.contentResized();\n            } else {\n                var touchScroller = kendo.touchScroller(that.content);\n\n                if (touchScroller && touchScroller.movable) {\n                    that.touchScroller = touchScroller;\n\n                    touchScroller.movable.bind(\"change\", function(e) {\n                        kendo.scrollLeft(that.columnsHeader, -e.sender.x);\n                        that.rowsHeader.scrollTop(-e.sender.y);\n                    });\n                }\n            }\n\n            that._progress(false);\n\n            that.trigger(DATABOUND);\n        },\n\n        _scrollable: function() {\n            var that = this;\n            var columnsHeader = that.columnsHeader;\n            var rowsHeader = that.rowsHeader;\n\n            that.content.on(\"scroll\", function() {\n                kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                rowsHeader.scrollTop(this.scrollTop);\n            });\n\n            rowsHeader.on(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n        },\n\n        _wheelScroll: function(e) {\n            if (e.ctrlKey) {\n                return;\n            }\n\n            var delta = kendo.wheelDeltaY(e);\n            var scrollTop = this.content.scrollTop();\n\n            if (delta) {\n                e.preventDefault();\n                //In Firefox DOMMouseScroll event cannot be canceled\n                $(e.currentTarget).one(\"wheel\" + NS, false);\n\n                this.rowsHeader.scrollTop(scrollTop + (-delta));\n                this.content.scrollTop(scrollTop + (-delta));\n            }\n        }\n    });\n\n    var element = kendo.dom.element;\n    var htmlNode = kendo.dom.html;\n\n    var createMetadata = function(levelNum, memberIdx) {\n       return {\n            maxChildren: 0,\n            children: 0,\n            maxMembers: 0,\n            members: 0,\n            measures: 1,\n            levelNum: levelNum,\n            parentMember: memberIdx !== 0\n        };\n    };\n\n    var buildPath = function(tuple, index) {\n        var path = [];\n        var idx = 0;\n\n        for (; idx <= index; idx++) {\n            path.push(tuple.members[idx].name);\n        }\n\n        return path;\n    };\n\n    var tupleName = function(tuple, index) {\n        var name = \"\";\n        var idx = 0;\n\n        for (; idx <= index; idx++) {\n            name += tuple.members[idx].name;\n        }\n\n        return name;\n    };\n\n    var ContentBuilderV2 = Class.extend({\n        init: function(options) {\n            this.template = kendo.template(options.template);\n            this.hash = [];\n        },\n\n        setRowColumnInfo: function(options) {\n            this.data = options.data;\n            this.columnHeaderLeafs = options.columnHeaderLeafs;\n            this.rowHeaderLeafs = options.rowHeaderLeafs;\n            this.columnHeaderBreadth = options.columnHeaderBreadth;\n            this.rowHeaderDepth = options.rowHeaderDepth;\n            this.hash.length = 0;\n        },\n\n        addColElements: function(count) {\n            var html = \"\";\n\n            for (var index = 0; index < count; index++) {\n                html += \"<col>\";\n            }\n\n            this.table.find(\"colgroup\").append(html);\n        },\n\n        addRowElements: function(data) {\n            var that = this;\n            var body = that.table.find(\"tbody\");\n            var row;\n\n            for (var index = 0; index < data.length; index++) {\n                row = $('<tr class=\"k-pivotgrid-row\"></tr>');\n                body.append(row);\n                that.addColumCell(row, data[index], index);\n            }\n\n            this.rowsCount = data.length;\n        },\n\n        addColumCell: function(rowEl, rowItem, rowIndex) {\n            var that = this;\n            for (var index = 0; index < rowItem.cells.length; index++) {\n                var cell = rowItem.cells[index];\n                if (cell) {\n                    var cellEl = $('<td class=\"k-pivotgrid-cell\"></td>');\n                    if (this.rowHeaderLeafs[rowIndex].total || this.columnHeaderLeafs[index].total) {\n                        cellEl.addClass(\"k-pivotgrid-header-total\");\n                    }\n                    cellEl.append(that.template({\n                        dataItem: cell.data,\n                        rowTuple: cell.rowTuple,\n                        columnTuple: cell.columnTuple\n                    }));\n                    this.hash.push(cell);\n                    rowEl.append(cellEl);\n                }\n            }\n        },\n\n        build: function() {\n            var data = toData((this.data || []).slice(), this.columnHeaderLeafs, this.rowHeaderLeafs, this.columnHeaderBreadth, this.rowHeaderDepth);\n            var that = this;\n\n            var table = $(\"<table class='k-pivotgrid-table'><colgroup></colgroup><tbody class='k-pivotgrid-tbody'></tbody></table>\");\n\n            that.table = table;\n            that.addColElements(this.columnHeaderLeafs.length);\n            that.addRowElements(data);\n            this.rowsCount = data.length;\n            this.columnsCount = this.columnHeaderLeafs.length;\n\n            return that.table;\n        }\n    });\n\n    var ColumnRowBuilder = Class.extend({\n        init: function(options) {\n            this.tuples = options.tuples;\n            this.axes = options.axes;\n            this.headerTemplate = kendo.template(HEADERTEMPLATE);\n            if (options.template) {\n                this.template = kendo.template(options.template);\n            }\n        },\n\n        setTuples: function(tuples) {\n            this.tuples = tuples;\n        },\n\n        addColElements: function(count) {\n            var html = \"\";\n\n            for (var index = 0; index < count; index++) {\n                html += \"<col>\";\n            }\n\n            this.table.find(\"colgroup\").append(html);\n        },\n\n        addRowElements: function(columnHeaderRows) {\n            var that = this;\n            var body = that.table.find(\"tbody\");\n            var row;\n\n            for (var index = 0; index < columnHeaderRows.length; index++) {\n                row = $('<tr class=\"k-pivotgrid-row\"></tr>');\n                body.append(row);\n                that.addColumCell(row, columnHeaderRows[index]);\n            }\n        },\n\n        addColumCell: function(rowEl, rowItem) {\n            var that = this;\n            var cellEl;\n            var cell;\n\n            for (var index = 0; index < rowItem.cells.length; index++) {\n                cell = rowItem.cells[index];\n                if (cell) {\n                    cellEl = $(that.headerTemplate({\n                        rowspan: cell.rowSpan,\n                        colspan: cell.colSpan,\n                        key: cell.path.join(\",\") + (cell.total ? '|[TOTAL]' : ''),\n                        iconClass: (cell.children && cell.children.length) ? \"up\" : \"down\",\n                        expandable: cell.hasChildren && !cell.total,\n                        headerClass: kendo.format(\"k-pivotgrid-cell{0}{1}\", cell.total ? \" k-pivotgrid-header-total\" : \"\",cell.levelNum === 0 ? \" k-pivotgrid-header-root\" : \"\")\n                    }));\n                    cellEl.append(that.template ? that.template({ member: cell }) : cell.caption);\n                    rowEl.append(cellEl);\n                }\n            }\n        },\n\n        build: function() {\n            var tree = toTree((this.tuples || []).slice());\n            var treeData = this.axes == \"columns\" ? toColumns(tree) : toRows(tree);\n            var headerRows = treeData[0];\n            var headerLeafs = treeData[1];\n            var breadth = treeData[2];\n            var rowHeaderBreadth = treeData[3];\n            var that = this;\n            that._tree = tree;\n            that._breadth = breadth;\n            that._headerLeafs = headerLeafs;\n\n            var table = $(\"<table class='k-pivotgrid-table'><colgroup></colgroup><tbody class='k-pivotgrid-tbody'></tbody></table>\");\n\n            that.table = table;\n            that.addColElements(this.axes == \"columns\" ? headerLeafs.length : rowHeaderBreadth);\n            that.addRowElements(headerRows);\n\n            return that.table;\n        },\n\n        getTree: function() {\n            return this._tree;\n        },\n\n        getBreadth: function() {\n            return this._breadth;\n        },\n\n        getHeaderLeafs: function() {\n            return this._headerLeafs;\n        }\n    });\n\n    var ColumnBuilder = Class.extend({\n        init: function() {\n            this.measures = 1;\n            this.metadata = {};\n        },\n\n        build: function(tuples) {\n            var tbody = this._tbody(tuples);\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", null, [colgroup, tbody])\n            ];\n        },\n\n        reset: function() {\n            this.metadata = {};\n        },\n\n        _colGroup: function() {\n            var length = this._rowLength();\n            var children = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function(tuples) {\n            var root = tuples[0];\n\n            this.map = {};\n            this.rows = [];\n            this.rootTuple = root;\n\n            this._indexes = [];\n\n            if (root) {\n                this._buildRows(root, 0);\n                this._normalize();\n            } else {\n                this.rows.push(element(\"tr\", null, [ element(\"th\", null, [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", null, this.rows);\n        },\n\n        _normalize: function() {\n            var rows = this.rows;\n            var rowsLength = rows.length;\n            var rowIdx = 0;\n            var row;\n\n            var cellsLength;\n            var cellIdx;\n            var cells;\n            var cell;\n\n            for (; rowIdx < rowsLength; rowIdx++) {\n                row = rows[rowIdx];\n\n                if (row.rowSpan === 1) {\n                    continue;\n                }\n\n                cells = row.children;\n\n                cellIdx = 0;\n                cellsLength = cells.length;\n\n                for (; cellIdx < cellsLength; cellIdx++) {\n                    cell = cells[cellIdx];\n\n                    if (cell.tupleAll) {\n                        cell.attr.rowSpan = row.rowSpan;\n                    }\n                }\n            }\n        },\n\n        _rowIndex: function(row) {\n            var rows = this.rows;\n            var length = rows.length;\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                if (rows[idx] === row) {\n                    break;\n                }\n            }\n\n            return idx;\n        },\n\n        _rowLength: function() {\n            var cells = this.rows[0] ? this.rows[0].children : [];\n            var length = cells.length;\n            var rowLength = 0;\n            var idx = 0;\n\n            if (length) {\n                for (; idx < length; idx++) {\n                    rowLength += cells[idx].attr.colSpan || 1;\n                }\n            }\n\n            if (!rowLength) {\n                rowLength = this.measures;\n            }\n\n            return rowLength;\n        },\n\n        _row: function(tuple, memberIdx, parentMember) {\n            var rootName = this.rootTuple.members[memberIdx].name;\n            var levelNum = tuple.members[memberIdx].levelNum;\n            var rowKey = rootName + levelNum;\n            var map = this.map;\n            var parentRow;\n            var children;\n\n            var row = map[rowKey];\n\n            if (!row) {\n                row = element(\"tr\", null, []);\n\n                row.parentMember = parentMember;\n                row.collapsed = 0;\n                row.colSpan = 0;\n                row.rowSpan = 1;\n\n                map[rowKey] = row;\n                parentRow = map[rootName + (Number(levelNum) - 1)];\n\n                if (parentRow) {\n                    children = parentRow.children;\n\n                    if (children[1] && children[1].attr.className.indexOf(\"k-alt\") === -1) {\n                        row.notFirst = true;\n                    } else {\n                        row.notFirst = parentRow.notFirst;\n                    }\n                }\n\n                this.rows.splice(this._rowIndex(parentRow) + 1, 0, row);\n            } else {\n                row.notFirst = false;\n\n                if (!row.parentMember || row.parentMember !== parentMember) {\n                    row.parentMember = parentMember;\n                    row.collapsed = 0;\n                    row.colSpan = 0;\n                }\n            }\n\n            return row;\n        },\n\n        _measures: function(measures, tuple, className) {\n            var map = this.map;\n            var row = map.measureRow;\n            var measure;\n\n            if (!row) {\n                row = element(\"tr\", null, []);\n                map.measureRow = row;\n                this.rows.push(row);\n            }\n\n            for (var idx = 0, length = measures.length; idx < length; idx++) {\n                measure = measures[idx];\n                row.children.push(this._cell((className || \"\"), [this._content(measure, tuple)], measure));\n            }\n\n            return length;\n        },\n\n        _content: function(member, tuple) {\n            return htmlNode(this.template({\n                member: member,\n                tuple: tuple\n            }));\n        },\n\n        _cell: function(className, children, member) {\n            var cell = element(\"th\", { className: \"k-header\" + className }, children);\n            cell.value = member.caption || member.name;\n            return cell;\n        },\n\n        _buildRows: function(tuple, memberIdx, parentMember) {\n            var members = tuple.members;\n            var member = members[memberIdx];\n            var nextMember = members[memberIdx + 1];\n\n            var row, childRow, children, childrenLength;\n            var cell, allCell, cellAttr;\n            var cellChildren = [];\n            var path;\n\n            var idx = 0;\n            var metadata;\n\n            var colSpan;\n            var collapsed = 0;\n            var memberCollapsed = 0;\n\n            if (member.measure) {\n                this._measures(member.children, tuple);\n                return;\n            }\n\n            path = kendo.stringify(buildPath(tuple, memberIdx));\n            row = this._row(tuple, memberIdx, parentMember);\n\n            children = member.children;\n            childrenLength = children.length;\n\n            metadata = this.metadata[path];\n            if (!metadata) {\n                this.metadata[path] = metadata = createMetadata(Number(member.levelNum), memberIdx);\n                metadata.rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n            }\n\n            this._indexes.push({\n                path: path,\n                tuple: tuple\n            });\n\n            if (member.hasChildren) {\n                if (metadata.expanded === false) {\n                    collapsed = metadata.maxChildren;\n                    row.collapsed += collapsed;\n\n                    metadata.children = 0;\n                    childrenLength = 0;\n                }\n\n                cellAttr = { className: \"k-icon \" + (childrenLength ? STATE_EXPANDED : STATE_COLLAPSED) };\n                cellAttr[kendo.attr(\"path\")] = path;\n\n                cellChildren.push(element(\"span\", cellAttr));\n            }\n\n            cellChildren.push(this._content(member, tuple));\n            cell = this._cell((row.notFirst ? \" k-first\" : \"\"), cellChildren, member);\n\n            row.children.push(cell);\n            row.colSpan += 1;\n\n            if (childrenLength) {\n                allCell = this._cell(\" k-alt\", [this._content(member, tuple)], member);\n                row.children.push(allCell);\n\n                for (; idx < childrenLength; idx++) {\n                    childRow = this._buildRows(children[idx], memberIdx, member);\n                }\n\n                colSpan = childRow.colSpan;\n                collapsed = childRow.collapsed;\n\n                cell.attr.colSpan = colSpan;\n\n                metadata.children = colSpan;\n                metadata.members = 1;\n\n                row.colSpan += colSpan;\n                row.collapsed += collapsed;\n                row.rowSpan = childRow.rowSpan + 1;\n\n                if (nextMember) {\n                    if (nextMember.measure) {\n                        colSpan = this._measures(nextMember.children, tuple, \" k-alt\");\n                    } else {\n                        childRow = this._buildRows(tuple, memberIdx + 1);\n                        colSpan = childRow.colSpan;\n\n                        row.collapsed += childRow.collapsed;\n                        memberCollapsed = childRow.collapsed;\n                    }\n\n                    allCell.attr.colSpan = colSpan;\n                    colSpan -= 1;\n\n                    metadata.members += colSpan;\n                    row.colSpan += colSpan;\n                }\n            } else if (nextMember) {\n                if (nextMember.measure) {\n                    colSpan = this._measures(nextMember.children, tuple);\n                } else {\n                    childRow = this._buildRows(tuple, memberIdx + 1);\n                    colSpan = childRow.colSpan;\n\n                    row.collapsed += childRow.collapsed;\n                    memberCollapsed = childRow.collapsed;\n                }\n\n                metadata.members = colSpan;\n\n                if (colSpan > 1) {\n                    cell.attr.colSpan = colSpan;\n                    row.colSpan += colSpan - 1;\n                }\n            }\n\n            if (metadata.maxMembers < (metadata.members + memberCollapsed)) {\n                metadata.maxMembers = metadata.members + memberCollapsed;\n            }\n\n            children = metadata.children + collapsed;\n\n            if (metadata.maxChildren < children) {\n                metadata.maxChildren = children;\n            }\n\n            (allCell || cell).tupleAll = true;\n\n            return row;\n        }\n    });\n\n    var RowBuilder = Class.extend({\n        init: function() {\n            this.metadata = {};\n        },\n\n        build: function(tuples) {\n            var tbody = this._tbody(tuples);\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", null, [colgroup, tbody])\n            ];\n        },\n\n        reset: function() {\n            this.metadata = {};\n        },\n\n        _rowLength: function() {\n            var children = this.rows[0].children;\n            var length = 0;\n            var idx = 0;\n\n            var cell = children[idx];\n\n            while (cell) {\n                length += (cell.attr.colSpan || 1);\n                cell = children[++idx];\n            }\n\n            return length;\n        },\n\n        _colGroup: function() {\n            var length = this._rowLength();\n            var children = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function(tuples) {\n            var root = tuples[0];\n\n            this.rootTuple = root;\n            this.rows = [];\n            this.map = {};\n\n            this._indexes = [];\n\n            if (root) {\n                this._buildRows(root, 0);\n                this._normalize();\n            } else {\n                this.rows.push(element(\"tr\", null, [ element(\"td\", null, [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", null, this.rows);\n        },\n\n        _normalize: function() {\n            var rows = this.rows;\n            var rowsLength = rows.length;\n            var rowIdx = 0;\n\n            var members = this.rootTuple.members;\n            var firstMemberName = members[0].name;\n            var membersLength = members.length;\n            var memberIdx = 0;\n\n            var row;\n            var cell;\n            var maxcolSpan;\n            var map = this.map;\n            var allRow;\n\n            for (; rowIdx < rowsLength; rowIdx++) {\n                row = rows[rowIdx];\n\n                for (memberIdx = 0; memberIdx < membersLength; memberIdx++) {\n                    maxcolSpan = this[members[memberIdx].name];\n                    cell = row.colSpan[\"dim\" + memberIdx];\n\n                    if (cell && cell.colSpan < maxcolSpan) {\n                        cell.attr.colSpan = (maxcolSpan - cell.colSpan) + 1;\n                    }\n                }\n            }\n\n            row = map[firstMemberName];\n            allRow = map[firstMemberName + \"all\"];\n\n            if (row) {\n                row.children[0].attr.className = \"k-first\";\n            }\n\n            if (allRow) {\n                allRow.children[0].attr.className += \" k-first\";\n            }\n        },\n\n        _row: function(children) {\n            var row = element(\"tr\", null, children);\n            row.rowSpan = 1;\n            row.colSpan = {};\n\n            this.rows.push(row);\n\n            return row;\n        },\n\n        _content: function(member, tuple) {\n            return htmlNode(this.template({\n                member: member,\n                tuple: tuple\n            }));\n        },\n\n        _cell: function(className, children, member) {\n            var cell = element(\"td\", { className: className }, children);\n            cell.value = member.caption || member.name;\n            return cell;\n        },\n\n        _buildRows: function(tuple, memberIdx) {\n            var map = this.map;\n            var path;\n\n            var members = tuple.members;\n            var member = members[memberIdx];\n            var nextMember = members[memberIdx + 1];\n\n            var children = member.children;\n            var childrenLength = children.length;\n\n            var levelNum = Number(member.levelNum);\n            var rootName = this.rootTuple.members[memberIdx].name;\n            var tuplePath = buildPath(tuple, memberIdx - 1).join(\"\");\n            var rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n            var parentName = tuplePath + (rootLevelNum === levelNum ? \"\" : (member.parentName || \"\"));\n            var row = map[parentName + \"all\"] || map[parentName];\n            var colSpan = levelNum + 1;\n\n            var cell, allCell;\n            var childRow, allRow;\n            var metadata;\n            var className;\n            var cellChildren = [];\n            var expandIconAttr;\n            var idx;\n\n            if (!row || row.hasChild) {\n                row = this._row();\n            } else {\n                row.hasChild = true;\n            }\n\n            if (member.measure) {\n                className = row.allCell ? \"k-grid-footer\" : \"\";\n                row.children.push(this._cell(className, [ this._content(children[0], tuple) ], children[0]));\n\n                row.rowSpan = childrenLength;\n\n                for (idx = 1; idx < childrenLength; idx++) {\n                    this._row([ this._cell(className, [ this._content(children[idx], tuple) ], children[idx]) ]);\n                }\n\n                return row;\n            }\n\n            map[tuplePath + member.name] = row;\n\n            path = kendo.stringify(buildPath(tuple, memberIdx));\n\n            metadata = this.metadata[path];\n            if (!metadata) {\n                this.metadata[path] = metadata = createMetadata(levelNum, memberIdx);\n                metadata.rootLevelNum = rootLevelNum;\n            }\n\n            this._indexes.push({\n                path: path,\n                tuple: tuple\n            });\n\n            if (member.hasChildren) {\n                if (metadata.expanded === false) {\n                    childrenLength = 0;\n                    metadata.children = 0;\n                }\n\n                expandIconAttr = { className: \"k-icon \" + (childrenLength ? STATE_EXPANDED : STATE_COLLAPSED) };\n                expandIconAttr[kendo.attr(\"path\")] = path;\n\n                cellChildren.push(element(\"span\", expandIconAttr));\n            }\n\n            cellChildren.push(this._content(member, tuple));\n\n            className = row.allCell && !childrenLength ? \"k-grid-footer\" : \"\";\n            cell = this._cell(className, cellChildren, member);\n            cell.colSpan = colSpan;\n\n            row.children.push(cell);\n            row.colSpan[\"dim\" + memberIdx] = cell;\n\n            if (!this[rootName] || this[rootName] < colSpan) {\n                this[rootName] = colSpan;\n            }\n\n            if (childrenLength) {\n                row.allCell = false;\n                row.hasChild = false;\n\n                for (idx = 0; idx < childrenLength; idx++) {\n                    childRow = this._buildRows(children[idx], memberIdx);\n\n                    if (row !== childRow) {\n                        row.rowSpan += childRow.rowSpan;\n                    }\n                }\n\n                if (row.rowSpan > 1) {\n                    cell.attr.rowSpan = row.rowSpan;\n                }\n\n                metadata.children = row.rowSpan;\n\n                allCell = this._cell(\"k-grid-footer\", [this._content(member, tuple)], member);\n                allCell.colSpan = colSpan;\n\n                allRow = this._row([ allCell ]);\n                allRow.colSpan[\"dim\" + memberIdx] = allCell;\n                allRow.allCell = true;\n\n                map[tuplePath + member.name + \"all\"] = allRow;\n\n                if (nextMember) {\n                    childRow = this._buildRows(tuple, memberIdx + 1);\n                    allCell.attr.rowSpan = childRow.rowSpan;\n                }\n\n                row.rowSpan += allRow.rowSpan;\n\n                metadata.members = allRow.rowSpan;\n\n            } else if (nextMember) {\n                row.hasChild = false;\n                this._buildRows(tuple, memberIdx + 1);\n\n                (allCell || cell).attr.rowSpan = row.rowSpan;\n\n                metadata.members = row.rowSpan;\n            }\n\n            if (metadata.maxChildren < metadata.children) {\n                metadata.maxChildren = metadata.children;\n            }\n\n            if (metadata.maxMembers < metadata.members) {\n                metadata.maxMembers = metadata.members;\n            }\n\n            return row;\n        }\n    });\n\n    var ContentBuilder = Class.extend({\n        init: function() {\n            this.columnAxis = {};\n            this.rowAxis = {};\n        },\n\n        build: function(data, columnAxis, rowAxis) {\n            var index = columnAxis.indexes[0];\n            var metadata = columnAxis.metadata[index ? index.path : undefined];\n\n            this.columnAxis = columnAxis;\n            this.rowAxis = rowAxis;\n\n            this.data = data;\n\n            this.rowLength = metadata ? metadata.maxChildren + metadata.maxMembers : columnAxis.measures.length || 1;\n\n            if (!this.rowLength) {\n                this.rowLength = 1;\n            }\n\n            var tbody = this._tbody();\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", null, [colgroup, tbody])\n            ];\n        },\n\n        _colGroup: function() {\n            var length = this.columnAxis.measures.length || 1;\n            var children = [];\n            var idx = 0;\n\n            if (this.rows[0]) {\n                length = this.rows[0].children.length;\n            }\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function() {\n            this.rows = [];\n\n            if (this.data[0]) {\n                this.columnIndexes = this._indexes(this.columnAxis, this.rowLength);\n                this.rowIndexes = this._indexes(this.rowAxis, Math.ceil(this.data.length / this.rowLength));\n\n                this._buildRows();\n            } else {\n                this.rows.push(element(\"tr\", null, [ element(\"td\", null, [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", null, this.rows);\n        },\n\n        _indexes: function(axisInfo, total) {\n            var result = [];\n            var axisInfoMember;\n            var indexes = axisInfo.indexes;\n            var metadata = axisInfo.metadata;\n            var measures = axisInfo.measures;\n            var measuresLength = measures.length || 1;\n\n            var current;\n            var dataIdx = 0;\n            var firstEmpty = 0;\n\n            var idx = 0;\n            var length = indexes.length;\n            var measureIdx;\n            var index;\n\n            var children;\n            var skipChildren;\n\n            if (!length) {\n                for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                    result[measureIdx] = {\n                        index: measureIdx,\n                        measure: measures[measureIdx],\n                        tuple: null\n                    };\n                }\n\n                return result;\n            }\n\n            for (; idx < length; idx++) {\n                axisInfoMember = indexes[idx];\n                current = metadata[axisInfoMember.path];\n                children = current.children + current.members;\n                skipChildren = 0;\n\n                if (children) {\n                    children -= measuresLength;\n                }\n\n                if (current.expanded === false && current.children !== current.maxChildren) {\n                    skipChildren = current.maxChildren;\n                }\n\n                if (current.parentMember && current.levelNum === current.rootLevelNum) {\n                    children = -1;\n                }\n\n                if (children > -1) {\n                    for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                        index = children + measureIdx;\n                        if (!current.children) {\n                            index += firstEmpty;\n                        }\n\n                        result[children + firstEmpty + measureIdx] = {\n                            children: children,\n                            index: dataIdx,\n                            measure: measures[measureIdx],\n                            tuple: axisInfoMember.tuple\n                        };\n                        dataIdx += 1;\n                    }\n\n                    while (result[firstEmpty] !== undefined) {\n                        firstEmpty += 1;\n                    }\n                }\n\n                if (firstEmpty === total) {\n                    break;\n                }\n\n                dataIdx += skipChildren;\n            }\n\n            return result;\n        },\n\n        _buildRows: function() {\n            var rowIndexes = this.rowIndexes;\n            var length = rowIndexes.length;\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                var rowIndex = rowIndexes[idx];\n                if (rowIndex) {\n                    this.rows.push(this._buildRow(rowIndex));\n                }\n            }\n        },\n\n        _buildRow: function(rowInfo) {\n            var startIdx = rowInfo.index * this.rowLength;\n            var columnIndexes = this.columnIndexes;\n            var length = columnIndexes.length;\n            var columnInfo;\n            var cells = [];\n            var idx = 0;\n\n            var templateInfo;\n            var cell, cellContent;\n            var attr, dataItem, measure;\n\n            for (; idx < length; idx++) {\n                columnInfo = columnIndexes[idx];\n\n                if (columnInfo === undefined) {\n                    continue;\n                }\n\n                attr = {};\n                if (columnInfo.children) {\n                    attr.className = \"k-alt\";\n                }\n\n                cellContent = \"\";\n                dataItem = this.data[startIdx + columnInfo.index];\n                measure = columnInfo.measure || rowInfo.measure;\n\n                templateInfo = {\n                    columnTuple: columnInfo.tuple,\n                    rowTuple: rowInfo.tuple,\n                    measure: measure,\n                    dataItem: dataItem\n                };\n\n                if (dataItem.value !== \"\" && measure && measure.type) {\n                    if (measure.type === \"status\") {\n                        cellContent = this.kpiStatusTemplate(templateInfo);\n                    } else if (measure.type === \"trend\") {\n                        cellContent = this.kpiTrendTemplate(templateInfo);\n                    }\n                }\n\n                if (!cellContent) {\n                    cellContent = this.dataTemplate(templateInfo);\n                }\n\n                cell = element(\"td\", attr, [ htmlNode(cellContent) ]);\n                cell.value = dataItem.value;\n                cells.push(cell);\n            }\n\n            attr = {};\n            if (rowInfo.children) {\n                attr.className = \"k-grid-footer\";\n            }\n\n            return element(\"tr\", attr, cells);\n        }\n    });\n\n    ui.plugin(PivotGrid);\n\n    kendo.PivotExcelExporter = kendo.Class.extend({\n        init: function(options) {\n            this.options = options;\n\n            this.widget = options.widget;\n            this.dataSource = this.widget.dataSource;\n        },\n\n        _columns: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var columnHeaderLength = columnHeaderTable.children[0].children.length;\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n            var width = this.widget.options.columnWidth;\n            var result = [];\n            var idx;\n\n            if (rowHeaderLength && this.dataSource.data()[0]) {\n                for (idx = 0; idx < rowHeaderLength; idx++) {\n                    result.push({\n                        autoWidth: true\n                    });\n                }\n            }\n\n            for (idx = 0; idx < columnHeaderLength; idx++) {\n                result.push({\n                    autoWidth: false,\n                    width: width\n                });\n            }\n\n            return result;\n        },\n\n        _cells: function(rows, type, callback) {\n            var result = [];\n\n            var i = 0;\n            var length = rows.length;\n\n            var cellsLength;\n            var row, cells;\n            var j, cell;\n\n            for (; i < length; i++) {\n                row = [];\n                cells = rows[i].children;\n                cellsLength = cells.length;\n\n                for (j = 0; j < cellsLength; j++) {\n                    cell = cells[j];\n\n                    row.push({\n                        background: \"#7a7a7a\",\n                        color: \"#fff\",\n                        value: cell.value,\n                        colSpan: cell.attr.colSpan || 1,\n                        rowSpan: cell.attr.rowSpan || 1\n                    });\n                }\n\n                if (callback) {\n                    callback(row, i);\n                }\n\n                result.push({\n                    cells: row,\n                    type: type\n                });\n            }\n\n            return result;\n        },\n\n        _rows: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var columnHeaderLength = columnHeaderTable.children[0].children.length;\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n            var columnHeaderRows = columnHeaderTable.children[1].children;\n            var rowHeaderRows = rowHeaderTable.children[1].children;\n            var contentRows = this.widget.contentTree.children[0].children[1].children;\n\n            var columnRows = this._cells(columnHeaderRows, \"header\");\n\n            if (rowHeaderLength) {\n                columnRows[0].cells.splice(0, 0, {\n                    background: \"#7a7a7a\",\n                    color: \"#fff\",\n                    value: \"\",\n                    colSpan: rowHeaderLength,\n                    rowSpan: columnHeaderRows.length\n                });\n            }\n\n            var dataCallback = function(row, index) {\n                var j = 0;\n                var cell, value;\n                var cells = contentRows[index].children;\n\n                for (; j < columnHeaderLength; j++) {\n                    cell = cells[j];\n                    value = Number(cell.value);\n\n                    if (isNaN(value)) {\n                        value = cell.value;\n                    }\n\n                    row.push({\n                        background: \"#dfdfdf\",\n                        color: \"#333\",\n                        value: value,\n                        colSpan: 1,\n                        rowSpan: 1\n                    });\n                }\n            };\n\n            var rowRows = this._cells(rowHeaderRows, \"data\", dataCallback);\n\n            return columnRows.concat(rowRows);\n        },\n\n        _freezePane: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n            var columnHeaderRows = columnHeaderTable.children[1].children;\n\n            return {\n                colSplit: rowHeaderLength,\n                rowSplit: columnHeaderRows.length\n            };\n        },\n\n        workbook: function() {\n            var promise,\n                resolveFn = function() {\n                    return {\n                        sheets: [ {\n                            columns: this._columns(),\n                            rows: this._rows(),\n                            freezePane: this._freezePane(),\n                            filter: null\n                        } ]\n                    };\n                };\n\n            if (this.dataSource.view()[0]) {\n                promise = $.Deferred();\n                promise.resolve();\n            } else {\n                promise = this.dataSource.fetch();\n            }\n\n            return promise.then(resolveFn.bind(this));\n        }\n    });\n\n    var PivotExcelMixin = {\n        extend: function(proto) {\n           proto.events.push(\"excelExport\");\n           proto.options.excel = $.extend(proto.options.excel, this.options);\n           proto.saveAsExcel = this.saveAsExcel;\n        },\n        options: {\n            proxyURL: \"\",\n            filterable: false,\n            fileName: \"Export.xlsx\"\n        },\n        saveAsExcel: function() {\n            var excel = this.options.excel || {};\n\n            var exporter = new kendo.PivotExcelExporter({\n                widget: this\n            });\n\n            var resolveFn = function(book) {\n                if (!this.trigger(\"excelExport\", { workbook: book })) {\n                    var workbook = new kendo.ooxml.Workbook(book);\n\n                    workbook.toDataURLAsync().then(function(dataURI) {\n                        kendo.saveAs({\n                            dataURI: dataURI,\n                            fileName: book.fileName || excel.fileName,\n                            proxyURL: excel.proxyURL,\n                            forceProxy: excel.forceProxy\n                        });\n                    });\n                }\n            };\n\n            exporter.workbook().then(resolveFn.bind(this));\n        }\n    };\n\n    kendo.PivotExcelMixin = PivotExcelMixin;\n\n    if (kendo.ooxml && kendo.ooxml.Workbook) {\n        PivotExcelMixin.extend(PivotGrid.prototype);\n    }\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(PivotGrid.prototype);\n\n        PivotGrid.fn._drawPDF = function() {\n            return this._drawPDFShadow({\n                width: this.wrapper.width()\n            }, {\n                avoidLinks: this.options.pdf.avoidLinks\n            });\n        };\n    }\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(PivotGridV2.prototype);\n\n        PivotGridV2.fn._drawPDF = function() {\n            return this._drawPDFShadow({\n                width: this.wrapper.width()\n            }, {\n                avoidLinks: this.options.pdf.avoidLinks\n            });\n        };\n    }\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n\n"],"names":["define","__meta__","id","name","category","description","depends","features","$","window","kendo","jQuery","undefined","ui","Class","Comparer","data","Widget","DataSource","outerWidth","_outerWidth","outerHeight","_outerHeight","common","pivotgrid","fetchDiscover","normalizeFilter","Query","normalizeSort","toString","identity","o","map","extend","isFunction","fetchData","createDataState","toColumns","toRows","toTree","toData","headersReducer","RESIZE","READ","CHANGE","ERROR","REQUESTSTART","PROGRESS","REQUESTEND","MEASURES","STATERESET","AUTO","DIV","NS","ROW_TOTAL_KEY","DATABINDING","DATABOUND","EXPANDMEMBER","HEADERTEMPLATE","COLLAPSEMEMBER","STATE_EXPANDED","STATE_COLLAPSED","HEADER_TEMPLATE","KPISTATUS_TEMPLATE","KPITREND_TEMPLATE","DATACELL_TEMPLATE","LAYOUT_TABLE","AXIS_ROWS","AXIS_COLUMNS","normalizeMeasures","measure","descriptor","descriptors","call","d","type","normalizeMembers","member","expand","slice","normalizeName","indexOf","accumulateMembers","accumulator","rootTuple","tuple","level","idx","length","children","members","stringify","buildPath","descriptorsForAxes","tuples","result","k","push","JSON","parse","addMissingPathMembers","axis","firstTuple","tupleMembers","found","j","getName","hierarchy","tupleToDescriptors","descriptorsForMembers","measures","tupletoSearch","findExistingTuple","createAggregateGetter","m","measureGetter","getter","field","aggregatorContext","state","aggregate","dataItem","isNumber","val","isNaN","isDate","getTime","getScollWidth","scrollbar","div","document","createElement","style","cssText","innerHTML","body","appendChild","offsetWidth","scrollWidth","removeChild","functions","sum","value","count","average","max","min","PivotCubeBuilder","init","options","this","dimensions","_normalizeDescriptors","keyField","fields","_rootTuples","rootNames","measureAggregators","aggregatorsLength","dimensionsSchema","root","parts","measureIdx","rootNamesLength","keys","split","caption","levelName","levelNum","hasChildren","parentName","_sortMap","sortDescriptors","sortedMaps","sortTree","flattenTree","mapItem","key","directParentName","fillSortTree","i","sortItemsTree","pop","create","dir","flatColumns","index","_expandedTuples","expanded","current","currentKeys","accumulatorKeys","memberInfo","expandedNames","isEmptyObject","_findExpandedMember","uniquePath","names","expandedIdx","join","_asTuples","rootInfo","expandedInfo","concat","apply","_measuresInfo","rowAxis","aggregateNames","resultFuncs","formats","format","_toDataArray","measuresInfo","rowKeys","columnKeys","aggregates","n","row","column","columnKey","rowMeasureNamesLength","rowMeasureNames","columnMeasureNames","rowLength","columnLength","items","_addData","resultFunc","fmtValue","ordinal","_matchDescriptors","getters","parentField","expectedValue","_calculateAggregate","totalItem","aggregator","_processColumns","columns","rowTotal","updateColumn","path","columnIndex","childrenMap","_measureAggregators","measureDescriptors","aggregators","defaultAggregate","toLowerCase","Error","_buildGetters","_parseDescriptors","parsedDescriptors","parseDescriptors","getRootNames","mapNames","_filter","filter","expr","filters","operator","_normalizeFilter","logic","process","measuresRowAxis","measuresAxis","columnDescriptors","rowDescriptors","rows","aggregatedData","rowValue","columnGetters","rowGetters","processed","expandedColumns","expandedRows","hasExpandedRows","rowIdx","rowDescriptor","rowName","columnsInfo","rowsInfo","sort","axes","PivotTransport","transport","discover","read","update","destroy","success","catalog","connection","cube","PivotDataSourceV2","fn","transportOptions","_online","XmlaTransportV2","_columns","_rows","_measuresAxis","values","_measures","serverSorting","serverPaging","serverFiltering","serverGrouping","serverAggregates","normalizeAxis","_mergeState","fetch","_data","_query","that","isPrevented","trigger","params","_params","newDataState","_saveState","response","_preventRefresh","error","err","columnAxes","rowAxes","measureAxes","schemaMeasures","command","restrictions","catalogName","cubeName","schemaKPIs","schemaDimensions","schemaHierarchies","dimensionName","dimensionUniqueName","schemaLevels","hierarchyName","hierarchyUniqueName","schemaCubes","schemaCatalogs","schemaMembers","_columnTuples","_rowTuples","_view","PivotDataSource","schema","cubes","catalogs","hierarchies","levels","_cubeSchema","cubeBuilder","_skipNormalize","_axes","uniqueName","defaultHierarchy","levelUniqueName","memberUniqueName","schemaData","dataGetter","_rawData","distinct","treeOp","childrenCardinality","bind","_clearAxesData","query","rowsAxisDescriptors","columnsAxisDescriptors","_expandPath","origin","other","memberToExpand","_lastExpanded","memberName","_descriptorsForAxis","_process","e","page","pageSize","group","_updateLocalData","_pristineData","Deferred","resolve","promise","expandColumn","expandRow","originalData","reader","_processResult","processedData","_requestData","columnIndexes","rowIndexes","resultAxis","axisToSkip","hasColumnTuples","_rowMeasures","_normalizeTuples","_columnMeasures","_normalizeData","columnsLength","rowsLength","validateAxis","adjustDataByColumn","membersCount","adjustDataByRow","_mergeAxes","_readData","newData","_createTuple","buildRoot","Number","_hasRoot","target","source","isRoot","sourceAxes","columnMeasures","rowMeasures","startIndex","oldRowsLength","newRowsLength","oldColumnsLength","newColumnsLength","parseSource","prepareDataOnColumns","mergedColumns","mergeTuples","prepareDataOnRows","mergedRows","findDataIndex","parsedRoot","memberIndex","offset","_mergeColumnData","_mergeRowData","toJSON","rowIndex","drop","toAdd","Math","splice","dataIndex","_observe","_ranges","_addRange","_total","_pristineTotal","roots","indexes","memberIdx","last","tupleName","_addMissingDataItems","metadata","parseInt","addEmptyDataItem","_normalizeOrdinals","lastOrdinal","dataIdx","converter","deferred","_handleCustomErrors","status","reject","done","kpis","sortFunction","currentItem","newAxis","sourceTuples","targetTuples","columnIdx","targetColumnsLength","measuresLength","tupleIndex","collection","queue","shift","counter","targetMembers","sourceMembers","equalTuples","first","second","equal","toFind","membersLength","addMembers","len","findParentMember","parentPath","parentMember","measurePosition","normalizeTupleMeasures","measureIndex","indices","buildDataIndices","targetIndex","sourceIndex","calcIndex","spliceIndex","baseHierarchyPath","expandMemberDescriptor","sortDescriptor","sortDescriptorForMember","crossJoin","r","crossJoinCommand","tmp","measureNames","rootName","rootLength","child","l","serializeMembers","crossJoinCommands","dataSource","filterFunctionFormats","contains","doesnotcontain","startswith","endswith","eq","neq","serializeExpression","expression","serializeFilters","serializeOptions","parentTagName","capitalize","replace","toUpperCase","xmlaDiscoverCommands","convertersMap","properties","Catalog","XmlaTransport","RemoteTransport","originalOptions","url","setup","dataType","contentType","parameterMap","ajax","fetchOptions","noop","then","catch","asArray","object","translateAxis","captionGetter","unameGetter","levelNameGetter","levelNumGetter","childrenGetter","hierarchyGetter","parentNameGetter","Member","schemaDataReaderMap","groupName","displayFolder","defaultFormat","goal","trend","statusGraphic","trendGraphic","defaultMember","orderingProperty","xmlaReaderMethods","XmlaDataReader","XmlDataReader","_extend","methodName","option","xml","errors","fault","faultstring","faultcode","cells","ordinalGetter","valueGetter","fmtValueGetter","_mapSchema","obj","sortExpr","transports","xmla","readers","expressions","removeExpr","PivotConfiguratorButton","PivotSettingTarget","element","addClass","_refreshHandler","refresh","template","actions","enabled","ns","emptyTemplate","_sortable","on","action","closest","attr","hasClass","remove","sortable","sortDirection","currentTarget","find","filterable","fieldMenu","PivotFieldMenu","messages","setting","empty","setDataSource","unbind","kendoSortable","connectWith","hint","cursor","start","item","change","add","move","newIndex","_isKPI","validate","isMeasure","Array","isArray","sortExpressions","_sort","allowUnsort","skipExpr","html","sortIcon","_sortIcon","off","icon","PivotSettingTargetV2","parent","text","PivotFieldMenuV2","events","_applyState","_sortState","_stateFilter","_savedState","_cancelChanges","deepExtend","_initialState","_redraw","_state","newState","modifyInit","focus","blur","_savedFilter","_emptyState","enable","removeClass","_targetsHTML","menuenabled","_element","_attachEvents","configurator","setOptions","toggle","pivotEl","pivot","toggleClass","getKendoPivotGridV2","_setContentWidth","_updateDimensions","PivotContainer","_addClasses","configuratorPosition","className","PivotGridV2","_dataSource","_bindConfigurator","_wrapper","_columnHeadersWrapper","_rowHeadersWrapper","_contentWrapper","wrapper","append","_columnBuilder","ColumnRowBuilder","columnHeaderTemplate","_rowBuilder","rowHeaderTemplate","_contentBuilder","ContentBuilderV2","dataCellTemplate","_scrollable","button","isRow","paths","eventName","reducerPayLoad","payload","tree","getTree","currentAxes","newHeaders","autoBind","notify","height","columnWidth","_windowResizeHandler","_progressHandler","_errorHandler","_requestStart","_error","_resize","setProperty","columnsHeader","rowsHeader","scroll","scrollLeft","scrollTop","_wheelScroll","ctrlKey","delta","wheelDeltaY","preventDefault","one","css","_progress","progress","grid-template-columns","grid-template-rows","offsetHeight","contentTable","columnTable","calculatedWidth","minWidth","ceil","width","kendoPivotConfiguratorV2","cellInfoByElement","cellInfo","contentBuilder","columnsCount","rowsCount","hash","columnTuple","rowTuple","setTuples","build","setRowColumnInfo","columnHeaderLeafs","getHeaderLeafs","rowHeaderLeafs","columnHeaderBreadth","getBreadth","rowHeaderDepth","PivotGrid","plugin","columnBuilder","rowBuilder","_createLayout","ColumnBuilder","RowBuilder","ContentBuilder","_templates","builder","eventArgs","parseJSON","is","request","childrenLoaded","maxChildren","reorderable","kpiStatusTemplate","kpiTrendTemplate","measureFields","columnFields","rowFields","columnTemplate","rowTemplate","dataTemplate","useWithBlock","kendoPivotConfigurator","columnInfo","rowInfo","view","measuresTarget","rowsTarget","columnsTarget","clearTimeout","_headerReflowTimeout","_stateResetHandler","_stateReset","reset","_measureFields","_createSettingTarget","icons","_initSettingTargets","layoutTable","leftContainer","rightContainer","gridWrapper","wrap","support","content","columnsHeaderTree","dom","Tree","rowsHeaderTree","contentTree","firstChild","_setSectionsWidth","_setSectionsHeight","_setContentHeight","_columnHeaderReflow","browser","mozilla","setTimeout","leftColumn","measureFieldsHeight","columnFieldsHeight","rowFieldsHeight","innerHeight","columnsHeight","padding","firstRowHeight","secondRowHeight","_resetColspan","skipScrollbar","clientHeight","cell","_colspan","_layoutTimeout","_axisMeasures","hasMeasure","columnAxis","render","_indexes","touchScroller","contentResized","movable","sender","x","y","htmlNode","createMetadata","maxMembers","addColElements","table","addRowElements","addColumCell","rowEl","rowItem","cellEl","total","headerTemplate","columnHeaderRows","rowspan","rowSpan","colspan","colSpan","iconClass","expandable","headerClass","treeData","headerRows","headerLeafs","breadth","rowHeaderBreadth","_tree","_breadth","_headerLeafs","tbody","_tbody","colgroup","_colGroup","_rowLength","_buildRows","_normalize","cellsLength","cellIdx","tupleAll","_rowIndex","_row","rowKey","parentRow","collapsed","notFirst","measureRow","_cell","_content","nextMember","childRow","childrenLength","allCell","cellAttr","cellChildren","memberCollapsed","rootLevelNum","firstMemberName","maxcolSpan","allRow","tuplePath","expandIconAttr","hasChild","axisInfo","axisInfoMember","firstEmpty","skipChildren","_buildRow","startIdx","templateInfo","cellContent","PivotExcelMixin","PivotExcelExporter","widget","columnHeaderTable","rowHeaderTable","columnHeaderLength","rowHeaderLength","autoWidth","_cells","callback","background","color","rowHeaderRows","contentRows","columnRows","dataCallback","rowRows","_freezePane","colSplit","rowSplit","workbook","resolveFn","sheets","freezePane","proto","excel","saveAsExcel","proxyURL","fileName","exporter","book","ooxml","Workbook","toDataURLAsync","dataURI","saveAs","forceProxy","prototype","PDFMixin","_drawPDF","_drawPDFShadow","avoidLinks","pdf","amd","a1","a2","a3"],"mappings":"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"}