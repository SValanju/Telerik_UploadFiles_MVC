{"version":3,"file":"kendo.upload.min.js","sources":["kendo.upload.js"],"sourcesContent":["(function(f, define) {\n    define('kendo.upload',[ \"kendo.core\" ], f);\n})(function() {\n\nvar __meta__ = { // jshint ignore:line\n    id: \"upload\",\n    name: \"Upload\",\n    category: \"web\",\n    description: \"The Upload widget uses progressive enhancement to deliver the best possible uploading experience to users.\",\n    depends: [ \"core\" ]\n};\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        antiForgeryTokens = kendo.antiForgeryTokens,\n        logToConsole = kendo.logToConsole,\n        rFileExtension = /\\.([^\\.]+)$/,\n        NS = \".kendoUpload\",\n        SELECT = \"select\",\n        UPLOAD = \"upload\",\n        SUCCESS = \"success\",\n        ERROR = \"error\",\n        COMPLETE = \"complete\",\n        CANCEL = \"cancel\",\n        CLEAR = \"clear\",\n        PAUSE = \"pause\",\n        RESUME = \"resume\",\n        PROGRESS = \"progress\",\n        REMOVE = \"remove\",\n        VALIDATIONERRORS = \"validationErrors\",\n        INVALIDMAXFILESIZE = \"invalidMaxFileSize\",\n        INVALIDMINFILESIZE = \"invalidMinFileSize\",\n        INVALIDFILEEXTENSION = \"invalidFileExtension\",\n        PROGRESSHIDEDELAY = 1000,\n        PROGRESSHIDEDURATION = 2000,\n        FOCUS_STATE = \"k-state-focused\",\n        TABINDEX = \"tabindex\";\n\n    var headerStatusIcon = {\n        loading: \"k-i-upload\",\n        warning: \"k-i-warning\",\n        success: \"k-i-check\"\n    };\n\n    var Upload = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.name = element.name;\n            that.multiple = that.options.multiple;\n            that.directory = that.options.directory;\n            that.localization = that.options.localization;\n\n            var activeInput = that.element;\n            that.wrapper = activeInput.closest(\".k-upload\");\n            if (that.wrapper.length === 0) {\n                that.wrapper = that._wrapInput(activeInput);\n            }\n\n            that._activeInput(activeInput);\n            that.toggle(that.options.enabled);\n\n            var ns = that._ns = NS + \"-\" + kendo.guid();\n            activeInput.closest(\"form\")\n                .on(\"submit\" + ns, that._onParentFormSubmit.bind(that))\n                .on(\"reset\" + ns, that._onParentFormReset.bind(that));\n\n            that._initUploadModule();\n\n            that._toggleDropZone();\n\n            that.wrapper\n                .on(\"click\", \".k-upload-action\", that._onFileAction.bind(that))\n                .on(\"click\", \".k-clear-selected\", that._onClearSelected.bind(that))\n                .on(\"click\", \".k-upload-selected\", that._onUploadSelected.bind(that))\n                .on(\"keydown\", that._onKeyDown.bind(that))\n                .on(\"focusout\", that._focusout.bind(that));\n\n            if (that.element.val()) {\n                that._onInputChange({ target: that.element });\n            }\n        },\n\n        events: [\n            SELECT,\n            UPLOAD,\n            SUCCESS,\n            ERROR,\n            COMPLETE,\n            CANCEL,\n            CLEAR,\n            PROGRESS,\n            REMOVE,\n            PAUSE,\n            RESUME\n        ],\n\n        options: {\n            name: \"Upload\",\n            enabled: true,\n            multiple: true,\n            directory: false,\n            showFileList: true,\n            template: \"\",\n            files: [],\n            async: {\n                autoRetryAfter: 0,\n                bufferChunkSize: 10000000,\n                maxAutoRetries: 1,\n                removeVerb: \"POST\",\n                autoUpload: true,\n                withCredentials: true,\n                accept: \"*/*; q=0.5, application/json\",\n                useArrayBuffer: false\n            },\n            localization: {\n                \"select\": \"Select files...\",\n                \"cancel\": \"Cancel\",\n                \"retry\": \"Retry\",\n                \"remove\": \"Remove\",\n                \"pause\": \"Pause\",\n                \"resume\": \"Resume\",\n                \"clearSelectedFiles\": \"Clear\",\n                \"uploadSelectedFiles\": \"Upload\",\n                \"dropFilesHere\": \"Drop files here to upload\",\n                \"invalidFiles\": \"Invalid file(s). Please check file upload requirements.\",\n                \"statusUploading\": \"uploading\",\n                \"statusUploaded\": \"uploaded\",\n                \"statusWarning\": \"warning\",\n                \"statusFailed\": \"failed\",\n                \"headerStatusUploading\": \"Uploading...\",\n                \"headerStatusPaused\": \"Paused\",\n                \"headerStatusUploaded\": \"Done\",\n                \"uploadSuccess\": \"File(s) uploaded successfully.\",\n                \"uploadFail\": \"File(s) failed to upload.\",\n                \"invalidMaxFileSize\": \"File size too large.\",\n                \"invalidMinFileSize\": \"File size too small.\",\n                \"invalidFileExtension\": \"File type not allowed.\"\n            },\n            validation: {\n                allowedExtensions: [],\n                maxFileSize: 0,\n                minFileSize: 0\n            },\n            dropZone: \"\"\n        },\n\n        _initUploadModule: function() {\n            var that = this,\n                options = that.options;\n\n            if (options.async.saveUrl) {\n                that._module = that._supportsFormData() ?\n                new formDataUploadModule(that) :\n                new iframeUploadModule(that);\n                that._async = true;\n\n                var initialFiles = options.files;\n                if (initialFiles.length > 0) {\n                    that._renderInitialFiles(initialFiles);\n                }\n\n            } else {\n                that._module = new syncUploadModule(that);\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this,\n                activeInput = that.element;\n\n            $(that.options.dropZone).off(that._ns);\n\n            Widget.fn.setOptions.call(that, options);\n\n            that.multiple = that.options.multiple;\n            that.directory = that.options.directory;\n\n            activeInput.attr(\"multiple\", that._supportsMultiple() ? that.multiple : false);\n            if (that.directory) {\n                activeInput.attr(\"webkitdirectory\", that.directory);\n                activeInput.attr(\"directory\", that.directory);\n            }\n            that.toggle(that.options.enabled);\n\n            that._initUploadModule();\n\n            that._toggleDropZone();\n        },\n\n        enable: function(enable) {\n            enable = typeof (enable) === \"undefined\" ? true : enable;\n            this.toggle(enable);\n        },\n\n        disable: function() {\n            this.toggle(false);\n        },\n\n        toggle: function(enable) {\n            enable = typeof (enable) === \"undefined\" ? enable : !enable;\n            this.wrapper.toggleClass(\"k-state-disabled\", enable);\n            this.element.prop(\"disabled\", enable);\n        },\n\n        focus: function() {\n            this.element.trigger(\"focus\");\n        },\n\n        destroy: function() {\n            var that = this;\n            var customDropZone = $(that.options.dropZone);\n\n            $(document)\n                .add($(\".k-dropzone\", that.wrapper))\n                .add(that.wrapper.closest(\"form\"))\n                .off(that._ns);\n\n            if (customDropZone.length > 0) {\n                customDropZone.off(that._ns);\n            }\n\n            $(that.element).off(NS);\n\n            Widget.fn.destroy.call(that);\n        },\n        pause: function(fileEntry) {\n            this._module.onPause({ target: $(fileEntry, this.wrapper) });\n\n            var pauseIcon = fileEntry.find(\".k-i-pause-sm\");\n            pauseIcon.removeClass(\"k-i-pause-sm\").addClass(\"k-i-play-sm\").attr(\"title\", this.localization.resume);\n            $(pauseIcon).parent().attr(\"aria-label\", this.localization.resume);\n        },\n        resume: function(fileEntry) {\n            this._module.onResume({ target: $(fileEntry, this.wrapper) });\n\n            var playIcon = fileEntry.find(\".k-i-play-sm\");\n            playIcon.removeClass(\"k-i-play-sm\").addClass(\"k-i-pause-sm\").attr(\"title\", this.localization.pause);\n            $(playIcon).parent().attr(\"aria-label\", this.localization.pause);\n        },\n        upload: function() {\n            var that = this;\n\n            that._module.onSaveSelected();\n        },\n\n        getFiles: function() {\n            var that = this;\n            var filesData;\n            var allFiles = [];\n            var listItems = that.wrapper.find(\".k-file\");\n\n            for (var i = 0; i < listItems.length; i++) {\n                filesData = $(listItems[i]).data(\"fileNames\");\n\n                if (filesData) {\n                    for (var j = 0; j < filesData.length; j++) {\n                        allFiles.push(filesData[j]);\n                    }\n                }\n            }\n\n            return allFiles;\n        },\n\n        clearAllFiles: function() {\n            var that = this;\n            var files = that.wrapper.find(\".k-file\");\n\n            files.each(function(index, file) {\n                that._removeFileByDomElement(file, false);\n            });\n        },\n\n        removeAllFiles: function() {\n            var that = this;\n            var files = that.wrapper.find(\".k-file\");\n\n            files.each(function(index, file) {\n                that._removeFileByDomElement(file, true);\n            });\n        },\n\n        removeFileByUid: function(uid) {\n            this._removeFileByUid(uid, true);\n        },\n\n        clearFileByUid: function(uid) {\n            this._removeFileByUid(uid, false);\n        },\n\n        _removeFileByUid: function(uid, shouldSendRemoveRequest) {\n            var that = this;\n            var fileEntry;\n\n            if (typeof uid !== 'string') { return; }\n\n            fileEntry = $('.k-file[' + kendo.attr('uid') + '=\"' + uid + '\"]', that.wrapper);\n\n            if (fileEntry.length > 0) {\n                that._removeFileByDomElement(fileEntry, shouldSendRemoveRequest);\n            }\n        },\n\n        clearFile: function(callback) {\n            this._removeFile(callback, false);\n        },\n\n        removeFile: function(callback) {\n            this._removeFile(callback, true);\n        },\n\n        _removeFile: function(callback, shouldSendRemoveRequest) {\n            var that = this;\n            var files = that.wrapper.find(\".k-file\");\n            var fileData;\n\n            if (typeof callback === \"function\") {\n                files.each(function(index, file) {\n                    fileData = $(file).data(\"fileNames\");\n\n                    if (callback(fileData)) {\n                        that._removeFileByDomElement(file, shouldSendRemoveRequest);\n                    }\n                });\n            }\n        },\n\n        _removeFileByDomElement: function(fileEntry, shouldSendRemoveRequest) {\n            var that = this;\n            var fileData = {\n                target: $(fileEntry, that.wrapper)\n            };\n            var allFiles;\n\n            if (that.options.async.saveUrl) {\n                if ($(fileEntry).hasClass(\"k-file-progress\")) {\n                    that._module.onCancel(fileData);\n                } else {\n                    that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n                }\n\n                allFiles = $(\".k-file\", that.wrapper);\n\n                if (allFiles.length === 0) {\n                    that._hideHeaderUploadstatus();\n                } else {\n                    that._updateHeaderUploadStatus();\n                }\n            } else {\n                that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n            }\n        },\n\n        _addInput: function(sourceInput) {\n            //check if source input is a DOM element. Required for some unit tests\n            if (!sourceInput[0].nodeType) {\n                return;\n            }\n\n            var that = this,\n                input = sourceInput.clone().val(\"\");\n\n            input\n                .insertAfter(that.element)\n                .data(\"kendo\" + that.options.prefix + that.options.name, that);\n\n            $(that.element)\n                .hide()\n                .attr(TABINDEX, \"-1\")\n                .removeAttr(\"id\")\n                .off(NS);\n\n            that._activeInput(input);\n            that.element.trigger(\"focus\");\n        },\n\n        _activeInput: function(input) {\n            var that = this,\n                wrapper = that.wrapper;\n\n            that.element = input;\n\n            if (that.directory) {\n                input.attr(\"webkitdirectory\", that.directory);\n                input.attr(\"directory\", that.directory);\n            }\n\n            input\n                .attr(\"multiple\", that._supportsMultiple() ? that.multiple : false)\n                .attr(\"autocomplete\", \"off\")\n                .on(\"click\" + NS, function(e) {\n                    if (wrapper.hasClass(\"k-state-disabled\")) {\n                        e.preventDefault();\n                    }\n                })\n                .on(\"focus\" + NS, function() {\n                    $(this).parent().addClass(FOCUS_STATE);\n                })\n                .on(\"blur\" + NS, function() {\n                    $(this).parent().removeClass(FOCUS_STATE);\n                })\n                .on(\"change\" + NS, that._onInputChange.bind(that));\n        },\n\n        _adjustFocusState: function(focusedItem, toFocus) {\n            focusedItem.removeClass(FOCUS_STATE);\n            focusedItem.attr(TABINDEX, -1);\n            toFocus.addClass(FOCUS_STATE);\n            toFocus.attr(TABINDEX, 0);\n        },\n\n        _arrowKeyNavigation: function(e, key, focusedItem) {\n            var that = this,\n                kendoKeys = kendo.keys,\n                toFocus;\n\n            if (key === kendoKeys.DOWN) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                toFocus = that.wrapper.find(\".k-upload-files .k-file\").first();\n\n                if (focusedItem.length > 0) {\n                    if (focusedItem.hasClass(\"k-upload-action\")) {\n                        focusedItem.removeClass(FOCUS_STATE);\n                        focusedItem = focusedItem.closest(\".k-file\");\n                    }\n\n                    toFocus = focusedItem.next();\n                }\n\n                that._adjustFocusState(focusedItem, toFocus);\n\n                if (!toFocus || toFocus.length === 0) {\n                    toFocus = that.wrapper.find(\".k-clear-selected\");\n                }\n            } else if (key === kendoKeys.UP) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                toFocus = that.wrapper.find(\".k-upload-files .k-file:last\");\n\n                if (focusedItem.length > 0) {\n                    if (focusedItem.hasClass(\"k-upload-action\")) {\n                        focusedItem.removeClass(FOCUS_STATE);\n                        focusedItem = focusedItem.closest(\".k-file\");\n                    }\n\n                    toFocus = focusedItem.prev();\n                }\n\n                that._adjustFocusState(focusedItem, toFocus);\n            } else if (key === kendoKeys.RIGHT) {\n                if (focusedItem.hasClass(\"k-upload-action\")) {\n                    toFocus = focusedItem.next(\".k-upload-action\");\n\n                    if (!toFocus || toFocus.length === 0) {\n                        toFocus = focusedItem.parent().find(\".k-upload-action:first\");\n                    }\n                } else if (focusedItem.length > 0) {\n                    toFocus = focusedItem.find(\".k-upload-action:first\");\n                }\n\n                if (toFocus && toFocus.length > 0) {\n                    focusedItem.removeClass(FOCUS_STATE);\n                    toFocus.addClass(FOCUS_STATE);\n                }\n            } else if (key === kendoKeys.LEFT) {\n                if (focusedItem.hasClass(\"k-upload-action\")) {\n                    toFocus = focusedItem.prev(\".k-upload-action\");\n\n                    if (!toFocus || toFocus.length === 0) {\n                        toFocus = focusedItem.parent().find(\".k-upload-action:last\");\n                    }\n                } else if (focusedItem.length > 0) {\n                    toFocus = focusedItem.find(\".k-upload-action:last\");\n                }\n\n                if (toFocus && toFocus.length > 0) {\n                    focusedItem.removeClass(FOCUS_STATE);\n                    toFocus.addClass(FOCUS_STATE);\n                }\n            }\n\n            if ((!toFocus || toFocus.length === 0) && (key === kendoKeys.UP || key === kendoKeys.DOWN)) {\n                toFocus = that.element;\n            }\n\n            if (toFocus && toFocus.length > 0) {\n                that._preventFocusRemove = true;\n                toFocus.trigger(\"focus\");\n            }\n        },\n\n        _asyncCommandKeyNavigation: function(key, focusedItem, eventArgs) {\n            var that = this,\n                kendoKeys = kendo.keys,\n                fileEntry = $(focusedItem, that.wrapper);\n\n            that._retryClicked = false;\n\n            if (key === kendoKeys.ESC && focusedItem.find(\".k-i-cancel\").length > 0) {\n                that.trigger(CANCEL, eventArgs);\n                that._module.onCancel({ target: fileEntry });\n                that._checkAllComplete();\n                that._updateHeaderUploadStatus();\n                that._preventFocusRemove = true;\n                that.element.trigger(\"focus\");\n            } else if (key === kendoKeys.SPACEBAR) {\n                if (focusedItem.find(\".k-i-pause-sm\").length > 0) {\n                    that.trigger(PAUSE, eventArgs);\n                    that.pause(focusedItem);\n                    that._updateHeaderUploadStatus();\n                } else if (focusedItem.find(\".k-i-play-sm\").length > 0) {\n                    that.trigger(RESUME, eventArgs);\n                    that.resume(focusedItem);\n                }\n            } else if (key === kendoKeys.ENTER && !focusedItem.is(\".k-file-progress, .k-file-success, .k-file-invalid\")) {\n                if (that.options.async.chunkSize && !that.options.async.concurrent && $('.k-file-progress', that.wrapper).length > 0) {\n                    return;\n                }\n\n                $(\".k-i-warning\", focusedItem).remove();\n                $(\".k-progressbar\", focusedItem).finish().show();\n\n                if (!that._module.metaData[fileEntry.data(\"uid\")]) {\n                    that._module.prepareChunk(fileEntry);\n                }\n\n                that._module.onRetry({ target: fileEntry });\n                that._retryClicked = true;\n            }\n        },\n\n        _commandKeyNavigation: function(key, focusedItem) {\n            var that = this,\n                kendoKeys = kendo.keys,\n                files = focusedItem.data(\"fileNames\"),\n                hasValidationErrors = that._filesContainValidationErrors(files),\n                eventArgs = {\n                    files: files,\n                    headers: {}\n                };\n\n            if (key === kendoKeys.DELETE) {\n                if (!that.trigger(REMOVE, eventArgs)) {\n                    that._module.onRemove({ target: $(focusedItem, that.wrapper) }, eventArgs, !hasValidationErrors);\n                    that._preventFocusRemove = true;\n                    that.element.trigger(\"focus\");\n                }\n            } else if (key === kendoKeys.TAB) {\n                focusedItem.removeClass(FOCUS_STATE);\n                focusedItem.attr(TABINDEX, -1);\n            } else if (!!that.options.async.saveUrl) {\n                that._asyncCommandKeyNavigation(key, focusedItem, eventArgs);\n            }\n        },\n\n        _focusout: function() {\n            var focusedItem = this.wrapper.find(\".k-upload-files .k-file.\" + FOCUS_STATE);\n\n            if (!this._preventFocusRemove) {\n                focusedItem.removeClass(FOCUS_STATE);\n                focusedItem.attr(TABINDEX, -1);\n            } else {\n                this._preventFocusRemove = false;\n            }\n        },\n\n        _onKeyDown: function(e) {\n            var that = this,\n                focusedItem = that.wrapper.find(\".k-upload-files .k-file.\" + FOCUS_STATE + \",\" + \".k-upload-action.\" + FOCUS_STATE),\n                kendoKeys = kendo.keys,\n                commandKeys = [kendoKeys.DELETE, kendoKeys.ESC, kendoKeys.ENTER, kendoKeys.SPACEBAR, kendoKeys.TAB],\n                key = e.keyCode;\n\n            if (key === kendoKeys.DOWN || key === kendoKeys.UP || key === kendoKeys.LEFT || key === kendoKeys.RIGHT) {\n                that._arrowKeyNavigation(e, key, focusedItem);\n            } else if (focusedItem.length > 0 && focusedItem.hasClass(\"k-file\") && commandKeys.indexOf(key) > -1 && !that.wrapper.hasClass(\"k-state-disabled\")) {\n                if (key === kendoKeys.SPACEBAR) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n\n                that._commandKeyNavigation(key, focusedItem);\n            }\n        },\n\n        _onInputChange: function(e) {\n            var that = this;\n            var input = $(e.target);\n            var files = assignGuidToFiles(that._inputFiles(input), that._isAsyncNonBatch());\n\n            validateFiles(files, that.options.validation);\n\n            var prevented = that.trigger(SELECT, { files: files });\n            if (prevented) {\n                that._addInput(input);\n                input.remove();\n            } else {\n                that._module.onSelect({ target: input }, files);\n            }\n        },\n\n        _readDirectory: function(item) {\n            var deferred = new $.Deferred();\n            var dirReader = item.createReader();\n            var allFolderFiles = [];\n\n            var readEntries = function() {\n                dirReader.readEntries(function(entries) {\n                    if (!entries.length) {\n                        deferred.resolve(allFolderFiles);\n                    } else {\n                        allFolderFiles = allFolderFiles.concat(entries);\n                        readEntries();\n                    }\n                }, deferred.reject);\n            };\n\n            readEntries();\n\n             return deferred.promise();\n        },\n\n        _readFile: function(item) {\n            var that = this;\n            var fullpath = item.fullPath;\n\n            item.file(function(file) {\n                    file.relativePath = fullpath.slice(1);\n                    that.droppedFolderFiles.push(file);\n                    that.droppedFolderCounter --;\n                    if (that.droppedFolderCounter === 0) {\n                        setTimeout(function() {\n                            if (that.droppedFolderCounter === 0) {\n                                if (that.droppedFolderFiles.length) {\n                                    that._proceedDroppedItems(that.droppedFolderFiles);\n                                    that.droppedFolderFiles = [];\n                                }\n                            }\n                        },0);\n                    }\n            }, function() {\n                logToConsole(\"File error.\");\n            });\n        },\n\n        _traverseFileTree: function(item, skipCounter) {\n            var that = this;\n            if (!skipCounter) {\n                that.droppedFolderCounter--;\n            }\n\n            this._readDirectory(item).then(function(items) {\n                that.droppedFolderCounter += items.length;\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i].isFile) {\n                        that._readFile(items[i]);\n                    } else if (items[i].isDirectory) {\n                        that._traverseFileTree(items[i]);\n                    }\n                }\n            });\n        },\n\n        _onDrop: function(e) {\n            var dt = e.originalEvent.dataTransfer;\n            var that = this;\n            var droppedFiles = dt.files;\n            var length;\n\n            stopEvent(e);\n           if (that.options.directoryDrop && dt.items) {\n                length = dt.items.length;\n                that.droppedFolderCounter = 0;\n                that.droppedFolderFiles = [];\n\n                for (var i = 0; i < length; i++) {\n                    if (dt.items[i].webkitGetAsEntry) {\n                        var entry = dt.items[i].webkitGetAsEntry();\n\n                        if (entry.isDirectory) {\n                            that._traverseFileTree(entry, true);\n                        } else if (entry.isFile) {\n                            that.droppedFolderFiles.push(dt.files[i]);\n                        }\n                    } else {\n                         that._proceedDroppedItems(droppedFiles);\n                    }\n                }\n           } else {\n               that._proceedDroppedItems(droppedFiles);\n           }\n        },\n\n        _proceedDroppedItems: function(droppedFiles) {\n            var that = this;\n            var files = assignGuidToFiles(getAllFileInfo(droppedFiles), that._isAsyncNonBatch());\n\n              if (droppedFiles.length > 0 && !that.wrapper.hasClass(\"k-state-disabled\")) {\n                if (!that.multiple && files.length > 1) {\n                    files.splice(1, files.length - 1);\n                }\n\n                validateFiles(files, that.options.validation);\n\n                var prevented = that.trigger(SELECT, { files: files });\n                if (!prevented) {\n                    that._module.onSelect({ target: $(\".k-dropzone\", that.wrapper) }, files);\n                }\n            }\n        },\n\n        _filesContainValidationErrors: function(files) {\n            var hasErrors = false;\n\n            $(files).each(function(index, file) {\n                if (file[VALIDATIONERRORS] && file[VALIDATIONERRORS].length > 0) {\n                    hasErrors = true;\n                    return false;\n                }\n            });\n\n            return hasErrors;\n        },\n\n        _isAsyncNonBatch: function() {\n            return (this._async && !this.options.async.batch) || false;\n        },\n\n        _renderInitialFiles: function(files) {\n            var that = this;\n            var idx = 0;\n            files = assignGuidToFiles(files, true);\n\n            for (idx = 0; idx < files.length; idx++) {\n                var currentFile = files[idx];\n\n                var fileEntry = that._enqueueFile(currentFile.name, { fileNames: [ currentFile ] });\n                fileEntry.addClass(\"k-file-success\").data(\"files\", [ files[idx] ]);\n\n                if (that._supportsRemove()) {\n                    that._fileAction(fileEntry, REMOVE);\n                }\n            }\n        },\n\n        _prepareTemplateData: function(name, data) {\n            var filesData = data.fileNames,\n                templateData = {},\n                totalSize = 0,\n                idx = 0;\n\n            for (idx = 0; idx < filesData.length; idx++) {\n                totalSize += filesData[idx].size;\n            }\n\n            templateData.name = name;\n            templateData.size = totalSize;\n            templateData.files = data.fileNames;\n\n            return templateData;\n        },\n\n        _prepareDefaultSingleFileEntryTemplate: function(data) {\n            var that = this;\n            var file = data.fileNames[0];\n            var fileSize = getTotalFilesSizeMessage(data.fileNames);\n            var fileGroup = kendo.getFileGroup(file.extension, true);\n            var errors = file[VALIDATIONERRORS];\n            var template = \"\";\n\n            if (errors && errors.length > 0) {\n                template += \"<li class='k-file k-file-invalid'><div class='k-progressbar k-hidden'><span class='k-progress'></span></div>\" +\n                \"<span class='k-file-invalid-group-wrapper'>\" +\n                    \"<span class='k-file-group k-icon k-i-\" + fileGroup + \"'></span>\" +\n                    \"<span class='k-file-state'></span>\" +\n                \"</span>\" +\n                \"<span class='k-file-name-size-wrapper'>\" +\n                    \"<span class='k-file-name k-file-name-invalid' title='\" + file.name + \"'>\" + file.name + \"</span>\" +\n                    \"<span class='k-file-validation-message k-text-error'>\" + that.localization[errors[0]] + \"</span>\" +\n                \"</span>\";\n            } else {\n                template += \"<li class='k-file'><div class='k-progressbar k-hidden'><span class='k-progress'></span></div>\" +\n                \"<span class='k-file-group-wrapper'>\" +\n                    \"<span class='k-file-group k-icon k-i-\" + fileGroup + \"'></span>\" +\n                    \"<span class='k-file-state'></span>\" +\n                \"</span>\" +\n                \"<span class='k-file-name-size-wrapper'><span class='k-file-name' title='\" + file.name + \"'>\" + file.name + \"</span>\" +\n                \"<span class='k-file-size'>\" + fileSize + \"</span></span>\";\n            }\n\n            template += \"<strong class='k-upload-status'></strong>\";\n\n            return $(template);\n        },\n\n        _prepareDefaultMultipleFileEntriesTemplate: function(data) {\n            var that = this;\n            var files = data.fileNames;\n            var filesHaveValidationErrors = that._filesContainValidationErrors(files);\n            var totalFileSize = getTotalFilesSizeMessage(files);\n            var template = \"\";\n            var i, currentFile;\n\n            if (filesHaveValidationErrors) {\n                template += \"<li class='k-file k-file-invalid'><div class='k-progressbar k-hidden'><span class='k-progress'></span></div>\" +\n                    \"<span class='k-multiple-files-invalid-group-wrapper'>\" +\n                    \"<span class='k-file-group k-icon k-i-files'></span>\";\n            } else {\n                template += \"<li class='k-file'><div class='k-progressbar k-hidden'><span class='k-progress'></span></div>\" +\n                    \"<span class='k-multiple-files-group-wrapper'>\" +\n                        \"<span class='k-file-group k-icon k-i-files'></span>\";\n            }\n\n            template += \"<span class='k-file-state'></span></span>\";\n\n            files.sort(function(a, b) {\n                if (a[VALIDATIONERRORS]) { return -1; }\n\n                if (b[VALIDATIONERRORS]) { return 1; }\n\n                return 0;\n            });\n\n            template += \"<span class='k-multiple-files-wrapper'>\";\n            for (i = 0; i < files.length; i++) {\n                currentFile = files[i];\n                var fileSize = getTotalFilesSizeMessage([currentFile]);\n\n                template += \"<span class='k-file-name-size-wrapper'>\";\n                if (currentFile[VALIDATIONERRORS] && currentFile[VALIDATIONERRORS].length > 0) {\n                    template += \"<span class='k-file-name k-file-name-invalid' title='\" + currentFile.name + \"'>\" + currentFile.name + \"</span>\";\n                } else {\n                    template += \"<span class='k-file-name' title='\" + currentFile.name + \"'>\" + currentFile.name + \"</span>\";\n                }\n                template += \"<span class='k-file-size'>\" + fileSize + \"</span></span>\";\n            }\n\n            if (filesHaveValidationErrors) {\n                template += \"<span class='k-file-validation-message k-text-error'>\" + that.localization.invalidFiles + \"</span>\";\n            } else {\n                template += \"<span class='k-file-information'>Total: \" + files.length + \" files, \" + totalFileSize + \"</span>\";\n            }\n\n            template += \"</span><strong class='k-upload-status'></strong>\";\n\n            return $(template);\n        },\n\n        _enqueueFile: function(name, data) {\n            var that = this;\n            var existingFileEntries;\n            var fileEntry;\n            var fileUid = data.fileNames[0].uid;\n            var fileList = $(\".k-upload-files\", that.wrapper);\n            var options = that.options;\n            var template = options.template;\n            var templateData;\n            var removeEventArgs;\n\n            if (fileList.length === 0) {\n                fileList = $(\"<ul class='k-upload-files k-reset'></ul>\").appendTo(that.wrapper);\n                if (!that.options.showFileList) {\n                    fileList.hide();\n                }\n\n                that.wrapper.removeClass(\"k-upload-empty\");\n            }\n\n            existingFileEntries = $(\".k-file\", fileList);\n\n            if (!template) {\n                if (data.fileNames.length === 1) {\n                    fileEntry = that._prepareDefaultSingleFileEntryTemplate(data);\n                } else {\n                    fileEntry = that._prepareDefaultMultipleFileEntriesTemplate(data);\n                }\n            } else {\n                templateData = that._prepareTemplateData(name, data);\n                template = kendo.template(template);\n\n                fileEntry = $(\"<li class='k-file'>\" + template(templateData) + \"</li>\");\n                fileEntry.find(\".k-upload-action\").addClass(\"k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base\");\n\n                that.angular(\"compile\", function() {\n                    return {\n                        elements: fileEntry,\n                        data: [ templateData ]\n                    };\n                });\n            }\n\n            fileEntry\n                .attr(kendo.attr(\"uid\"), fileUid)\n                .appendTo(fileList)\n                .data(data);\n\n            if (!that._async) {\n                $(\".k-progress\", fileEntry).width('100%');\n            }\n\n            if (!that.multiple && existingFileEntries.length > 0) {\n                removeEventArgs = {\n                    files: existingFileEntries.data(\"fileNames\"),\n                    headers: {}\n                };\n                if (!that.trigger(REMOVE, removeEventArgs)) {\n                    that._module.onRemove({ target: $(existingFileEntries, that.wrapper) }, removeEventArgs);\n                }\n            }\n\n            return fileEntry;\n        },\n\n        _removeFileEntry: function(fileEntry) {\n            var that = this;\n            var fileList = fileEntry.closest(\".k-upload-files\");\n            var allFiles, allCompletedFiles, allInvalidFiles;\n\n            fileEntry.remove();\n            allFiles = $(\".k-file\", fileList);\n            allCompletedFiles = $(\".k-file-success, .k-file-error\", fileList);\n            allInvalidFiles = $(\".k-file-invalid\", fileList);\n\n            if (allCompletedFiles.length === allFiles.length || allInvalidFiles.length === allFiles.length) {\n                this._hideActionButtons();\n            }\n\n            if (allFiles.length === 0) {\n                fileList.remove();\n                that.wrapper.addClass(\"k-upload-empty\");\n                that._hideHeaderUploadstatus();\n            } else {\n                that._updateHeaderUploadStatus();\n            }\n        },\n\n        _fileAction: function(fileElement, actionKey, skipClear) {\n            var classDictionary = { remove: \"k-i-x\", cancel: \"k-i-cancel\", retry: \"k-i-retry\", pause: \"k-i-pause-sm\" };\n            var iconsClassDictionary = { remove: \"k-i-close\", cancel: \"k-i-cancel\", retry: \"k-i-reload-sm\", pause: \"k-i-pause-sm\" };\n            var firstActionButton;\n\n            if (!classDictionary.hasOwnProperty(actionKey)) {\n                return;\n            }\n            if (!skipClear) {\n                this._clearFileAction(fileElement);\n            }\n            if (!this.options.template) {\n                if (!skipClear) {\n                    fileElement.find(\".k-upload-status .k-upload-action\").remove();\n                }\n                fileElement.find(\".k-upload-status\").append(\n                    this._renderAction(classDictionary[actionKey], this.localization[actionKey], iconsClassDictionary[actionKey])\n                );\n            } else {\n                firstActionButton = fileElement.find(\".k-upload-action\").first();\n                if (!firstActionButton.find(\".k-icon\").length) {\n                firstActionButton\n                        .addClass(\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button\")\n                        .append(\"<span class='k-button-icon k-icon \" + iconsClassDictionary[actionKey] + \" \" + classDictionary[actionKey] +\n                                \"' title='\" + this.localization[actionKey] + \"'\" +\n                                \"aria-label='\" + this.localization[actionKey] + \"'></span>\")\n                        .show();\n                } else if (firstActionButton.next(\".k-upload-action\").length) {\n                    firstActionButton.next(\".k-upload-action\")\n                        .addClass(\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button\")\n                        .append(\"<span class='k-button-icon k-icon \" + iconsClassDictionary[actionKey] + \" \" + classDictionary[actionKey] +\n                                \"' title='\" + this.localization[actionKey] + \"'\" +\n                                \"aria-label='\" + this.localization[actionKey] + \"'></span>\")\n                        .show();\n                }\n            }\n        },\n\n        _fileState: function(fileEntry, stateKey) {\n            var localization = this.localization,\n                states = {\n                    uploading: {\n                        text: localization.statusUploading\n                    },\n                    uploaded: {\n                        text: localization.statusUploaded\n                    },\n                    failed: {\n                        text: localization.statusFailed\n                    }\n                },\n                currentState = states[stateKey];\n\n            if (currentState) {\n                $(\"span.k-file-state\", fileEntry).text(currentState.text);\n            }\n        },\n\n        _renderAction: function(actionClass, actionText, iconClass) {\n            if (actionClass !== \"\") {\n                return $(\n                \"<button type='button' class='k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-upload-action' aria-label='\" + actionText + \"' tabindex='-1'>\" +\n                    \"<span class='k-button-icon k-icon \" + iconClass + \" \" + actionClass + \"' title='\" + actionText + \"'></span>\" +\n                \"</button>\"\n                ).on(\"focus\", function() { $(this).addClass(FOCUS_STATE); })\n                 .on(\"blur\", function() { $(this).removeClass(FOCUS_STATE); });\n            }\n            else {\n                return $(\n                \"<button type='button' class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'>\" +\n                    '<span class=\"k-button-text\">' +\n                        actionText +\n                    '</span>' +\n                \"</button>\"\n                );\n            }\n        },\n\n        _clearFileAction: function(fileElement) {\n            $(\".k-upload-action\", fileElement).empty().hide();\n        },\n\n        _onFileAction: function(e) {\n            var that = this;\n            if (!that.wrapper.hasClass(\"k-state-disabled\")) {\n                var button = $(e.target).closest(\".k-upload-action\");\n                var icon = button.find(\".k-icon\");\n                var fileEntry = button.closest(\".k-file\");\n                var files = fileEntry.data(\"fileNames\");\n                var hasValidationErrors = that._filesContainValidationErrors(files);\n                var eventArgs = {\n                    files: files,\n                    headers: {}\n                };\n\n                that._retryClicked = false;\n\n                if (icon.hasClass(\"k-i-x\")) {\n                    if (!that.trigger(REMOVE, eventArgs)) {\n                        that._module.onRemove({ target: $(fileEntry, that.wrapper) }, eventArgs, !hasValidationErrors);\n                        that.element.trigger(\"focus\");\n                    }\n                } else if (icon.hasClass(\"k-i-cancel\")) {\n                    that.trigger(CANCEL, eventArgs);\n                    that._module.onCancel({ target: $(fileEntry, that.wrapper) });\n                    that._checkAllComplete();\n                    that._updateHeaderUploadStatus();\n                    that.element.trigger(\"focus\");\n                } else if (icon.hasClass(\"k-i-pause-sm\")) {\n                    that.trigger(PAUSE, eventArgs);\n                    that.pause(fileEntry);\n                    that._updateHeaderUploadStatus();\n                } else if (icon.hasClass(\"k-i-play-sm\")) {\n                    that.trigger(RESUME, eventArgs);\n                    that.resume(fileEntry);\n                } else if (icon.hasClass(\"k-i-retry\")) {\n                    $(\".k-i-warning\", fileEntry).remove();\n                    $(\".k-progressbar\", fileEntry).finish().show();\n                    that._module.onRetry({ target: $(fileEntry, that.wrapper) });\n                    that._retryClicked = true;\n                }\n\n                fileEntry.addClass(FOCUS_STATE);\n            }\n\n            return false;\n        },\n\n        _onUploadSelected: function() {\n            var that = this;\n            var wrapper = that.wrapper;\n\n            if (!wrapper.hasClass(\"k-state-disabled\")) {\n                this._module.onSaveSelected();\n            }\n\n            return false;\n        },\n\n        _onClearSelected: function() {\n            var that = this;\n            var wrapper = that.wrapper;\n\n            var clearEventArgs = { };\n            if (!wrapper.hasClass(\"k-state-disabled\") && !that.trigger(CLEAR, clearEventArgs)) {\n                that.clearAllFiles();\n            }\n\n            return false;\n        },\n\n        _onFileProgress: function(e, percentComplete) {\n            var progressPct;\n\n            if (percentComplete > 100) {\n                percentComplete = 100;\n            }\n\n            $(\".k-progressbar\", e.target).removeClass('k-hidden');\n\n            if (!this.options.template) {\n                progressPct = $(\".k-upload-pct\", e.target);\n\n                if (progressPct.length === 0) {\n                    $(\".k-upload-status\", e.target).prepend(\"<span class='k-upload-pct'></span>\");\n                }\n\n                if (percentComplete !== 100) {\n                    $(\".k-upload-pct\", e.target).text(percentComplete + \"%\");\n                } else {\n                     $(\".k-upload-pct\", e.target).remove();\n                }\n                $(\".k-progress\", e.target).width(percentComplete + \"%\");\n            } else {\n                $(\".k-progress\", e.target).width(percentComplete + \"%\");\n            }\n\n            this.trigger(PROGRESS, {\n                files: getFileEntry(e).data(\"fileNames\"),\n                percentComplete: percentComplete\n            });\n        },\n\n        _onUploadSuccess: function(e, response, xhr) {\n            var that = this;\n            var fileEntry = getFileEntry(e);\n            var files = fileEntry.data(\"fileNames\");\n            var fileInfo = fileEntry.find('.k-file-information');\n            var fileSize = fileEntry.find('.k-file-size');\n\n            var prevented = that.trigger(SUCCESS, {\n                files: fileEntry.data(\"fileNames\"),\n                response: response,\n                operation: \"upload\",\n                XMLHttpRequest: xhr\n            });\n\n            if (prevented) {\n                that._setUploadErrorState(fileEntry);\n            } else {\n                that._fileState(fileEntry, \"uploaded\");\n                fileEntry.removeClass('k-file-progress').addClass('k-file-success');\n\n                if (fileInfo.length > 0) {\n                    fileInfo.addClass('k-hidden')\n                        .after('<span class=\"k-file-validation-message k-text-success\">' + files.length + ' ' + that.localization.uploadSuccess + '</span>');\n                } else if (fileSize.length > 0) {\n                    fileSize.addClass('k-hidden')\n                        .after('<span class=\"k-file-validation-message k-text-success\">' + that.localization.uploadSuccess + '</span>');\n                }\n\n                that._updateHeaderUploadStatus();\n\n                if (that._supportsRemove()) {\n                    that._fileAction(fileEntry, REMOVE);\n                } else {\n                    that._clearFileAction(fileEntry);\n                }\n            }\n\n            that._hideUploadProgress(fileEntry);\n\n            that._checkAllComplete();\n        },\n\n        _onUploadError: function(e, xhr) {\n            var that = this;\n            var module = that._module;\n            var fileEntry = getFileEntry(e);\n            var fileUid = fileEntry.data(\"uid\");\n\n            that._setUploadErrorState(fileEntry);\n\n            that.trigger(ERROR, {\n                operation: \"upload\",\n                files: fileEntry.data(\"fileNames\"),\n                XMLHttpRequest: xhr\n            });\n\n            logToConsole(\"Server response: \" + xhr.responseText);\n\n            if (!that.options.async.chunkSize) {\n                that._hideUploadProgress(fileEntry);\n            } else {\n                if (module._decreasePosition) {\n                    module._decreasePosition(fileUid);\n                }\n            }\n\n           that._checkAllComplete();\n\n            if (this.options.async.autoRetryAfter) {\n               this._autoRetryAfter(fileEntry);\n            }\n        },\n        _autoRetryAfter: function(fileEntry) {\n            var that = this;\n            var retries = this._module.retries;\n\n            if (!retries) {\n                return;\n            }\n\n            if (!retries[fileEntry.data(\"uid\")]) {\n                retries[fileEntry.data(\"uid\")] = 1;\n            }\n\n            if (retries[fileEntry.data(\"uid\")] <= this.options.async.maxAutoRetries) {\n                retries[fileEntry.data(\"uid\")]++;\n                setTimeout(function() {\n                    that._module.performUpload(fileEntry);\n                },this.options.async.autoRetryAfter);\n            }\n        },\n        _setUploadErrorState: function(fileEntry) {\n            var that = this,\n                uploadPercentage,\n                files = fileEntry.data(\"fileNames\"),\n                fileInfo = fileEntry.find('.k-file-information'),\n                fileSize = fileEntry.find('.k-file-size');\n\n            that._fileState(fileEntry, \"failed\");\n            fileEntry.removeClass('k-file-progress').addClass('k-file-error');\n\n            if (fileInfo.length > 0) {\n                fileInfo.addClass('k-hidden')\n                    .after('<span class=\"k-file-validation-message k-text-error\">' + files.length + ' ' + that.localization.uploadFail + '</span>');\n            } else if (fileSize.length > 0) {\n                fileSize.addClass('k-hidden')\n                    .after('<span class=\"k-file-validation-message k-text-error\">' + that.localization.uploadFail + '</span>');\n            }\n\n            that._updateUploadProgress(fileEntry);\n\n            uploadPercentage = $('.k-upload-pct', fileEntry);\n\n            if (uploadPercentage.length > 0) {\n                uploadPercentage.remove();\n            }\n\n            this._updateHeaderUploadStatus();\n            this._fileAction(fileEntry, \"retry\");\n            this._fileAction(fileEntry, REMOVE, true);\n\n            if (that._retryClicked) {\n                fileEntry.trigger(\"focus\");\n            }\n        },\n\n       _updateUploadProgress: function(fileEntry) {\n            var that = this;\n\n            if (!that.options.async.chunkSize) {\n                $('.k-progress', fileEntry).width(\"100%\");\n            } else {\n                var fileUid = fileEntry.data(\"uid\");\n                if (that._module.metaData) {\n                    var fileMetaData = that._module.metaData[fileUid];\n\n                    if (fileMetaData) {\n                        var percentComplete = fileMetaData.totalChunks ? Math.round(((fileMetaData.chunkIndex) / fileMetaData.totalChunks) * 100) : 100;\n\n                        that._onFileProgress({ target: $(fileEntry, that.wrapper) }, percentComplete);\n                    }\n                }\n            }\n        },\n\n        _hideUploadProgress: function(fileEntry) {\n            $(\".k-progressbar\", fileEntry)\n                .delay(PROGRESSHIDEDELAY)\n                .fadeOut(PROGRESSHIDEDURATION, function() {\n                    $(this).find('.k-progress').css(\"width\", \"0%\");\n                });\n        },\n\n        _showActionButtons: function() {\n            var that = this;\n            var actionsWrapper = $(\".k-action-buttons\", that.wrapper);\n            var uploadButton = $(\".k-upload-selected\", that.wrapper);\n            var clearButton = $(\".k-clear-selected\", that.wrapper);\n\n            if (uploadButton.length === 0) {\n                uploadButton = that._renderAction(\"\", this.localization.uploadSelectedFiles)\n                                   .addClass(\"k-upload-selected\")\n                                   .addClass(\"k-button-solid-primary\")\n                                   .removeClass(\"k-button-solid-base\");\n\n                clearButton = that._renderAction(\"\", this.localization.clearSelectedFiles)\n                                  .addClass(\"k-clear-selected\");\n            }\n\n            if (!actionsWrapper.length) {\n                actionsWrapper = $(\"<div />\")\n                    .addClass(\"k-action-buttons\")\n                    .append(clearButton, uploadButton);\n            }\n\n\n            this.wrapper.append(actionsWrapper);\n        },\n\n        _hideActionButtons: function() {\n            $(\".k-action-buttons\", this.wrapper).remove();\n        },\n\n        _showHeaderUploadStatus: function(isUploading) {\n            var that = this;\n            var localization = that.localization;\n            var dropZone = $(\".k-dropzone\", that.wrapper);\n            var headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n\n            if (headerUploadStatus.length !== 0) {\n                headerUploadStatus.remove();\n            }\n\n            $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n\n            headerUploadStatus = '<strong class=\"k-upload-status k-upload-status-total\"><span class=\"k-icon\"></span></strong>';\n\n            if (isUploading) {\n                headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploading);\n                headerUploadStatus.find(\".k-icon\").addClass(headerStatusIcon.loading);\n            } else {\n                headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploaded);\n                headerUploadStatus.find(\".k-icon\").addClass(headerStatusIcon.warning);\n            }\n\n            if (dropZone.length > 0) {\n                dropZone.append(headerUploadStatus);\n            } else {\n                $('.k-upload-button', that.wrapper).after(headerUploadStatus);\n            }\n        },\n\n        _updateHeaderUploadStatus: function() {\n            var that = this;\n            var headerUploadStatus = $('.k-upload-status-total', this.wrapper);\n            var currentlyUploading = $('.k-file', that.wrapper).not('.k-file-success, .k-file-error, .k-file-invalid');\n            var currentlyInvalid = $('.k-file-invalid', that.wrapper);\n            var currentlyFailed = $('.k-file-error', that.wrapper);\n            var currentlyPaused = $('.k-file', that.wrapper).find(\".k-i-play-sm\");\n            var failedUploads, headerUploadStatusIcon;\n\n            if (currentlyPaused.length &&\n            (currentlyPaused.length === currentlyUploading.length || !that.options.async.concurrent)) {\n                headerUploadStatusIcon = $('.k-icon', headerUploadStatus)\n                                .removeClass()\n                                .addClass(\"k-icon\")\n                                .addClass(\"k-i-pause-sm\");\n\n                headerUploadStatus.html(headerUploadStatusIcon)\n                                  .append(that.localization.headerStatusPaused);\n            } else if (currentlyUploading.length === 0 || currentlyInvalid.length > 0 || currentlyFailed.length > 0) {\n                failedUploads = $('.k-file.k-file-error, .k-file.k-file-invalid', that.wrapper);\n\n                headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n                headerUploadStatusIcon = $('.k-icon', headerUploadStatus).removeClass().addClass(\"k-icon\")\n                                              .addClass(failedUploads.length !== 0 ? headerStatusIcon.warning : headerStatusIcon.success);\n\n                headerUploadStatus.html(headerUploadStatusIcon)\n                                  .append(that.localization.headerStatusUploaded);\n            }\n        },\n\n        _hideHeaderUploadstatus: function() {\n            var that = this,\n                dropZone = that.options.dropZone;\n\n            $('.k-upload-status-total', this.wrapper).remove();\n\n            if (dropZone === \"\") {\n                $('.k-dropzone-hint', that.wrapper).removeClass('k-hidden');\n            }\n        },\n\n        _onParentFormSubmit: function() {\n            var upload = this,\n                element = upload.element;\n\n            if (typeof this._module.onAbort !== 'undefined') {\n                this._module.onAbort();\n            }\n\n            if (!element.value) {\n                var input = $(element);\n\n                // Prevent submitting an empty input\n                input.attr(\"disabled\", \"disabled\");\n\n                window.setTimeout(function() {\n                    // Restore the input so the Upload remains functional\n                    // in case the user cancels the form submit\n                    input.prop(\"disabled\", false);\n                }, 0);\n            }\n        },\n\n        _onParentFormReset: function() {\n            $(\".k-upload-files\", this.wrapper).remove();\n        },\n\n        _supportsFormData: function() {\n            return typeof(FormData) != \"undefined\";\n        },\n\n        _supportsMultiple: function() {\n            var windows = this._userAgent().indexOf(\"Windows\") > -1;\n\n            return !kendo.support.browser.opera &&\n                   !(kendo.support.browser.safari && windows);\n        },\n\n        _supportsDrop: function() {\n            var userAgent = this._userAgent().toLowerCase();\n            var isChrome = /chrome/.test(userAgent);\n            var isSafari = !isChrome && /safari/.test(userAgent);\n            var isWindowsSafari = isSafari && /windows/.test(userAgent);\n\n            return !isWindowsSafari && this._supportsFormData() && (this.options.async.saveUrl);\n        },\n\n        _userAgent: function() {\n            return navigator.userAgent;\n        },\n\n        _setupDropZone: function() {\n            var that = this;\n\n            var ns = that._ns;\n            var dropZone = $(\".k-dropzone\", that.wrapper)\n\n                .on(\"dragenter\" + ns, stopEvent)\n                .on(\"dragover\" + ns, function(e) {\n                    if (e.originalEvent) {\n                        e.originalEvent.dataTransfer.dropEffect = \"copy\";\n                    }\n                    e.preventDefault();\n                 })\n                .on(\"drop\" + ns, that._onDrop.bind(that));\n\n            if (!dropZone.find(\".k-dropzone-hint\").length) {\n                dropZone.append($(\"<em class='k-dropzone-hint'>\" + that.localization.dropFilesHere + \"</em>\"));\n            }\n\n            bindDragEventWrappers(dropZone, ns,\n                function() {\n                    if (!dropZone.closest('.k-upload').hasClass(\"k-state-disabled\")) {\n                        dropZone.addClass(\"k-dropzone-hovered\");\n                    }\n                },\n                function() { dropZone.removeClass(\"k-dropzone-hovered\"); });\n\n            that._bindDocumentDragEventWrappers(dropZone);\n        },\n\n        _setupCustomDropZone: function() {\n            var that = this;\n            var dropZone = $(that.options.dropZone);\n\n            if (!that.wrapper.find(\".k-dropzone-hint\").length) {\n                $(\".k-dropzone\", that.wrapper)\n                    .append($(\"<em class='k-dropzone-hint k-hidden'>\" + that.localization.dropFilesHere + \"</em>\"));\n            } else {\n                // Dropzone hint in upload should be hidden if customDropZone is used\n                $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n            }\n\n            var ns = that._ns;\n            dropZone.on(\"dragenter\" + ns, stopEvent)\n                    .on(\"dragover\" + ns, function(e) {\n                        if (e.originalEvent) {\n                            e.originalEvent.dataTransfer.dropEffect = \"copy\";\n                        }\n                        e.preventDefault();\n                    })\n                    .on(\"drop\" + ns, that._onDrop.bind(that));\n\n            bindDragEventWrappers(dropZone, ns,\n                function(e) {\n                    if (!that.wrapper.hasClass(\"k-state-disabled\")) {\n                        dropZone.removeClass(\"k-dropzone-hovered\");\n                        dropZone.addClass(\"k-dropzone-hovered\");\n                        $(e.target).addClass(\"k-dropzone-hovered\");\n                    }\n                },\n                function() {\n                    dropZone.removeClass(\"k-dropzone-hovered\");\n                    dropZone.find('.k-dropzone-hovered').removeClass(\"k-dropzone-hovered\");\n                }\n            );\n\n            that._bindDocumentDragEventWrappers(dropZone);\n        },\n\n        _bindDocumentDragEventWrappers: function(dropZone) {\n            var that = this;\n            var ns = that._ns;\n\n            bindDragEventWrappers($(document), ns,\n                function() {\n                    if (!that.wrapper.hasClass(\"k-state-disabled\")) {\n                        dropZone.addClass(\"k-dropzone-active\");\n                        dropZone.closest('.k-upload').removeClass('k-upload-empty');\n                        dropZone.find('.k-dropzone-hint').removeClass('k-hidden');\n                    }\n                },\n                function() {\n                    dropZone.removeClass(\"k-dropzone-active\");\n                    dropZone.find('.k-dropzone-hint').addClass('k-hidden');\n                    if ($('li.k-file', dropZone.closest('.k-upload')).length === 0) {\n                        dropZone.closest('.k-upload').addClass('k-upload-empty');\n                    }\n                }\n            );\n        },\n\n        _toggleDropZone: function() {\n            var that = this,\n                dropZone = that.options.dropZone;\n\n            if (!that._supportsDrop()) {\n                return;\n            }\n\n            $(dropZone).off(that._ns);\n            $(\".k-dropzone\", that.wrapper).off(that._ns);\n\n            if (dropZone !== \"\") {\n                that._setupCustomDropZone();\n            } else {\n                that._setupDropZone();\n            }\n        },\n\n        _supportsRemove: function() {\n            return !!this.options.async.removeUrl;\n        },\n\n        _submitRemove: function(fileNames, eventArgs, onSuccess, onError) {\n            var upload = this,\n                removeField = upload.options.async.removeField || \"fileNames\",\n                params = $.extend(eventArgs.data, antiForgeryTokens());\n\n            params[removeField] = fileNames;\n\n            jQuery.ajax({\n                  type: this.options.async.removeVerb,\n                  dataType: \"json\",\n                  dataFilter: normalizeJSON,\n                  url: this.options.async.removeUrl,\n                  traditional: true,\n                  data: params,\n                  headers: eventArgs.headers,\n                  success: onSuccess,\n                  error: onError,\n                  xhrFields: {\n                    withCredentials: this.options.async.withCredentials\n                  }\n            });\n        },\n\n        _wrapInput: function(input) {\n            var that = this;\n            var options = that.options;\n            var hasLabel = !!input.attr(\"id\") && $(\"[for='\" + input.attr(\"id\") + \"']\").length > 0;\n\n            input.wrap(\"<div class='k-widget k-upload'><div class='k-dropzone'><div class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-upload-button'></div></div></div>\");\n\n            if (!options.async.saveUrl) {\n                input.closest(\".k-upload\").addClass(\"k-upload-sync\");\n            } else {\n                input.closest(\".k-upload\").addClass(\"k-upload-async\");\n            }\n\n            input.closest(\".k-upload\").addClass(\"k-upload-empty\");\n\n            input.closest(\".k-button\")\n                .append(\"<span>\" + that.localization.select + \"</span>\");\n\n            if (!hasLabel && !input.attr(\"aria-label\")) {\n                input.attr(\"aria-label\", that.localization.select);\n            }\n\n            return input.closest(\".k-upload\");\n        },\n\n        _checkAllComplete: function() {\n            if ($(\".k-file.k-file-progress\", this.wrapper).length === 0) {\n                this.trigger(COMPLETE);\n            }\n        },\n\n        _inputFiles: function(sourceInput) {\n            return inputFiles(sourceInput);\n        }\n    });\n\n    // Synchronous upload module\n    var syncUploadModule = function(upload) {\n        this.name = \"syncUploadModule\";\n        this.element = upload.wrapper;\n        this.upload = upload;\n        this.element\n            .closest(\"form\")\n                .attr(\"enctype\", \"multipart/form-data\")\n                .attr(\"encoding\", \"multipart/form-data\");\n    };\n\n    syncUploadModule.prototype = {\n        onSelect: function(e, files) {\n            var upload = this.upload;\n            var sourceInput = $(e.target);\n            var filesContainErrors = upload._filesContainValidationErrors(files);\n\n            upload._addInput(sourceInput);\n\n            var fileData = { \"fileNames\": files };\n\n            if (filesContainErrors) {\n                sourceInput.remove();\n            } else {\n                fileData.relatedInput = sourceInput;\n            }\n\n            var file = upload._enqueueFile(getFileName(sourceInput), fileData);\n\n            if (filesContainErrors) {\n                upload._hideUploadProgress(file);\n            }\n\n            upload._fileAction(file, REMOVE);\n        },\n\n        onRemove: function(e) {\n            var fileEntry = getFileEntry(e);\n            var relatedInput = fileEntry.data(\"relatedInput\");\n\n            if (relatedInput) {\n                relatedInput.remove();\n            }\n\n            this.upload._removeFileEntry(fileEntry);\n        }\n    };\n\n    var iframeUploadModule = function(upload) {\n        this.name = \"iframeUploadModule\";\n        this.element = upload.wrapper;\n        this.upload = upload;\n        this.iframes = [];\n    };\n\n    Upload._frameId = 0;\n\n    iframeUploadModule.prototype = {\n        onSelect: function(e, files) {\n            var upload = this.upload;\n            var sourceInput = $(e.target);\n            var hasValidationErrors = upload._filesContainValidationErrors(files);\n\n            var fileEntry = this.prepareUpload(sourceInput, files, hasValidationErrors);\n\n            if (upload.options.async.autoUpload) {\n                if (!hasValidationErrors) {\n                    this.performUpload(fileEntry);\n                } else {\n                    upload._fileAction(fileEntry, REMOVE);\n                    upload._showHeaderUploadStatus(false);\n                }\n            } else {\n                upload._fileAction(fileEntry, REMOVE);\n\n                if (!hasValidationErrors) {\n                    upload._showActionButtons();\n                } else {\n                    upload._updateHeaderUploadStatus();\n                }\n            }\n\n            if (hasValidationErrors) {\n                upload._hideUploadProgress(fileEntry);\n            }\n        },\n\n        prepareUpload: function(sourceInput, files, hasValidationErrors) {\n            var upload = this.upload;\n            var activeInput = $(upload.element);\n            var name = upload.options.async.saveField || sourceInput.attr(\"name\");\n            var fileEntry, fileData, iframe, form;\n\n            upload._addInput(sourceInput);\n            sourceInput.attr(\"name\", name);\n\n            if (!hasValidationErrors) {\n                iframe = this.createFrame(upload.name + \"_\" + Upload._frameId++);\n                this.registerFrame(iframe);\n\n                form = this.createForm(upload.options.async.saveUrl, iframe.attr(\"name\"))\n                           .append(activeInput);\n\n                fileData = { \"frame\": iframe, \"relatedInput\": activeInput, \"fileNames\": files };\n            } else {\n                sourceInput.remove();\n\n                fileData = { \"fileNames\": files };\n            }\n\n            fileEntry = upload._enqueueFile(getFileName(sourceInput), fileData);\n\n            if (iframe) {\n                iframe.data({ \"form\": form, \"file\": fileEntry });\n            }\n\n            return fileEntry;\n        },\n\n        performUpload: function(fileEntry) {\n            var e = { files: fileEntry.data(\"fileNames\") };\n            var iframe = fileEntry.data(\"frame\");\n            var upload = this.upload;\n            var fileValidation = fileEntry.find('.k-file-validation-message');\n            var fileInfo = fileEntry.find('.k-file-information');\n            var fileSize = fileEntry.find('.k-file-size');\n\n            if (!upload.trigger(UPLOAD, e)) {\n                upload._hideActionButtons();\n                upload._showHeaderUploadStatus(true);\n\n                iframe.appendTo(document.body);\n\n                var form = iframe.data(\"form\")\n                    .attr(\"action\", upload.options.async.saveUrl)\n                    .appendTo(document.body);\n\n                e.data = $.extend({ }, e.data, antiForgeryTokens());\n                for (var key in e.data) {\n                    var dataInput = form.find(\"input[name='\" + key + \"']\");\n                    if (dataInput.length === 0) {\n                        dataInput = $(\"<input>\", { type: \"hidden\", name: key })\n                            .prependTo(form);\n                    }\n                    dataInput.val(e.data[key]);\n                }\n\n                upload._fileAction(fileEntry, CANCEL);\n                upload._fileState(fileEntry, \"uploading\");\n                $(fileEntry).removeClass(\"k-file-error\").addClass(\"k-file-progress\");\n\n                if (fileValidation.length > 0) {\n                    fileValidation.remove();\n                }\n\n                if (fileInfo.length > 0) {\n                    fileInfo.removeClass('k-hidden');\n                } else if (fileSize.length > 0) {\n                    fileSize.removeClass('k-hidden');\n                }\n\n                iframe\n                    .one(\"load\", this.onIframeLoad.bind(this));\n\n                form[0].submit();\n            } else {\n                upload._removeFileEntry(iframe.data(\"file\"));\n                this.cleanupFrame(iframe);\n                this.unregisterFrame(iframe);\n            }\n        },\n\n        onSaveSelected: function() {\n            var module = this;\n            var upload = module.upload;\n\n            $(\".k-file\", this.element).each(function() {\n                var fileEntry = $(this);\n                var started = isFileUploadStarted(fileEntry);\n                var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data(\"fileNames\"));\n\n                if (!started && !hasValidationErrors) {\n                    module.performUpload(fileEntry);\n                }\n            });\n        },\n\n        onIframeLoad: function(e) {\n            var iframe = $(e.target),\n                responseText;\n\n            try {\n                responseText = iframe.contents().text();\n            } catch (ex) {\n                responseText = \"Error trying to get server response: \" + ex;\n            }\n\n            this.processResponse(iframe, responseText);\n        },\n\n        processResponse: function(iframe, responseText) {\n            var fileEntry = iframe.data(\"file\"),\n                module = this,\n                fakeXHR = {\n                    responseText: responseText\n                };\n            tryParseJSON(responseText,\n                function(jsonResult) {\n                    $.extend(fakeXHR, { statusText: \"OK\", status: \"200\" });\n                    module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                    module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, fakeXHR);\n\n                    module.cleanupFrame(iframe);\n                    module.unregisterFrame(iframe);\n                },\n                function() {\n                    $.extend(fakeXHR, { statusText: \"error\", status: \"500\" });\n                    module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, fakeXHR);\n                }\n            );\n        },\n\n        onCancel: function(e) {\n            var iframe = $(e.target).data(\"frame\");\n\n            this.stopFrameSubmit(iframe);\n            this.cleanupFrame(iframe);\n            this.unregisterFrame(iframe);\n            this.upload._removeFileEntry(iframe.data(\"file\"));\n        },\n\n        onRetry: function(e) {\n            var fileEntry = getFileEntry(e);\n            this.performUpload(fileEntry);\n        },\n\n        onRemove: function(e, eventArgs, shouldSendRemoveRequest) {\n            var module = this;\n            var upload = module.upload;\n            var fileEntry = getFileEntry(e);\n            var iframe = fileEntry.data(\"frame\");\n\n            if (iframe) {\n                module.unregisterFrame(iframe);\n                upload._removeFileEntry(fileEntry);\n                module.cleanupFrame(iframe);\n            } else {\n                if (fileEntry.hasClass(\"k-file-success\")) {\n                    removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n                } else {\n                    upload._removeFileEntry(fileEntry);\n                }\n            }\n        },\n\n        onAbort: function() {\n            var element = this.element,\n                module = this;\n\n            $.each(this.iframes, function() {\n                $(\"input\", this.data(\"form\")).appendTo(element);\n                module.stopFrameSubmit(this[0]);\n                this.data(\"form\").remove();\n                this.remove();\n            });\n\n            this.iframes = [];\n        },\n\n        createFrame: function(id) {\n            return $(\n                \"<iframe\" +\n                \" name='\" + id + \"'\" +\n                \" id='\" + id + \"'\" +\n                \" style='display:none;' />\"\n            );\n        },\n\n        createForm: function(action, target) {\n            return $(\n                \"<form enctype='multipart/form-data' method='POST'\" +\n                \" action='\" + action + \"'\" +\n                \" target='\" + target + \"'\" +\n                \"/>\");\n        },\n\n        stopFrameSubmit: function(frame) {\n            if (typeof(frame.stop) != \"undefined\") {\n                frame.stop();\n            } else if (frame.document) {\n                frame.document.execCommand(\"Stop\");\n            }\n        },\n\n        registerFrame: function(frame) {\n            this.iframes.push(frame);\n        },\n\n        unregisterFrame: function(frame) {\n            this.iframes = $.grep(this.iframes, function(value) {\n                return value.attr(\"name\") != frame.attr(\"name\");\n            });\n        },\n\n        cleanupFrame: function(frame) {\n            var form = frame.data(\"form\");\n\n            frame.data(\"file\").data(\"frame\", null);\n\n            setTimeout(function() {\n                form.remove();\n                frame.remove();\n            }, 1);\n        }\n    };\n\n    // FormData upload module\n    var formDataUploadModule = function(upload) {\n        this.name = \"formDataUploadModule\";\n        this.element = upload.wrapper;\n        this.upload = upload;\n        this.position = {};\n        this.metaData = {};\n        this.cancelled = {};\n        this.resume = {};\n        this.paused = {};\n        this.retries = {};\n    };\n\n    formDataUploadModule.prototype = {\n        onSelect: function(e, files) {\n            var upload = this.upload;\n            var module = this;\n            var sourceElement = $(e.target);\n            var fileEntries = this.prepareUpload(sourceElement, files);\n            var hasValidationErrors;\n            var prev;\n\n            $.each(fileEntries, function(index) {\n                hasValidationErrors = upload._filesContainValidationErrors($(this.data(\"fileNames\")));\n\n                if (upload.options.async.autoUpload) {\n                    if (!hasValidationErrors) {\n                        if (upload.options.async.chunkSize) {\n                            module.prepareChunk(this);\n                            prev = this.prev();\n\n                            if (upload.options.async.concurrent || (index === 0 && !prev.length) ||\n                             (index === 0 && prev.hasClass(\"k-file-success\"))) {\n                                module.performUpload(this);\n                            }\n                        } else {\n                            module.performUpload(this);\n                        }\n                    } else {\n                        upload._fileAction(this, REMOVE);\n                        upload._showHeaderUploadStatus(false);\n                    }\n                } else {\n                    upload._fileAction(this, REMOVE);\n\n                    if (!hasValidationErrors) {\n                        upload._showActionButtons();\n                        this.addClass(\"k-toupload\");\n                    } else {\n                        upload._updateHeaderUploadStatus();\n                    }\n                }\n\n                if (hasValidationErrors) {\n                    upload._hideUploadProgress(this);\n                }\n            });\n        },\n\n        prepareUpload: function(sourceElement, files) {\n            var fileEntries = this.enqueueFiles(files);\n\n            if (sourceElement.is(\"input\")) {\n                $.each(fileEntries, function() {\n                    $(this).data(\"relatedInput\", sourceElement);\n                });\n                sourceElement.data(\"relatedFileEntries\", fileEntries);\n                this.upload._addInput(sourceElement);\n            }\n\n            return fileEntries;\n        },\n\n        enqueueFiles: function(files) {\n            var upload = this.upload;\n            var name;\n            var i;\n            var filesLength = files.length;\n            var currentFile;\n            var fileEntry;\n            var fileEntries = [];\n\n            if (upload.options.async.batch === true) {\n                name = $.map(files, function(file) { return file.name; }).join(\", \");\n\n                if (upload.directory || upload.options.directoryDrop) {\n                    $(files).each(function() {\n                        if (this.rawFile.webkitRelativePath || this.rawFile.relativePath) {\n                            this.name = this.rawFile.webkitRelativePath || this.rawFile.relativePath;\n                        }\n                    });\n                }\n\n                fileEntry = upload._enqueueFile(name, { fileNames: files });\n                fileEntry.data(\"files\", files);\n\n                fileEntries.push(fileEntry);\n            } else {\n                for (i = 0; i < filesLength; i++) {\n                    currentFile = files[i];\n                    name = currentFile.name;\n                    if (upload.directory || upload.options.directoryDrop) {\n                        if (currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath) {\n                            currentFile.name = currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath;\n                        }\n                    }\n                    fileEntry = upload._enqueueFile(name, { fileNames: [ currentFile ] });\n                    fileEntry.data(\"files\", [ currentFile ]);\n\n                    fileEntries.push(fileEntry);\n                }\n            }\n\n            return fileEntries;\n        },\n\n        performUpload: function(fileEntry) {\n            var upload = this.upload,\n                formData = this.createFormData(),\n                xhr = this.createXHR(),\n                e = {\n                    files: fileEntry.data(\"fileNames\"),\n                    XMLHttpRequest: xhr\n                },\n                files;\n            var fileValidation = fileEntry.find('.k-file-validation-message');\n            var fileInfo = fileEntry.find('.k-file-information');\n            var fileSize = fileEntry.find('.k-file-size');\n\n            if (!upload.trigger(UPLOAD, e)) {\n                if (fileEntry.find(\".k-i-cancel\").length === 0) {\n                    if (upload.options.async.chunkSize) {\n                        upload._fileAction(fileEntry, PAUSE);\n                    }\n                    upload._fileAction(fileEntry, CANCEL, upload.options.async.chunkSize);\n                }\n\n                if (!upload.wrapper.find(\".k-toupload\").length) {\n                    upload._hideActionButtons();\n                }\n\n                upload._showHeaderUploadStatus(true);\n\n                if (e.formData) {\n                    formData = e.formData;\n                } else {\n                    e.data = $.extend({ }, e.data, antiForgeryTokens());\n                    for (var key in e.data) {\n                        formData.append(key, e.data[key]);\n                    }\n\n                    files = fileEntry.data(\"files\");\n                    if (files) {\n                        this.populateFormData(formData, files);\n                    }\n                }\n\n                upload._fileState(fileEntry, \"uploading\");\n                $(fileEntry).removeClass(\"k-file-error\").addClass(\"k-file-progress\");\n\n                if (fileValidation.length > 0) {\n                    fileValidation.remove();\n                }\n\n                if (fileInfo.length > 0) {\n                    fileInfo.removeClass('k-hidden');\n                } else if (fileSize.length > 0) {\n                    fileSize.removeClass('k-hidden');\n                }\n\n                if (upload.options.async.useArrayBuffer && window.FileReader) {\n                    this._readFile(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                } else {\n                    this.postFormData(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                }\n            } else {\n                this.removeFileEntry(fileEntry);\n            }\n        },\n\n        _readFile: function(saveUrl, formData, fileEntry, xhr) {\n            var that = this;\n            var upload = that.upload;\n            var file = fileEntry.data(\"files\")[0];\n\n            var reader = new FileReader();\n            reader.onload = function(e) {\n                try {\n                    if (!that.fileArrayBuffer) {\n                        that.fileArrayBuffer = e.target.result;\n                    } else {\n                        that.fileArrayBuffer = that._appendBuffer(that.fileArrayBuffer, e.target.result);\n                    }\n                } catch (err) {\n                    upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n                    return;\n                }\n\n                if (that.position[file.uid] > file.size) {\n                    that.postFormData(upload.options.async.saveUrl, that.fileArrayBuffer, fileEntry, xhr);\n                    that.fileArrayBuffer = null;\n                } else {\n                    that._readFile(saveUrl, formData, fileEntry, xhr);\n                }\n            };\n            reader.onerror = function() {\n                upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n            };\n            reader.readAsArrayBuffer(that._getCurrentChunk(file.rawFile, file.uid));\n        },\n\n        _appendBuffer: function(buffer1, buffer2) {\n            var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n\n            tmp.set(new Uint8Array(buffer1), 0);\n            tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n\n            return tmp.buffer;\n        },\n\n        onSaveSelected: function() {\n            var module = this;\n            var upload = module.upload;\n\n            $(\".k-toupload\", this.element).filter(function() {\n                var fileEntry = $(this);\n                var started = isFileUploadStarted(fileEntry);\n                var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data(\"fileNames\"));\n\n                return !started && !hasValidationErrors;\n            }).each(function(index) {\n                var fileEntry = $(this);\n                var prevEntry = fileEntry.prev();\n\n                fileEntry.removeClass(\"k-toupload\");\n                if (upload.options.async.chunkSize) {\n                    module.prepareChunk(fileEntry);\n\n                    if (upload.options.async.concurrent || (index === 0 && !prevEntry.length) ||\n                        (index === 0 && prevEntry.hasClass(\"k-file-success\") || prevEntry.hasClass(\"k-file-error\"))) {\n                        module.performUpload(fileEntry);\n                    }\n                } else {\n                    module.performUpload(fileEntry);\n                }\n            });\n        },\n\n        onCancel: function(e) {\n            var fileEntry = getFileEntry(e);\n\n            if (this.upload.options.async.chunkSize) {\n                this.cancelled[fileEntry.data(\"uid\")] = true;\n            }\n            this.stopUploadRequest(fileEntry);\n            this.removeFileEntry(fileEntry);\n        },\n\n        onPause: function(e) {\n            var fileEntry = getFileEntry(e);\n            var fileUid = fileEntry.data(\"uid\");\n            var async = this.upload.options.async;\n\n            if (async.chunkSize) {\n                this.retries[fileUid] = async.maxAutoRetries + 1;\n                this.paused[fileUid] = true;\n                this.resume[fileUid] = false;\n            }\n        },\n\n        onResume: function(e) {\n            var fileEntry = getFileEntry(e);\n            var fileUid = fileEntry.data(\"uid\");\n\n            if (this.upload.options.async.chunkSize) {\n                delete this.paused[fileUid];\n                this.resume[fileUid] = true;\n                this.retries[fileEntry.data(\"uid\")] = 1;\n                this._increaseChunkIndex(fileUid);\n                this.performUpload(fileEntry);\n            }\n        },\n\n        onRetry: function(e) {\n            var fileEntry = getFileEntry(e);\n            var async = this.upload.options.async;\n\n            if (async.chunkSize) {\n                this.retries[fileEntry.data(\"uid\")] = async.maxAutoRetries + 1;\n                delete this.paused[fileEntry.data(\"uid\")];\n            }\n\n            this.performUpload(fileEntry);\n        },\n\n        onRemove: function(e, eventArgs, shouldSendRemoveRequest) {\n            var module = this;\n            var upload = module.upload;\n            var fileEntry = getFileEntry(e);\n            var async = this.upload.options.async;\n\n            if (async.chunkSize) {\n                this.retries[fileEntry.data(\"uid\")] = async.maxAutoRetries + 1;\n            }\n\n            if (fileEntry.hasClass(\"k-file-success\")) {\n                removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n            } else {\n                module.removeFileEntry(fileEntry);\n            }\n        },\n\n        createXHR: function() {\n            return new XMLHttpRequest();\n        },\n\n        postFormData: function(url, data, fileEntry, xhr) {\n            var module = this;\n\n            fileEntry.data(\"request\", xhr);\n\n            xhr.addEventListener(\"load\", function(e) {\n                module.onRequestSuccess.call(module, e, fileEntry);\n            }, false);\n\n            xhr.addEventListener(ERROR, function(e) {\n                module.onRequestError.call(module, e, fileEntry);\n            }, false);\n\n            xhr.upload.addEventListener(\"progress\", function(e) {\n                module.onRequestProgress.call(module, e, fileEntry);\n            }, false);\n\n            xhr.open(\"POST\", url, true);\n            xhr.withCredentials = this.upload.options.async.withCredentials;\n\n            var accept = this.upload.options.async.accept;\n            if (accept) {\n                xhr.setRequestHeader(\"Accept\", accept);\n            }\n\n            xhr.send(data);\n        },\n\n        createFormData: function() {\n            return new FormData();\n        },\n\n        populateFormData: function(data, files) {\n            var chunk;\n            var i;\n            var length = files.length;\n            var uid;\n            var upload = this.upload;\n\n            if (upload.options.async.chunkSize) {\n                 uid = files[0].uid;\n                 chunk = this._getCurrentChunk(files[0].rawFile, uid);\n\n                data.append(\n                    upload.options.async.saveField || upload.name,\n                    chunk\n                );\n\n                var serializedMetaData = JSON.stringify(this.metaData[uid]);\n                data.append(\"metadata\", serializedMetaData);\n            } else {\n                 for (i = 0; i < length; i++) {\n                    data.append(\n                        upload.options.async.saveField || upload.name,\n                        files[i].rawFile\n                    );\n                 }\n            }\n\n            return data;\n        },\n\n        onRequestSuccess: function(e, fileEntry) {\n            var xhr = e.target,\n                module = this;\n\n            function raiseError() {\n                module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, xhr);\n            }\n\n            function parseSuccess(jsonResult) {\n                var batch = module.upload.options.async.batch;\n                var chunkSize = module.upload.options.async.chunkSize;\n                var concurrent = module.upload.options.async.concurrent;\n                var fileUid = jsonResult.fileUid;\n\n                if (module.paused[fileUid] || module.cancelled[fileUid]) {\n                    return;\n                }\n\n                delete module.retries[fileUid];\n\n                if (chunkSize && !batch && !jsonResult.uploaded) {\n\n                    module._increaseChunkIndex(fileUid);\n                    module.performUpload(fileEntry);\n                } else if (chunkSize && !batch && !concurrent && fileEntry.next().length && !fileEntry.next().hasClass(\"k-toupload\")) {\n                        module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                        module._resetChunkIndex(fileUid);\n                        module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n\n                        module.performUpload(fileEntry.next());\n                } else {\n                    module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                    module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n                    module.cleanupFileEntry(fileEntry);\n                }\n            }\n\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                tryParseJSON(xhr.responseText,\n                    parseSuccess,\n                    raiseError\n                );\n            } else {\n                raiseError();\n            }\n        },\n\n        onRequestError: function(e, fileEntry) {\n            var xhr = e.target;\n\n            this.upload._onUploadError({ target: $(fileEntry, this.upload.wrapper) }, xhr);\n        },\n\n        cleanupFileEntry: function(fileEntry) {\n            var relatedInput = fileEntry.data(\"relatedInput\"),\n                uploadComplete = true;\n\n            if (relatedInput) {\n                $.each(relatedInput.data(\"relatedFileEntries\") || [], function() {\n                    // Exclude removed file entries and self\n                    if (this.parent().length > 0 && this[0] != fileEntry[0]) {\n                        uploadComplete = uploadComplete && this.hasClass(\"k-file-success\");\n                    }\n                });\n\n                if (uploadComplete) {\n                    relatedInput.remove();\n                }\n            }\n        },\n\n        removeFileEntry: function(fileEntry) {\n            var chunkSize = this.upload.options.async.chunkSize;\n            var concurrent = this.upload.options.async.concurrent;\n            var isUploadButtonVisible = this.upload.wrapper.find(\".k-upload-selected\").length > 0;\n\n            this.cleanupFileEntry(fileEntry);\n            if (chunkSize && !concurrent && !isUploadButtonVisible) {\n                 if (fileEntry.next().length) {\n                     this.performUpload(fileEntry.next());\n                 }\n            }\n            this.upload._removeFileEntry(fileEntry);\n        },\n\n        onRequestProgress: function(e, fileEntry) {\n            var percentComplete = Math.round(e.loaded * 100 / e.total);\n            var fileUid = fileEntry.data(\"uid\");\n            var fileMetaData;\n\n            if (this.upload.options.async.chunkSize) {\n                fileMetaData = this.metaData[fileUid];\n                percentComplete = fileMetaData && fileMetaData.totalChunks ? Math.round(((fileMetaData.chunkIndex) / fileMetaData.totalChunks) * 100) : 100;\n            }\n            this.upload._onFileProgress({ target: $(fileEntry, this.upload.wrapper) }, percentComplete);\n        },\n\n        stopUploadRequest: function(fileEntry) {\n            if (fileEntry.data(\"request\")) {\n                fileEntry.data(\"request\").abort();\n            }\n        },\n\n        prepareChunk: function(fileEntry) {\n            var file = fileEntry.data(\"files\")[0];\n            var rawFile = file.rawFile;\n            var uid = file.uid;\n            var chunkSize = this.upload.options.async.chunkSize;\n            this.position[uid] = 0;\n\n            this.metaData[uid] = {\n                chunkIndex: 0,\n                contentType: rawFile.type,\n                fileName: rawFile.name,\n                relativePath: file.name,\n                totalFileSize: rawFile.size,\n                totalChunks: Math.ceil(rawFile.size / chunkSize),\n                uploadUid: uid\n            };\n        },\n\n        _decreaseChunkIndex: function(uid) {\n            this.metaData[uid].chunkIndex--;\n        },\n\n        _increaseChunkIndex: function(uid) {\n            this.metaData[uid].chunkIndex++;\n        },\n\n        _resetChunkIndex: function(uid) {\n            this.metaData[uid].chunkIndex = 0;\n        },\n\n        _decreasePosition: function(uid) {\n            this.position[uid] -= this.upload.options.async.chunkSize;\n        },\n\n        _getCurrentChunk: function(file, uid) {\n            var oldPosition = this.position[uid];\n            var methodToInvoke;\n            var async = this.upload.options.async;\n            var chunkSize = async.chunkSize || async.bufferChunkSize;\n\n            if (!this.position[uid]) {\n                this.position[uid] = 0;\n            }\n            this.position[uid] += chunkSize;\n\n            if (!!(methodToInvoke = this._getChunker(file))) {\n                return file[methodToInvoke](oldPosition, this.position[uid]);\n            } else {\n                return file;\n            }\n        },\n\n        _getChunker: function(file) {\n            if (file.slice) {\n                return \"slice\";\n            } else if (file.mozSlice) {\n                return \"mozSlice\";\n            } else if (file.webkitSlice) {\n                    return \"webkitSlice\";\n            } else {\n                return null;\n            }\n        }\n    };\n\n    // Helper functions\n    function getFileName(input) {\n        return $.map(inputFiles(input), function(file) {\n            return file.name;\n        }).join(\", \");\n    }\n\n    function inputFiles($input) {\n        var input = $input[0];\n\n        if (input.files) {\n            return getAllFileInfo(input.files);\n        } else {\n            return [{\n                name: stripPath(input.value),\n                extension: getFileExtension(input.value),\n                size: null\n            }];\n        }\n    }\n\n    function getAllFileInfo(rawFiles) {\n        return $.map(rawFiles, function(file) {\n            return getFileInfo(file);\n        });\n    }\n\n    function getFileInfo(rawFile) {\n        // Older Firefox versions (before 3.6) use fileName and fileSize\n        var fileName = rawFile.name || rawFile.fileName;\n        return {\n            name: kendo.htmlEncode(fileName),\n            extension: getFileExtension(fileName),\n            size: typeof rawFile.size == \"number\" ? rawFile.size : rawFile.fileSize, //rawFile.size || rawFile.fileSize,\n            rawFile: rawFile\n        };\n    }\n\n    function getFileExtension(fileName) {\n        var matches = fileName.match(rFileExtension);\n        return matches ? matches[0] : \"\";\n    }\n\n    function stripPath(name) {\n        var slashIndex = name.lastIndexOf(\"\\\\\");\n        return (slashIndex != -1) ? name.substr(slashIndex + 1) : name;\n    }\n\n    function assignGuidToFiles(files, unique) {\n        var uid = kendo.guid();\n\n        return $.map(files, function(file) {\n            file.uid = unique ? kendo.guid() : uid;\n\n            return file;\n        });\n    }\n\n    function validateFiles(files, validationInfo) {\n        var allowedExtensions = parseAllowedExtensions(validationInfo.allowedExtensions);\n        var maxFileSize = validationInfo.maxFileSize;\n        var minFileSize = validationInfo.minFileSize;\n\n        for (var i = 0; i < files.length; i++) {\n            validateFileExtension(files[i], allowedExtensions);\n            validateFileSize(files[i], minFileSize, maxFileSize);\n        }\n    }\n\n    function parseAllowedExtensions(extensions) {\n        var allowedExtensions = $.map(extensions, function(ext) {\n            var parsedExt = (ext.substring(0, 1) === \".\") ? ext : (\".\" + ext);\n            return parsedExt.toLowerCase();\n        });\n\n        return allowedExtensions;\n    }\n\n    function validateFileExtension(file, allowedExtensions) {\n        if (allowedExtensions.length > 0) {\n            if (allowedExtensions.indexOf(file.extension.toLowerCase()) < 0) {\n                file.validationErrors = file.validationErrors || [];\n                if ($.inArray(INVALIDFILEEXTENSION, file.validationErrors) === -1) {\n                    file.validationErrors.push(INVALIDFILEEXTENSION);\n                }\n            }\n        }\n    }\n\n    function validateFileSize(file, minFileSize, maxFileSize) {\n        if (minFileSize !== 0 && file.size < minFileSize) {\n            file.validationErrors = file.validationErrors || [];\n            if ($.inArray(INVALIDMINFILESIZE, file.validationErrors) === -1) {\n                file.validationErrors.push(INVALIDMINFILESIZE);\n            }\n        }\n\n        if (maxFileSize !== 0 && file.size > maxFileSize) {\n            file.validationErrors = file.validationErrors || [];\n            if ($.inArray(INVALIDMAXFILESIZE, file.validationErrors) === -1) {\n                file.validationErrors.push(INVALIDMAXFILESIZE);\n            }\n        }\n    }\n\n    function getTotalFilesSizeMessage(files) {\n        var totalSize = 0;\n\n        if (typeof files[0].size == \"number\") {\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].size) {\n                    totalSize += files[i].size;\n                }\n            }\n        } else {\n            return \"\";\n        }\n\n        totalSize /= 1024;\n\n        if (totalSize < 1024) {\n            return totalSize.toFixed(2) + \" KB\";\n        } else {\n            return (totalSize / 1024).toFixed(2) + \" MB\";\n        }\n    }\n\n    function shouldRemoveFileEntry(upload) {\n        return !upload.multiple && $(\".k-file\", upload.wrapper).length > 1;\n    }\n\n    function removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest) {\n        if (!upload._supportsRemove()) {\n            if (shouldRemoveFileEntry(upload) || !shouldSendRemoveRequest) {\n                upload._removeFileEntry(fileEntry);\n            }\n\n            return;\n        }\n\n        var files = fileEntry.data(\"fileNames\");\n        var fileNames = $.map(files, function(file) { return file.name; });\n\n        if (shouldSendRemoveRequest === false) {\n            upload._removeFileEntry(fileEntry);\n\n            return;\n        }\n\n        upload._submitRemove(fileNames, eventArgs,\n            function onSuccess(data, textStatus, xhr) {\n                var prevented = upload.trigger(SUCCESS, {\n                    operation: \"remove\",\n                    files: files,\n                    response: data,\n                    XMLHttpRequest: xhr\n                });\n\n                if (!prevented) {\n                    upload._removeFileEntry(fileEntry);\n                }\n            },\n\n            function onError(xhr) {\n                if (shouldRemoveFileEntry(upload)) {\n                    upload._removeFileEntry(fileEntry);\n                }\n\n                upload.trigger(ERROR, {\n                    operation: \"remove\",\n                    files: files,\n                    XMLHttpRequest: xhr\n                });\n\n                logToConsole(\"Server response: \" + xhr.responseText);\n            }\n        );\n    }\n\n    function tryParseJSON(input, onSuccess, onError) {\n        var success = false,\n            json = \"\";\n\n        try {\n            json = JSON.parse(normalizeJSON(input));\n            success = true;\n        } catch (e) {\n            onError();\n        }\n\n        if (success) {\n            onSuccess(json);\n        }\n    }\n\n    function normalizeJSON(input) {\n        if (typeof input === \"undefined\" || input === \"\") {\n            input = \"{}\";\n        }\n\n        return input;\n    }\n\n    function stopEvent(e) {\n        if (e.originalEvent) {\n            e.originalEvent.dataTransfer.dropEffect = \"copy\";\n        }\n        e.stopPropagation(); e.preventDefault();\n    }\n\n    function bindDragEventWrappers(element, namespace, onDragEnter, onDragLeave) {\n        var hideInterval, lastDrag;\n\n        element\n            .on(\"dragenter\" + namespace, function(e) {\n                onDragEnter(e);\n                lastDrag = new Date();\n\n                if (!hideInterval) {\n                    hideInterval = setInterval(function() {\n                        var sinceLastDrag = new Date() - lastDrag;\n                        if (sinceLastDrag > 100) {\n                            onDragLeave();\n\n                            clearInterval(hideInterval);\n                            hideInterval = null;\n                        }\n                    }, 100);\n                }\n            })\n            .on(\"dragover\" + namespace, function() {\n                lastDrag = new Date();\n            });\n    }\n\n    function isFileUploadStarted(fileEntry) {\n        return fileEntry.is(\".k-file-progress, .k-file-success, .k-file-error\");\n    }\n\n    function getFileEntry(e) {\n        return $(e.target).closest(\".k-file\");\n    }\n\n    kendo.ui.plugin(Upload);\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n\n"],"names":["define","__meta__","id","name","category","description","depends","$","window","kendo","jQuery","undefined","Widget","ui","antiForgeryTokens","logToConsole","rFileExtension","NS","SELECT","UPLOAD","SUCCESS","ERROR","COMPLETE","CANCEL","CLEAR","PAUSE","RESUME","PROGRESS","REMOVE","VALIDATIONERRORS","INVALIDMAXFILESIZE","INVALIDMINFILESIZE","INVALIDFILEEXTENSION","PROGRESSHIDEDELAY","PROGRESSHIDEDURATION","FOCUS_STATE","TABINDEX","headerStatusIcon","loading","warning","success","Upload","extend","init","element","options","that","this","fn","call","multiple","directory","localization","activeInput","wrapper","closest","length","_wrapInput","_activeInput","toggle","enabled","ns","_ns","guid","on","_onParentFormSubmit","bind","_onParentFormReset","_initUploadModule","_toggleDropZone","_onFileAction","_onClearSelected","_onUploadSelected","_onKeyDown","_focusout","val","_onInputChange","target","events","showFileList","template","files","async","autoRetryAfter","bufferChunkSize","maxAutoRetries","removeVerb","autoUpload","withCredentials","accept","useArrayBuffer","select","cancel","retry","remove","pause","resume","clearSelectedFiles","uploadSelectedFiles","dropFilesHere","invalidFiles","statusUploading","statusUploaded","statusWarning","statusFailed","headerStatusUploading","headerStatusPaused","headerStatusUploaded","uploadSuccess","uploadFail","invalidMaxFileSize","invalidMinFileSize","invalidFileExtension","validation","allowedExtensions","maxFileSize","minFileSize","dropZone","saveUrl","_module","_supportsFormData","formDataUploadModule","iframeUploadModule","_async","initialFiles","_renderInitialFiles","syncUploadModule","setOptions","off","attr","_supportsMultiple","enable","disable","toggleClass","prop","focus","trigger","destroy","customDropZone","document","add","fileEntry","onPause","pauseIcon","find","removeClass","addClass","parent","onResume","playIcon","upload","onSaveSelected","getFiles","filesData","allFiles","listItems","i","data","j","push","clearAllFiles","each","index","file","_removeFileByDomElement","removeAllFiles","removeFileByUid","uid","_removeFileByUid","clearFileByUid","shouldSendRemoveRequest","clearFile","callback","_removeFile","removeFile","fileData","hasClass","onCancel","onRemove","_hideHeaderUploadstatus","_updateHeaderUploadStatus","_addInput","sourceInput","nodeType","input","clone","insertAfter","prefix","hide","removeAttr","e","preventDefault","_adjustFocusState","focusedItem","toFocus","_arrowKeyNavigation","key","kendoKeys","keys","DOWN","stopPropagation","first","next","UP","prev","RIGHT","LEFT","_preventFocusRemove","_asyncCommandKeyNavigation","eventArgs","_retryClicked","ESC","_checkAllComplete","SPACEBAR","ENTER","is","chunkSize","concurrent","finish","show","metaData","prepareChunk","onRetry","_commandKeyNavigation","hasValidationErrors","_filesContainValidationErrors","headers","DELETE","TAB","commandKeys","keyCode","indexOf","assignGuidToFiles","_inputFiles","_isAsyncNonBatch","validateFiles","prevented","onSelect","_readDirectory","item","deferred","Deferred","dirReader","createReader","allFolderFiles","readEntries","entries","resolve","concat","reject","promise","_readFile","fullpath","fullPath","relativePath","slice","droppedFolderFiles","droppedFolderCounter","setTimeout","_proceedDroppedItems","_traverseFileTree","skipCounter","then","items","isFile","isDirectory","_onDrop","dt","originalEvent","dataTransfer","droppedFiles","stopEvent","directoryDrop","webkitGetAsEntry","entry","getAllFileInfo","splice","hasErrors","batch","idx","currentFile","_enqueueFile","fileNames","_supportsRemove","_fileAction","_prepareTemplateData","templateData","totalSize","size","_prepareDefaultSingleFileEntryTemplate","fileSize","getTotalFilesSizeMessage","fileGroup","getFileGroup","extension","errors","_prepareDefaultMultipleFileEntriesTemplate","filesHaveValidationErrors","totalFileSize","sort","a","b","existingFileEntries","fileUid","fileList","removeEventArgs","appendTo","angular","elements","width","_removeFileEntry","allCompletedFiles","allInvalidFiles","_hideActionButtons","fileElement","actionKey","skipClear","classDictionary","iconsClassDictionary","firstActionButton","hasOwnProperty","_clearFileAction","append","_renderAction","_fileState","stateKey","states","uploading","text","uploaded","failed","currentState","actionClass","actionText","iconClass","empty","button","icon","clearEventArgs","_onFileProgress","percentComplete","progressPct","prepend","getFileEntry","_onUploadSuccess","response","xhr","fileInfo","operation","XMLHttpRequest","_setUploadErrorState","after","_hideUploadProgress","_onUploadError","module","responseText","_decreasePosition","_autoRetryAfter","retries","performUpload","uploadPercentage","_updateUploadProgress","fileMetaData","totalChunks","Math","round","delay","fadeOut","css","_showActionButtons","actionsWrapper","uploadButton","clearButton","_showHeaderUploadStatus","isUploading","headerUploadStatus","currentlyUploading","not","currentlyInvalid","currentlyFailed","currentlyPaused","failedUploads","headerUploadStatusIcon","html","onAbort","value","windows","_userAgent","support","browser","opera","safari","_supportsDrop","userAgent","toLowerCase","isChrome","test","isSafari","isWindowsSafari","navigator","_setupDropZone","dropEffect","bindDragEventWrappers","_bindDocumentDragEventWrappers","_setupCustomDropZone","removeUrl","_submitRemove","onSuccess","onError","removeField","params","ajax","type","dataType","dataFilter","normalizeJSON","url","traditional","error","xhrFields","hasLabel","wrap","inputFiles","prototype","filesContainErrors","relatedInput","getFileName","iframes","_frameId","prepareUpload","saveField","iframe","form","createFrame","registerFrame","createForm","frame","fileValidation","body","dataInput","prependTo","one","onIframeLoad","submit","cleanupFrame","unregisterFrame","started","isFileUploadStarted","contents","ex","processResponse","fakeXHR","tryParseJSON","jsonResult","statusText","status","stopFrameSubmit","removeUploadedFile","action","stop","execCommand","grep","position","cancelled","paused","map","join","$input","stripPath","getFileExtension","rawFiles","getFileInfo","rawFile","fileName","htmlEncode","matches","match","slashIndex","lastIndexOf","substr","unique","validationInfo","parseAllowedExtensions","validateFileExtension","validateFileSize","extensions","ext","parsedExt","substring","validationErrors","inArray","toFixed","shouldRemoveFileEntry","textStatus","json","JSON","parse","namespace","onDragEnter","onDragLeave","hideInterval","lastDrag","Date","setInterval","sinceLastDrag","clearInterval","sourceElement","fileEntries","enqueueFiles","filesLength","webkitRelativePath","formData","createFormData","createXHR","populateFormData","FileReader","postFormData","removeFileEntry","reader","onload","fileArrayBuffer","result","_appendBuffer","err","onerror","readAsArrayBuffer","_getCurrentChunk","buffer1","buffer2","tmp","Uint8Array","byteLength","set","buffer","filter","prevEntry","stopUploadRequest","_increaseChunkIndex","addEventListener","onRequestSuccess","onRequestError","onRequestProgress","open","setRequestHeader","send","FormData","chunk","serializedMetaData","stringify","raiseError","parseSuccess","_resetChunkIndex","cleanupFileEntry","uploadComplete","isUploadButtonVisible","loaded","total","abort","chunkIndex","contentType","ceil","uploadUid","_decreaseChunkIndex","oldPosition","methodToInvoke","_getChunker","mozSlice","webkitSlice","plugin","amd","a1","a2","a3"],"mappings":"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"}