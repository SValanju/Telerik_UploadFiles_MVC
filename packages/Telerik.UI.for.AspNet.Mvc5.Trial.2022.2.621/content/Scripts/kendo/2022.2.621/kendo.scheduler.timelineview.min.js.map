{"version":3,"file":"kendo.scheduler.timelineview.min.js","sources":["kendo.scheduler.timelineview.js"],"sourcesContent":["(function(f, define) {\n    define('kendo.scheduler.timelineview',[ \"kendo.scheduler.view\" ], f);\n})(function() {\n\nvar __meta__ = { // jshint ignore:line\n    id: \"scheduler.timelineview\",\n    name: \"Scheduler Timeline View\",\n    category: \"web\",\n    description: \"The Scheduler Timeline View\",\n    depends: [ \"scheduler.view\" ],\n    hidden: true\n};\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        setTime = kendo.date.setTime,\n        SchedulerView = ui.SchedulerView,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        extend = $.extend,\n        getDate = kendo.date.getDate,\n        getMilliseconds = kendo.date.getMilliseconds,\n        MS_PER_DAY = kendo.date.MS_PER_DAY,\n        MS_PER_MINUTE = kendo.date.MS_PER_MINUTE,\n        CURRENT_TIME_MARKER_CLASS = \"k-current-time\",\n        CURRENT_TIME_MARKER_ARROW_CLASS = \"k-current-time-arrow\",\n        SCHEDULER_HEADER_WRAP_CLASS = \"k-scheduler-header-wrap\",\n        INVERSE_COLOR_CLASS = \"k-event-inverse\",\n        BORDER_SIZE_COEFF = 0.8666,\n        NS = \".kendoTimelineView\";\n\n    var EVENT_TEMPLATE = kendo.template('<div>' +\n        '<div class=\"k-event-template k-event-time\">#:kendo.format(\"{0:t} - {1:t}\", start, end)#</div>' +\n        '<div class=\"k-event-template\">${title}</div></div>'),\n        DATA_HEADER_TEMPLATE = kendo.template(\"<span class='k-link k-nav-day'>#=kendo.format('{0:m}', date)#</span>\"),\n        EVENT_WRAPPER_STRING = '<div role=\"button\" ' +\n                'aria-label=\"#: ariaLabel #\" ' +\n                'data-#=ns#uid=\"#=uid#\"' +\n                '#if (resources[0]) { #' +\n                    'style=\"background-color:#=resources[0].color#; border-color: #=resources[0].color#\"' +\n                    'class=\"k-event\" ' +\n                '#} else {#' +\n                    'class=\"k-event\"' +\n                '#}#' +\n                '>' +\n                '<span class=\"k-event-actions\">' +\n                    '# if(data.tail) {#' +\n                        '<span class=\"k-icon k-i-arrow-60-left\"></span>' +\n                    '#}#' +\n                    '# if(data.isException()) {#' +\n                        '<span class=\"k-icon k-i-non-recurrence\"></span>' +\n                    '# } else if(data.isRecurring()) {#' +\n                        '<span class=\"k-icon k-i-reload\"></span>' +\n                    '# } #' +\n                '</span>' +\n                '{0}' +\n                '<span class=\"k-event-actions\">' +\n                    '#if (showDelete) {#' +\n                        '<a href=\"\\\\#\" class=\"k-link k-event-delete\" title=\"${data.messages.destroy}\" aria-label=\"${data.messages.destroy}\"><span class=\"k-icon k-i-close\"></span></a>' +\n                    '#}#' +\n                    '# if(data.head) {#' +\n                        '<span class=\"k-icon k-i-arrow-60-right\"></span>' +\n                    '#}#' +\n                '</span>' +\n                '#if(resizable && !data.tail){#' +\n                '<span class=\"k-resize-handle k-resize-w\"></span>' +\n                '#}#' +\n                '#if(resizable && !data.head){#' +\n                '<span class=\"k-resize-handle k-resize-e\"></span>' +\n                '#}#' +\n                '</div>';\n\n    function toInvariantTime(date) {\n        var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n        setTime(staticDate, getMilliseconds(date));\n        return staticDate;\n    }\n\n    function getWorkDays(options) {\n        if (options.workDays && options.workDays.length) {\n            return options.workDays;\n        }\n\n        var workDays = [];\n        var dayIndex = options.workWeekStart % 7;\n        var workWeekEnd = Math.abs(options.workWeekEnd % 7);\n\n        workDays.push(dayIndex);\n\n        while (workWeekEnd != dayIndex) {\n            if (dayIndex > 6 ) {\n                dayIndex -= 7;\n            } else {\n                dayIndex++;\n            }\n            workDays.push(dayIndex);\n        }\n        return workDays;\n    }\n\n    function setColspan(columnLevel) {\n        var count = 0;\n        if (columnLevel.columns) {\n            for (var i = 0; i < columnLevel.columns.length; i++) {\n                count += setColspan(columnLevel.columns[i]);\n            }\n            columnLevel.colspan = count;\n            return count;\n        } else {\n            columnLevel.colspan = 1;\n            return 1;\n        }\n    }\n\n    function collidingEvents(elements, left, right) {\n        var idx,\n            startPosition,\n            overlaps,\n            endPosition;\n\n        for (idx = elements.length - 1; idx >= 0; idx--) {\n            startPosition = elements[idx].rectLeft;\n            endPosition = elements[idx].rectRight;\n\n            overlaps = startPosition <= left && endPosition >= left;\n\n            if (overlaps || (startPosition >= left && endPosition <= right) || (left <= startPosition && right >= startPosition)) {\n                if (startPosition < left) {\n                    left = startPosition;\n                }\n\n                if (endPosition > right) {\n                    right = endPosition;\n                }\n            }\n        }\n\n        return eventsForSlot(elements, left, right);\n    }\n\n    function eventsForSlot(elements, left, right) {\n        var events = [];\n\n        for (var idx = 0; idx < elements.length; idx++) {\n            var event = {\n                rectLeft: elements[idx].rectLeft,\n                rectRight: elements[idx].rectRight\n            };\n\n            if ((event.rectLeft < left && event.rectRight > left) || (event.rectLeft >= left && event.rectRight <= right)) {\n                events.push(elements[idx]);\n            }\n        }\n\n        return events;\n    }\n\n    var TimelineGroupedView = kendo.Class.extend({\n        init: function(view) {\n            this._view = view;\n        },\n\n        _getTimeSlotByPosition: function(x, y, groupIndex) {\n            var group = this._view.groups[groupIndex];\n\n            return group.timeSlotByPosition(x, y);\n        },\n\n        _hideHeaders: function() {\n            var view = this._view;\n\n            view.timesHeader.find(\"table tr\").last().hide(); /*Chrome fix, use CSS selector*/\n            view.datesHeader.find(\"table tr\").last().hide();\n        },\n\n        _setColspan: function(timeColumn) {\n            setColspan(timeColumn);\n        },\n\n        _createRowsLayout: function(resources, rows, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createRowsLayout(resources, rows, groupHeaderTemplate);\n        },\n\n        _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n\n            return columns;\n        },\n\n        _createColumnsLayout: function(resources, columns, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, columns, groupHeaderTemplate);\n        },\n\n        _getRowCount: function() {\n            var view = this._view;\n\n            return view._groupCount();\n        },\n\n        _getGroupsCount: function() {\n            return 1;\n        },\n\n        _addContent: function(dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped) {\n            var view = this._view;\n            var html = '';\n            var options = view.options;\n\n            var appendRow = function(date) {\n                var content = \"\";\n                var classes = \"\";\n                var tmplDate;\n\n                var resources = function(groupIndex) {\n                    return function() {\n                        return view._resourceBySlot({ groupIndex: groupIndex });\n                    };\n                };\n\n                if (kendo.date.isToday(dates[idx])) {\n                    classes += \"k-today\";\n                }\n\n                if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(options.workDayStart) ||\n                    kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(options.workDayEnd) ||\n                    !view._isWorkDay(dates[idx])) {\n                    classes += \" k-nonwork-hour\";\n                }\n\n                content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n                tmplDate = kendo.date.getDate(dates[idx]);\n                kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n                content += slotTemplate({ date: tmplDate, resources: resources(isVerticalGrouped ? rowIdx : groupIdx) });\n                content += \"</td>\";\n\n                return content;\n            };\n\n            for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                html += '<tr>';\n                for (var groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                    for (var idx = 0, length = columnCount; idx < length; idx++) {\n                        html += view._forTimeRange(start, end, appendRow);\n                    }\n                }\n                html += \"</tr>\";\n            }\n            return html;\n        },\n\n        _addTimeSlotsCollections: function(groupCount, datesCount, tableRows, interval, isVerticallyGrouped) {\n            var view = this._view;\n            var rowCount = tableRows.length;\n\n            if (isVerticallyGrouped) {\n                rowCount = Math.floor(rowCount / groupCount);\n            }\n\n            for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                var rowMultiplier = 0;\n                var group = view.groups[groupIndex];\n                var time;\n\n                if (isVerticallyGrouped) {\n                    rowMultiplier = groupIndex;\n                }\n\n                var rowIndex = rowMultiplier * rowCount;\n                var cellMultiplier = 0;\n\n                if (!isVerticallyGrouped) {\n                    cellMultiplier = groupIndex;\n                }\n\n                var cells = tableRows[rowIndex].children;\n                var cellsPerGroup = cells.length / (!isVerticallyGrouped ? groupCount : 1);\n                var cellsPerDay = cellsPerGroup / datesCount;\n\n                for (var dateIndex = 0; dateIndex < datesCount; dateIndex++) {\n                    var cellOffset = dateIndex * cellsPerDay + (cellsPerGroup * cellMultiplier);\n                    time = getMilliseconds(new Date(+view.startTime()));\n\n                    for (var cellIndex = 0; cellIndex < cellsPerDay; cellIndex++) {\n\n                        view._addTimeSlotToCollection(group, cells, cellIndex, cellOffset, dateIndex, time, interval);\n                        time += interval;\n                    }\n                }\n            }\n        },\n\n        _getVerticalGroupCount: function(groupsCount) {\n\n            return groupsCount;\n        },\n\n        _getVerticalRowCount: function(eventGroups, groupIndex, maxRowCount) {\n            var view = this._view;\n\n            return view._isVerticallyGrouped() ? eventGroups[groupIndex].maxRowCount : maxRowCount;\n        },\n\n        _renderEvent: function(eventGroup, event, adjustedEvent, group, range, container) {\n            var view = this._view;\n            var element;\n\n            element = view._createEventElement(adjustedEvent.occurrence, event, range.head || adjustedEvent.head, range.tail || adjustedEvent.tail);\n            element.appendTo(container).css({ top: 0, height: view.options.eventHeight });\n\n            var eventObject = {\n                start: adjustedEvent.occurrence._startTime || adjustedEvent.occurrence.start,\n                end: adjustedEvent.occurrence._endTime || adjustedEvent.occurrence.end,\n                element: element,\n                uid: event.uid,\n                slotRange: range,\n                rowIndex: 0,\n                offsetTop: 0\n            };\n\n            eventGroup.events[event.uid] = eventObject;\n\n            view._inverseEventColor(element);\n            view.addContinuousEvent(group, range, element, event.isAllDay);\n            view._arrangeRows(eventObject, range, eventGroup);\n        },\n\n        _verticalCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._rowCountForLevel(level);\n        },\n\n        _horizontalCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level);\n        },\n\n        _updateCurrentVerticalTimeMarker: function(ranges, currentTime) {\n            var view = this._view;\n            var elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n            var headerWrap = view.datesHeader.find(\".\" + SCHEDULER_HEADER_WRAP_CLASS);\n            var left = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).left);\n            var timesTableMarker = $(elementHtml)\n                    .prependTo(headerWrap)\n                    .addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-down\");\n\n            timesTableMarker.css({\n                left: view._adjustLeftPosition(left - (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2)),\n                top: headerWrap.find(\"tr\").last().prev().position().top\n            });\n\n            $(elementHtml).prependTo(view.content).css({\n                left: view._adjustLeftPosition(left),\n                width: \"1px\",\n                height: view.content[0].scrollHeight - 1,\n                top: 0\n            });\n        },\n\n        _changeGroup: function() {\n            return undefined;\n        },\n\n        _prevGroupSlot: function(slot, group, isDay) {\n            var view = this._view;\n\n            if (view._isVerticallyGrouped()) {\n                return slot;\n            } else {\n                var collection = group._collection(0, isDay);\n                return collection.last();\n            }\n        },\n\n        _nextGroupSlot: function(slot, group, isDay) {\n            var view = this._view;\n\n            if (view._isVerticallyGrouped()) {\n                return slot;\n            } else {\n                var collection = group._collection(0, isDay);\n                return collection.first();\n            }\n        },\n\n        _verticalSlots: function(selection, reverse) {\n             var view = this._view;\n\n             return view._changeGroup(selection, reverse);\n        },\n\n         _verticalMethod: function(reverse) {\n\n              return reverse ? \"leftSlot\" : \"rightSlot\";\n         },\n\n         _normalizeVerticalSelection: function() {\n             return undefined;\n         },\n\n         _horizontalSlots: function(selection, group, method, startSlot, endSlot, multiple, reverse) {\n            var view = this._view;\n            var result = {};\n\n            result.startSlot = group[method](startSlot);\n            result.endSlot = group[method](endSlot);\n\n            if (!multiple && view._isHorizontallyGrouped() && (!result.startSlot || !result.endSlot)) {\n                result.startSlot = result.endSlot = view._changeGroup(selection, reverse);\n            }\n\n            return result;\n        },\n\n        _changeVerticalViewPeriod: function() {\n            return false;\n        },\n\n        _changeHorizontalViewPeriod: function(slots, shift, selection, reverse) {\n            var view = this._view;\n\n            if ((!slots.startSlot || !slots.endSlot ) && !shift && view._changeViewPeriod(selection, reverse, false)) {\n                return true;\n            }\n            return false;\n        },\n\n        _updateDirection: function(selection, ranges, shift, reverse) {\n            var view = this._view;\n\n            view._updateDirection(selection, ranges, shift, reverse, true);\n        },\n\n         _createMoveHint: function(range, adjustedEvent) {\n                var view = this._view;\n                var startSlot = range.start;\n\n                var hint = view._createEventElement(adjustedEvent.occurrence ,adjustedEvent.occurrence, false, false);\n\n                hint.addClass(\"k-event-drag-hint\");\n\n                var rect = range.innerRect(adjustedEvent.occurrence.start, adjustedEvent.occurrence.end, view.options.snap);\n                var width = rect.right - rect.left;\n\n                if (width < 0) {\n                    width = 0;\n                }\n\n                var left = view._adjustLeftPosition(rect.left);\n\n                var css = {\n                    left: left,\n                    top: startSlot.offsetTop,\n                    height: startSlot.offsetHeight,\n                    width: width\n                };\n\n                hint.css(css);\n\n                if (adjustedEvent.occurrence.inverseColor) {\n                    hint.addClass(INVERSE_COLOR_CLASS);\n                }\n\n                view._appendMoveHint(hint);\n         },\n\n         _adjustLeftPosition: function(left) {\n            var view = this._view;\n\n            if (view._isRtl) {\n                left -= (view.content[0].scrollWidth - view.content[0].clientWidth);\n            }\n\n            return left;\n         }\n    });\n\n    var TimelineGroupedByDateView = kendo.Class.extend({\n        init: function(view) {\n            this._view = view;\n        },\n\n        _getTimeSlotByPosition: function(x, y, groupIndex) {\n            var group = this._view.groups[groupIndex];\n\n            return group.timeSlotByPosition(x, y, true);\n        },\n\n        _hideHeaders: function() {\n            var view = this._view;\n\n            if (!view._isVerticallyGrouped()) {\n                view.timesHeader.find(\"table tr\").eq(2).hide();\n                view.datesHeader.find(\"table tr\").eq(2).hide();\n            } else {\n                        view.times.find(\".k-last\").hide();\n            }\n        },\n        _setColspan: function() {},\n\n        _createRowsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n            var view = this._view;\n\n            return view._createDateLayout(columns, null, true);\n        },\n\n        _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, null, groupHeaderTemplate);\n        },\n\n        _createColumnsLayout: function(resources, columns, groupHeaderTemplate, subColumns) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, columns, groupHeaderTemplate, subColumns, true);\n        },\n\n        _getRowCount: function(level) {\n            var view = this._view;\n\n            return view._rowCountForLevel(level);\n        },\n\n        _getGroupsCount: function() {\n            var view = this._view;\n\n            return view._groupCount();\n        },\n\n        _addContent: function(dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped) {\n            var view = this._view;\n            var html = '';\n            var options = view.options;\n\n            var appendRow = function(date, isMajorTickColumn, isMiddleColumn, isLastSlotColumn, minorTickColumns, groupIdx) {\n                var content = \"\";\n                var classes = \"\";\n                var tmplDate;\n                var workDateIndex = view._isVerticallyGrouped() ? dateIndex : idx;\n\n                var resources = function(groupIndex) {\n                    return function() {\n                        return view._resourceBySlot({ groupIndex: groupIndex });\n                    };\n                };\n\n                if (kendo.date.isToday(dates[idx])) {\n                    classes += \"k-today\";\n                }\n\n                if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(options.workDayStart) ||\n                    kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(options.workDayEnd) ||\n                    !view._isWorkDay(dates[workDateIndex])) {\n                    classes += \" k-nonwork-hour\";\n                }\n\n                content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n                tmplDate = kendo.date.getDate(dates[idx]);\n                kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n                content += slotTemplate({ date: tmplDate, resources: resources(groupIdx) });\n                content += \"</td>\";\n\n                return content;\n            };\n\n            var tempStart = new Date(start),\n                minorTickCount = view.options.minorTickCount,\n                msMajorInterval = view.options.majorTick * MS_PER_MINUTE,\n                msInterval = msMajorInterval / minorTickCount || 1,\n                dateIndex;\n\n            for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                html += '<tr>';\n\n                 if ((rowIdx % (rowCount / view._dates.length)) === 0) {\n                   dateIndex = (rowIdx / (rowCount / view._dates.length));\n                   tempStart = new Date(view._dates[dateIndex]);\n                   kendo.date.setTime(tempStart, kendo.date.getMilliseconds(start));\n                  }\n\n                for (var idx = 0, length = columnCount; idx < length; idx++) {\n\n                    html += view._forTimeRange(tempStart, end, appendRow, isVerticalGrouped, groupsCount);\n\n                    if (isVerticalGrouped) {\n                    setTime(tempStart, msInterval, false);\n                        break;\n                    }\n                }\n               html += \"</tr>\";\n            }\n\n            return html;\n        },\n\n        _addTimeSlotsCollections: function(groupCount, datesCount, tableRows, interval, isVerticallyGrouped) {\n            var view = this._view;\n            var rowCount = tableRows.length;\n\n             if (isVerticallyGrouped) {\n                rowCount = rowCount / datesCount;\n             }\n\n            for (var dateIndex = 0; dateIndex < datesCount; dateIndex++) {\n                var rowMultiplier = 0;\n                var time;\n\n                if (isVerticallyGrouped) {\n                    rowMultiplier = dateIndex;\n                }\n\n                var rowIndex = rowMultiplier * rowCount;\n                var cellMultiplier = 0;\n                var cells = tableRows[rowIndex].children;\n                var cellsPerGroup = isVerticallyGrouped ? rowCount : cells.length / (datesCount * groupCount);\n                var cellsPerDay = cells.length / datesCount;\n                var cellOffset;\n\n                time = getMilliseconds(new Date(+view.startTime()));\n\n                for (var cellIndex = 0; cellIndex < cellsPerGroup; cellIndex++) {\n                    if (!isVerticallyGrouped) {\n                        cellOffset = (dateIndex * cellsPerDay) + (groupCount * cellIndex);\n                        cellMultiplier++;\n                    } else {\n                        cellOffset = 0;\n                        cells = tableRows[cellIndex + (cellsPerGroup * dateIndex)].children;\n                    }\n\n                    for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                        var group = view.groups[groupIndex];\n\n                        view._addTimeSlotToCollection(group, cells, groupIndex, cellOffset, dateIndex, time, interval);\n                    }\n                    time += interval;\n                }\n             }\n        },\n\n        _getVerticalGroupCount: function() {\n            var view = this._view;\n\n            return view.content.find(\"tr\").length;\n        },\n\n        _getVerticalRowCount: function(eventGroups, groupIndex, maxRowCount) {\n\n            return maxRowCount;\n        },\n\n        _renderEvent: function(eventGroup, event, adjustedEvent, group, range, container, startIndex, endIndex) {\n            var view = this._view;\n            var element;\n            var eventObjects = [];\n\n            for (var i = range.start.index; i <= range.end.index; i++) {\n                element = view._createEventElement(adjustedEvent.occurrence, event, i !== endIndex, i !== startIndex);\n                element.appendTo(container).css({ top: 0, height: view.options.eventHeight });\n                var currentSlot = group._timeSlotCollections[0]._slots[i];\n                var dateRange = group.timeSlotRanges(currentSlot.start, currentSlot.end, false)[0];\n\n                    var eventObject = {\n                    start: i === startIndex ? adjustedEvent.occurrence._startTime || adjustedEvent.occurrence.start : currentSlot.start,\n                    end: i === endIndex ? adjustedEvent.occurrence._endTime || adjustedEvent.occurrence.end : currentSlot.end,\n                    element: element,\n                    uid: event.uid,\n                    slotRange: dateRange,\n                    rowIndex: 0,\n                    offsetTop: 0\n                };\n\n                eventGroup.events[event.uid] = eventObject;\n                eventObjects.push(eventObject);\n\n                view.addContinuousEvent(group, dateRange, element, event.isAllDay);\n                view._arrangeRows(eventObject, dateRange, eventGroup);\n            }\n            eventGroup.events[event.uid] = eventObjects;\n        },\n\n        _verticalCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level);\n        },\n\n        _horizontalCountForLevel: function(level, columnLevel) {\n            var view = this._view;\n\n            return view._columnCountForLevel(columnLevel) / view._columnCountForLevel(2);\n        },\n\n        _updateCurrentVerticalTimeMarker: function(ranges,currentTime) {\n            var view = this._view;\n            var firstTimesCell = view.times.find(\"tr\").first().find(\"th\").first();\n            var lastTimesCell = view.times.find(\"tr\").first().find(\"th\").last();\n            var elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n            var timesTableMarker = $(elementHtml).prependTo(view.times);\n            var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n            var timesTableMarkerCss = {};\n\n            if (this._isRtl) {\n                timesTableMarkerCss.right = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-left\");\n            } else {\n                timesTableMarkerCss.left = lastTimesCell.position().left;\n                timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-right\");\n            }\n\n            timesTableMarkerCss.top = markerTopPosition - (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2);\n\n            timesTableMarker.css(timesTableMarkerCss);\n\n            $(elementHtml).prependTo(view.content).css({\n                top: markerTopPosition,\n                height: \"1px\",\n                right: \"1px\",\n                width: view.content[0].scrollWidth,\n                left: 0\n            });\n        },\n\n        _changeGroup: function(selection, previous, slot) {\n             var view = this._view;\n\n             if (!slot) {\n                selection.groupIndex = previous ? view.groups.length - 1 : 0;\n             }\n        },\n\n         _prevGroupSlot: function(slot) {\n              return slot;\n        },\n\n        _nextGroupSlot: function(slot) {\n              return slot;\n        },\n\n        _changeDate: function(selection, reverse, slot) {\n            var view = this._view;\n            var group = view.groups[selection.groupIndex];\n            var collections, index;\n\n            if (reverse) {\n                  collections = group._getCollections(false);\n                  index = slot.index - 1;\n\n                  if (index >= 0) {\n                      return collections[0]._slots[index];\n                  }\n              } else {\n                  collections = group._getCollections(false);\n                  index = slot.index + 1;\n\n                  if (collections[0] && collections[0]._slots[index]) {\n                      return collections[0]._slots[index];\n                  }\n               }\n        },\n\n        _verticalSlots: function(selection, reverse, slot) {\n            return this._changeDate(selection, reverse, slot);\n        },\n\n        _verticalMethod: function(reverse, multiple) {\n            if (multiple) {\n               return reverse ? \"upSlot\" : \"downSlot\";\n            } else {\n               return reverse ? \"leftSlot\" : \"rightSlot\";\n            }\n        },\n\n        _normalizeVerticalSelection: function(selection, ranges, reverse, multiple) {\n            var view = this._view;\n\n            if (!multiple) {\n                return view._normalizeVerticalSelection(selection, ranges, reverse);\n            }\n\n            return undefined;\n        },\n\n        _horizontalSlots: function(selection, group, method, startSlot, endSlot, multiple, reverse) {\n             var view = this._view;\n             var tempSlot = view._changeGroup(selection, reverse);\n             var result = {};\n\n            if (!tempSlot) {\n                if (!view._isVerticallyGrouped()) {\n                    result.startSlot = group[method](startSlot);\n                    result.endSlot = group[method](endSlot);\n                }\n\n            } else {\n                result.startSlot = result.endSlot = tempSlot;\n            }\n\n            return result;\n        },\n\n        _changeVerticalViewPeriod: function(slots, shift, selection, reverse) {\n            var view = this._view;\n\n            if ((!slots.startSlot || !slots.endSlot) && !shift &&\n                view._changeViewPeriod(selection, reverse, view._isVerticallyGrouped())) {\n                return true;\n            }\n            return false;\n        },\n\n        _changeHorizontalViewPeriod: function(slots, shift, selection, reverse) {\n           var view = this._view;\n\n           if ( view._isVerticallyGrouped()) {\n               return false;\n           }\n\n           if ((!slots.startSlot || !slots.endSlot ) && !shift && view._changeViewPeriod(selection, reverse, false)) {\n                return true;\n            }\n            return false;\n        },\n\n        _updateDirection: function(selection, ranges, shift, reverse) {\n            var view = this._view;\n\n            view._updateDirection(selection, ranges, shift, reverse, !view._isVerticallyGrouped());\n        },\n\n         _createMoveHint: function(range, adjustedEvent) {\n                var view = this._view;\n                var startSlot = range.start;\n                var startEnd = range.end;\n\n                for (var slotIdx = startSlot.index; slotIdx <= startEnd.index; slotIdx++) {\n                    var slot = range.collection._slots[slotIdx];\n                    var hint = view._createEventElement(adjustedEvent.occurrence ,adjustedEvent.occurrence, false, false);\n\n                    hint.addClass(\"k-event-drag-hint\");\n\n                    var css = {\n                        left: slot.offsetLeft + 2,\n                        top: slot.offsetTop,\n                        height: view.options.eventHeight,\n                        width: slot.offsetWidth\n                    };\n\n                    hint.css(css);\n\n                    if (adjustedEvent.occurrence.inverseColor) {\n                        hint.addClass(INVERSE_COLOR_CLASS);\n                    }\n\n                    view._appendMoveHint(hint);\n                }\n         },\n\n         _adjustLeftPosition: function(left) {\n             var view = this._view;\n\n            if (view._isRtl && !view._isVerticallyGrouped()) {\n                left -= (view.content[0].scrollWidth - view.content[0].offsetWidth);\n            }\n\n            return left;\n         }\n });\n\n    kendo.ui.scheduler.TimelineGroupedView = TimelineGroupedView;\n    kendo.ui.scheduler.TimelineGroupedByDateView = TimelineGroupedByDateView;\n\n    var TimelineView = SchedulerView.extend({\n        init: function(element, options) {\n            var that = this;\n\n            SchedulerView.fn.init.call(that, element, options);\n\n            that._groupedView = that._getGroupedView();\n\n            that.title = that.options.title || that.options.name;\n\n            that._workDays = getWorkDays(that.options);\n\n            that._templates();\n\n            that._editable();\n\n            that.calculateDateRange();\n\n            that._groups();\n\n            that._currentTime(true);\n        },\n        name: \"timeline\",\n\n        _isVirtualized: function() {\n            return false;\n        },\n\n        _getGroupedView: function() {\n\n            if (this._isGroupedByDate()) {\n                   return new kendo.ui.scheduler.TimelineGroupedByDateView(this);\n            } else {\n                   return new kendo.ui.scheduler.TimelineGroupedView(this);\n            }\n        },\n\n        _getNextEventIndexBySlot: function(slot, sortedEvents, groupIndex) {\n           if (this._isVerticallyGrouped()) {\n               return kendo.ui.SchedulerView.fn._getNextEventIndexBySlot.call(this, slot, sortedEvents, groupIndex);\n           }\n\n            var tempIndex = 0;\n\n            for (var i = 0; i < sortedEvents.length; i++) {\n                if (slot.startDate() > sortedEvents[i].start.startDate()) {\n                    tempIndex++;\n                    continue;\n                }\n\n                if (slot.startDate().getTime() === sortedEvents[i].start.startDate().getTime() &&\n                 groupIndex > sortedEvents[i].start.groupIndex) {\n                      tempIndex++;\n                      continue;\n                }\n\n                 break;\n\n            }\n            return tempIndex;\n        },\n\n        _getSelectedSlot: function(slot, sortedEvents, event, idx, pad, prev) {\n            if (this._isVerticallyGrouped()) {\n               return kendo.ui.SchedulerView.fn._getSelectedSlot.call(this, slot, sortedEvents, event, idx, pad, prev);\n            }\n\n            return slot;\n        },\n\n        _getSortedEvents: function(uniqueAllEvents) {\n            if (this._isVerticallyGrouped()) {\n               return kendo.ui.SchedulerView.fn._getSortedEvents.call(this, uniqueAllEvents);\n            }\n\n            return uniqueAllEvents.sort(function(first, second) {\n                var result = first.start.startDate().getTime() - second.start.startDate().getTime();\n\n                if (result === 0) {\n                    if (first.start.isDaySlot && !second.start.isDaySlot) {\n                            result = -1;\n                    }\n\n                    if (!first.start.isDaySlot && second.start.isDaySlot) {\n                            result = 1;\n                    }\n                }\n\n                if (result === 0) {\n                    result = first.start.groupIndex - second.start.groupIndex;\n                }\n\n                if (result === 0) {\n                    result = $(first.element).index() - $(second.element).index();\n                }\n\n                return result;\n            });\n        },\n\n        _currentTimeMarkerUpdater: function() {\n            this._updateCurrentTimeMarker(new Date());\n        },\n\n        _scrollTo: function(element, container) {\n            SchedulerView.fn._scrollTo.call(this, element, container);\n\n            var elementOffset = element.offsetLeft,\n                elementOffsetDir = element.offsetWidth,\n                containerScroll = container.scrollLeft,\n                containerOffsetDir = container.clientWidth,\n                rightDistance = elementOffset + elementOffsetDir,\n                result = 0;\n\n                if (containerScroll > elementOffset) {\n                    result = elementOffset;\n                } else if (rightDistance > (containerScroll + containerOffsetDir)) {\n                    if (elementOffsetDir <= containerOffsetDir) {\n                        result = (rightDistance - containerOffsetDir);\n                    } else {\n                        result = elementOffset;\n                    }\n                } else {\n                    result = containerScroll;\n                }\n                container.scrollLeft = result;\n        },\n\n        _updateCurrentTimeMarker: function(currentTime) {\n            var options = this.options;\n\n            this.datesHeader.find(\".\" + CURRENT_TIME_MARKER_CLASS).remove();\n            this.times.find(\".\" + CURRENT_TIME_MARKER_CLASS).remove();\n            this.content.find(\".\" + CURRENT_TIME_MARKER_CLASS).remove();\n\n            if (!this._isInDateSlot({ start: currentTime, end: currentTime })) {\n                return;\n            }\n\n            if (options.currentTimeMarker.useLocalTimezone === false) {\n                var timezone = options.dataSource.options.schema.timezone;\n\n                if (options.dataSource && timezone) {\n                    var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                    currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                }\n            }\n\n            var groupsCount = !options.group || options.group.orientation == \"vertical\" ? 1 : this.groups.length;\n\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                var currentGroup = this.groups[groupIndex];\n\n                if (!currentGroup) {\n                    return;\n                }\n\n                var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n\n                if (ranges.length === 0) {\n                    return;\n                }\n\n                var collection = ranges[0].collection;\n                var slotElement = collection.slotByStartDate(currentTime);\n\n                if (slotElement) {\n\n                    if (this._isVerticallyGrouped()) {\n                        this._groupedView._updateCurrentVerticalTimeMarker(ranges,currentTime);\n                    } else {\n                        var elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n                        var headerWrap = this.datesHeader.find(\".\" + SCHEDULER_HEADER_WRAP_CLASS);\n                        var left = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).left);\n                        var timesTableMarker = $(elementHtml)\n                                .prependTo(headerWrap)\n                                .addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-down\");\n\n                        timesTableMarker.css({\n                            left: this._adjustLeftPosition(left - (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2)),\n                            top: headerWrap.find(\"tr\").last().prev().position().top\n                        });\n\n                        $(elementHtml).prependTo(this.content).css({\n                            left: this._adjustLeftPosition(left),\n                            width: \"1px\",\n                            height: this.content[0].scrollHeight - 1,\n                            top: 0\n                        });\n                    }\n                }\n            }\n        },\n\n        _adjustLeftPosition: function(left) {\n            return this._groupedView._adjustLeftPosition(left);\n        },\n\n        _currentTime: function(setUpdateTimer) {\n            var that = this;\n            var markerOptions = that.options.currentTimeMarker;\n\n            if (markerOptions !== false && markerOptions.updateInterval !== undefined) {\n                that._currentTimeMarkerUpdater();\n\n                if (setUpdateTimer) {\n                    that._currentTimeUpdateTimer = setInterval(this._currentTimeMarkerUpdater.bind(that), markerOptions.updateInterval);\n                }\n            }\n        },\n\n        _editable: function() {\n            if (this.options.editable) {\n                if (this._isMobile()) {\n                    this._touchEditable();\n                } else {\n                    this._mouseEditable();\n                }\n            }\n        },\n\n        _mouseEditable: function() {\n            var that = this;\n            that.element.on(\"click\" + NS, \".k-event a:has(.k-i-close)\", function(e) {\n                that.trigger(\"remove\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                e.preventDefault();\n            });\n\n            if (that.options.editable.create !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-scheduler-content td\", function(e) {\n                    var slot = that._slotByPosition(e.pageX, e.pageY);\n\n                    if (slot) {\n                        var resourceInfo = that._resourceBySlot(slot);\n                        that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                    }\n\n                    e.preventDefault();\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-event\", function(e) {\n                    that.trigger(\"edit\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                    e.preventDefault();\n                });\n            }\n        },\n\n        _touchEditable: function() {\n            var that = this;\n            var threshold = 0;\n\n            if (kendo.support.mobileOS.android) {\n                threshold = 5;\n            }\n\n            if (that.options.editable.create !== false) {\n                that._addUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-scheduler-content td\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var x = e.x.location !== undefined ? e.x.location : e.x;\n                        var y = e.y.location !== undefined ? e.y.location : e.y;\n                        var slot = that._slotByPosition(x, y);\n\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that._editUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-event\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var eventElement = $(e.target).closest(\".k-event\");\n                        var touchElement = $(e.touch.initialTouch);\n\n                        if (touchElement.hasClass(\"k-i-close\")) {\n                            that.trigger(\"remove\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                        } else if (!eventElement.hasClass(\"k-event-active\")) {\n                            that.trigger(\"edit\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n        },\n\n        _slotByPosition: function(x, y) {\n            var slot;\n            var content = this.content;\n            var offset = content.offset();\n            var groupIndex;\n\n            x -= offset.left;\n            y -= offset.top;\n\n            if (this._isRtl) {\n                var browser = kendo.support.browser;\n\n                if (browser.mozilla || (browser.webkit && browser.version >= 85)) {\n                     x += (content[0].scrollWidth - content[0].offsetWidth);\n                     x += content[0].scrollLeft;\n                } else if (browser.msie) {\n                     x -= kendo.scrollLeft(content);\n                     x += content[0].scrollWidth - content[0].offsetWidth;\n                } else if (browser.webkit) {\n                     x += content[0].scrollLeft;\n                }\n            } else {\n                x += content[0].scrollLeft;\n            }\n\n            y += content[0].scrollTop;\n\n            x = Math.ceil(x);\n            y = Math.ceil(y);\n\n            for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n\n                 slot = this._groupedView._getTimeSlotByPosition(x, y, groupIndex);\n\n                 if (slot) {\n                     return slot;\n                 }\n            }\n\n            return null;\n        },\n\n        options: {\n            name: \"TimelineView\",\n            title: \"Timeline\",\n            selectedDateFormat: \"{0:D}\",\n            selectedShortDateFormat: \"{0:d}\",\n            selectedMobileDateFormat: \"{0:MMM dd}\",\n            date: kendo.date.today(),\n            startTime: kendo.date.today(),\n            endTime: kendo.date.today(),\n            showWorkHours: false,\n            minorTickCount: 2,\n            editable: true,\n            workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n            workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n            workWeekStart: 1,\n            workWeekEnd: 5,\n            majorTick: 60,\n            eventHeight: 25,\n            eventMinWidth: 0,\n            columnWidth: 100,\n            groupHeaderTemplate: \"#=text#\",\n            majorTimeHeaderTemplate: \"#=kendo.toString(date, 't')#\",\n            slotTemplate: \"&nbsp;\",\n            eventTemplate: EVENT_TEMPLATE,\n            dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n            footer: {\n                command: \"workDay\"\n            },\n            currentTimeMarker: {\n                updateInterval: 10000,\n                useLocalTimezone: true\n            },\n            messages: {\n                defaultRowText: \"All events\",\n                showFullDay: \"Show full day\",\n                showWorkDay: \"Show business hours\"\n            }\n        },\n\n        events: [\"remove\", \"add\", \"edit\"],\n\n        _templates: function() {\n            var options = this.options,\n                settings = extend({}, kendo.Template, options.templateSettings);\n\n            this.eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_STRING);\n            this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n            this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n            this.slotTemplate = kendo.template(options.slotTemplate, settings);\n            this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n        },\n\n        _render: function(dates) {\n            var that = this;\n\n            dates = dates || [];\n\n            that._dates = dates;\n\n            that._startDate = dates[0];\n\n            that._endDate = dates[(dates.length - 1) || 0];\n\n            that._calculateSlotRanges();\n\n            that.createLayout(that._layout(dates));\n\n            that._content(dates);\n\n            that._footer();\n\n            that._setContentWidth();\n\n            that.refreshLayout();\n\n            that.datesHeader.on(\"click\" + NS, \".k-nav-day\", function(e) {\n                var th = $(e.currentTarget).closest(\"th\");\n\n                var slot = that._slotByPosition(th.offset().left, that.content.offset().top);\n\n                that.trigger(\"navigate\", { view: \"timeline\", date: slot.startDate() });\n            });\n\n            that._groupedView._hideHeaders();\n        },\n\n        _setContentWidth: function() {\n            var content = this.content;\n            var contentWidth = content.width();\n            var contentTable = this.content.find(\"table\");\n            var columnCount = contentTable.find(\"tr\").first().children().length;\n\n            var minWidth = 100;\n            var calculatedWidth = columnCount * this.options.columnWidth;\n\n            if (contentWidth < calculatedWidth) {\n                minWidth = Math.ceil((calculatedWidth / contentWidth) * 100);\n            }\n\n            contentTable.add(this.datesHeader.find(\"table\"))\n                .css(\"width\", minWidth + \"%\");\n        },\n\n        _calculateSlotRanges: function() {\n            var dates = this._dates;\n            var slotStartTime = this.startTime();\n            var slotEndTime = this.endTime();\n\n            slotEndTime = getMilliseconds(slotEndTime);\n            slotStartTime = getMilliseconds(slotStartTime);\n\n            if (slotEndTime === slotStartTime) {\n                slotEndTime += MS_PER_DAY - 1;\n            } else if (slotEndTime < slotStartTime) {\n                slotEndTime += MS_PER_DAY;\n            }\n\n            var slotRanges = [];\n            for (var i = 0; i < dates.length; i++) {\n                var rangeStart = getDate(dates[i]);\n                setTime(rangeStart, slotStartTime);\n\n                var rangeEnd = getDate(dates[i]);\n                setTime(rangeEnd, slotEndTime);\n\n                slotRanges.push({\n                    start: kendo.date.toUtcTime(rangeStart),\n                    end: kendo.date.toUtcTime(rangeEnd)\n                });\n            }\n\n            this._slotRanges = slotRanges;\n        },\n\n        _forTimeRange: function(min, max, action, verticalByDate, groupsCount) {\n            min = toInvariantTime(min); //convert the date to 1/2/1980 and sets the time\n            max = toInvariantTime(max);\n\n            var that = this,\n                msMin = getMilliseconds(min),\n                msMax = getMilliseconds(max),\n                minorTickCount = that.options.minorTickCount,\n                msMajorInterval = that.options.majorTick * MS_PER_MINUTE,\n                msInterval = msMajorInterval / minorTickCount || 1,\n                start = new Date(+min),\n                idx = 0, length,\n                html = \"\";\n\n            length = MS_PER_DAY / msInterval;\n\n            if (msMin != msMax) {\n                if (msMin > msMax) {\n                    msMax += MS_PER_DAY;\n                }\n\n                length = ((msMax - msMin) / msInterval);\n            }\n\n            length = verticalByDate ? 1 : Math.round(length);\n\n            if (groupsCount) {\n                length = length * groupsCount;\n            }\n\n            for (; idx < length; idx++) {\n                var majorTickDivider = idx % (msMajorInterval / msInterval);\n                var isMajorTickColumn = majorTickDivider === 0;\n                var isMiddleColumn = majorTickDivider < minorTickCount - 1;\n                var isLastSlotColumn = majorTickDivider === minorTickCount - 1;\n                var minorTickColumns = minorTickCount;\n\n                if (length % minorTickCount !== 0) {\n                    var isLastMajorSlot = (length - (idx + 1)) < minorTickCount;\n                    if (isMajorTickColumn && isLastMajorSlot) {\n                        minorTickColumns = length % minorTickCount;\n                    }\n                }\n\n                html += action(start, isMajorTickColumn, isMiddleColumn, isLastSlotColumn, minorTickColumns, idx % groupsCount);\n\n                if (!verticalByDate) {\n                    if (groupsCount) {\n                        if ((idx % groupsCount) === groupsCount - 1) {\n                            setTime(start, msInterval, false);\n                        }\n                    } else {\n                        setTime(start, msInterval, false);\n                    }\n                }\n            }\n\n            return html;\n        },\n\n        _layout: function(dates) {\n            var timeColumns = [];\n            var columns = [];\n            var that = this;\n            var rows = [{ text: that.options.messages.defaultRowText }];\n            var groupedView = that._groupedView;\n\n            var minorTickSlots = [];\n            for (var minorTickIndex = 0; minorTickIndex < that.options.minorTickCount; minorTickIndex++) {\n                minorTickSlots.push({\n                    text: \"&#8203;\",\n                    className: \"k-last\",\n                    minorTicks: true\n                });\n            }\n\n            this._forTimeRange(that.startTime(), that.endTime(), function(date, majorTick, middleColumn, lastSlotColumn, minorSlotsCount) {\n                var template = that.majorTimeHeaderTemplate;\n\n                if (majorTick) {\n                    var timeColumn = {\n                        text: template({ date: date }),\n                        className: lastSlotColumn ? \"k-slot-cell\" : \"\",\n                        columns: minorTickSlots.slice(0, minorSlotsCount)\n                    };\n\n                    groupedView._setColspan(timeColumn);\n\n                    timeColumns.push(timeColumn);\n                }\n            });\n\n            for (var idx = 0; idx < dates.length; idx++) {\n                columns.push({\n                    text: that.dateHeaderTemplate({ date: dates[idx] }),\n                    className: \"k-slot-cell\",\n                    columns: timeColumns.slice(0)\n                });\n            }\n\n            var resources = this.groupedResources;\n            if (resources.length) {\n                if (this._groupOrientation() === \"vertical\") {\n                    rows = groupedView._createRowsLayout(resources, null, this.groupHeaderTemplate, columns);\n                    columns = groupedView._createVerticalColumnsLayout(resources, null, this.groupHeaderTemplate, columns);\n\n                } else {\n                    columns = groupedView._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                }\n            }\n\n            return {\n                columns: columns,\n                rows: rows\n            };\n        },\n\n        _footer: function() {\n            var options = this.options;\n\n            if (options.footer !== false) {\n                var html = '<div class=\"k-scheduler-footer k-toolbar\">';\n\n                var command = options.footer.command;\n\n                if (this._isMobile()) {\n                    html += '<span class=\"k-scheduler-today\"><a tabindex=\"-1\" href=\"#\" class=\"k-link\">';\n                    html += options.messages.today + '</a></span>';\n                }\n\n                if (command && command === \"workDay\") {\n                    if (this._isMobile()) {\n                        html += '<span class=\"k-scheduler-fullday\"><a tabindex=\"-1\" href=\"#\" class=\"k-link\">';\n                        html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></span>';\n                    } else {\n                        html += '<button tabindex=\"-1\" type=\"button\" class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-scheduler-fullday\">';\n                            html += '<span class=\"k-button-icon k-icon k-i-clock\"></span>';\n                            html += '<span class=\"k-button-text\">';\n                                html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay);\n                            html += '</span>';\n                        html += '</button>';\n                    }\n                }\n\n                html += \"</div>\";\n\n                this.footer = $(html).appendTo(this.element);\n\n                var that = this;\n\n                this.footer.on(\"click\" + NS, \".k-scheduler-fullday\", function(e) {\n                    e.preventDefault();\n                    that.toggleFullDay();\n                });\n\n                this.footer.on(\"click\" + NS, \".k-scheduler-today\", function(e) {\n                    e.preventDefault();\n                    var timezone = that.options.timezone;\n                    var action = \"today\";\n                    var currentDate = new Date();\n                    var date;\n\n                    if (timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentDate, timezone);\n                        date = kendo.timezone.convert(currentDate, currentDate.getTimezoneOffset(), timezoneOffset);\n                    } else {\n                        date = currentDate;\n                    }\n\n                    that.trigger(\"navigate\", { view: that.name || options.name, action: action, date: date });\n                });\n            }\n        },\n\n        toggleFullDay: function() {\n            var options = this.options;\n\n            this.trigger(\"navigate\", { view: this.name || options.name, date: options.date, isWorkDay: !options.showWorkHours });\n        },\n\n        _columnCountForLevel: function(level) {\n            var columnLevel = this.columnLevels[level];\n            return columnLevel ? columnLevel.length : 0;\n        },\n\n        _rowCountForLevel: function(level) {\n            var rowLevel = this.rowLevels[level];\n            return rowLevel ? rowLevel.length : 0;\n        },\n\n        _isWorkDay: function(date) {\n            var day = date.getDay();\n            var workDays = this._workDays;\n\n            for (var i = 0; i < workDays.length; i++) {\n                if (workDays[i] === day) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _content: function(dates) {\n            var that = this;\n            var start = that.startTime();\n            var end = this.endTime();\n            var groupsCount = 1;\n            var rowCount = 1;\n            var columnCount = dates.length;\n            var html = '';\n            var resources = this.groupedResources;\n            var slotTemplate = this.slotTemplate;\n            var isVerticalGrouped = false;\n\n            if (resources.length) {\n                isVerticalGrouped = that._groupOrientation() === \"vertical\";\n\n                if (isVerticalGrouped) {\n                    rowCount = that._groupedView._getRowCount(this.rowLevels.length - 1);\n                    groupsCount = that._groupedView._getGroupsCount();\n                } else {\n                    groupsCount = that._groupCount();\n                }\n            }\n\n            html += '<tbody>';\n            html += that._groupedView._addContent(dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped);\n            html += '</tbody>';\n\n            this.content.find(\"table\").append(html);\n        },\n\n        _groups: function() {\n            var groupCount = this._groupCount();\n            var dates = this._dates;\n            var columnCount = dates.length;\n\n            this.groups = [];\n\n            for (var idx = 0; idx < groupCount; idx++) {\n                var view = this._addResourceView(idx);\n\n                var start = dates[0];\n                var end = dates[(dates.length - 1) || 0];\n\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n\n                if (startTime !== 0 && endTime <= startTime) {\n                    start = getDate(start);\n                    setTime(start, startTime);\n\n                    end = getDate(end);\n                    setTime(end, endTime);\n                }\n\n                view.addTimeSlotCollection(start, kendo.date.addDays(end, 1));\n            }\n\n            this._timeSlotGroups(groupCount, columnCount);\n        },\n\n        _isHorizontallyGrouped: function() {\n            return this.groupedResources.length && this._groupOrientation() === \"horizontal\";\n        },\n\n        _timeSlotGroups: function(groupCount, datesCount) {\n            var interval = this._timeSlotInterval();\n            var isVerticallyGrouped = this._isVerticallyGrouped();\n            var tableRows = this.content.find(\"tr\");\n\n            this._groupedView._addTimeSlotsCollections(groupCount, datesCount, tableRows, interval, isVerticallyGrouped);\n\n        },\n\n        _addTimeSlotToCollection: function(group, cells, cellIndex, cellOffset, dateIndex, time, interval) {\n              var cell = cells[cellIndex + cellOffset];\n              var collection = group.getTimeSlotCollection(0);\n              var currentDate = this._dates[dateIndex];\n              var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n              var start = currentTime + time;\n              var end = start + interval;\n\n              collection.addTimeSlot(cell, start, end, true);\n        },\n\n        startDate: function() {\n            return this._startDate;\n        },\n\n        endDate: function() {\n            return this._endDate;\n        },\n\n        visibleEndDate: function() {\n            var startTime = getMilliseconds(this.startTime());\n            var endTime = getMilliseconds(this.endTime());\n            var endDate = this.endDate();\n\n            if (startTime !== 0 && endTime <= startTime) {\n                endDate = kendo.date.addDays(endDate, 1);\n            }\n\n            return endDate;\n        },\n\n        startTime: function() {\n            var options = this.options;\n            return options.showWorkHours ? options.workDayStart : options.startTime;\n        },\n\n        endTime: function() {\n            var options = this.options;\n            return options.showWorkHours ? options.workDayEnd : options.endTime;\n        },\n\n        _timeSlotInterval: function() {\n            var options = this.options;\n            return (options.majorTick / options.minorTickCount) * MS_PER_MINUTE;\n        },\n\n        nextDate: function() {\n            return kendo.date.nextDay(this.endDate());\n        },\n\n        previousDate: function() {\n            return kendo.date.previousDay(this.startDate());\n        },\n\n        calculateDateRange: function() {\n            this._render([this.options.date]);\n        },\n\n        render: function(events) {\n            this._headerColumnCount = 0;\n\n            this._groups();\n\n            this.element.find(\".k-event\").remove();\n\n            events = new kendo.data.Query(events)\n                .sort([{ field: \"start\", dir: \"asc\" },{ field: \"end\", dir: \"desc\" }])\n                .toArray();\n\n            var eventsByResource = [];\n\n            this._eventsByResource(events, this.groupedResources, eventsByResource);\n\n            var eventGroups = [];\n            var maxRowCount = 0;\n\n            for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                var eventGroup = {\n                    groupIndex: groupIndex,\n                    maxRowCount: 0,\n                    events: {}\n                };\n\n                eventGroups.push(eventGroup);\n\n                this._renderEvents(eventsByResource[groupIndex], groupIndex, eventGroup);\n\n                if (maxRowCount < eventGroup.maxRowCount) {\n                    maxRowCount = eventGroup.maxRowCount;\n                }\n            }\n\n            this._setRowsHeight(eventGroups, eventsByResource.length, maxRowCount);\n\n            this._positionEvents(eventGroups, eventsByResource.length);\n\n            this._currentTime(false);\n\n            this.trigger(\"activate\");\n        },\n\n        _positionEvents: function(eventGroups, groupsCount) {\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                var eventsForGroup = eventGroups[groupIndex].events;\n                for (var eventUid in eventsForGroup) {\n                    var eventObject = eventsForGroup[eventUid];\n                    if (Array.isArray(eventObject)) {\n                        for (var eventIndex = 0; eventIndex < eventObject.length; eventIndex++) {\n                            this._positionEvent(eventObject[eventIndex]);\n                        }\n                    } else {\n                        this._positionEvent(eventObject);\n                    }\n                }\n            }\n        },\n\n        _setRowsHeight: function(eventGroups, groupsCount, maxRowCount) {\n            var eventHeight = this.options.eventHeight;\n            var eventBottomOffset = this._getBottomRowOffset();\n            var groupedView = this._groupedView;\n            var verticalGroupCount = groupedView._getVerticalGroupCount(groupsCount);\n\n            groupsCount = this._isVerticallyGrouped() ? verticalGroupCount : 1;\n\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                var rowsCount = groupedView._getVerticalRowCount(eventGroups, groupIndex, maxRowCount);\n\n                rowsCount = rowsCount ? rowsCount : 1;\n\n                var rowHeight = ((eventHeight + 2) * rowsCount) + eventBottomOffset;\n                var timesRow = $(this.times.find(\"tr\")[groupIndex]);\n                var row = $(this.content.find(\"tr\")[groupIndex]);\n\n                timesRow.height(rowHeight);\n                row.height(rowHeight);\n            }\n\n            this._setContentWidth();\n            this.refreshLayout();\n            this._refreshSlots();\n        },\n\n        _getBottomRowOffset: function() {\n            var eventBottomOffset = this.options.eventHeight * 0.50;\n            var isMobile = this._isMobile();\n            var minOffset;\n            var maxOffset;\n\n            if (isMobile) {\n                minOffset = 30;\n                maxOffset = 60;\n            } else {\n                minOffset = 15;\n                maxOffset = 30;\n            }\n\n            if (eventBottomOffset > maxOffset) {\n                eventBottomOffset = maxOffset;\n            } else if (eventBottomOffset < minOffset) {\n                eventBottomOffset = minOffset;\n            }\n\n            return eventBottomOffset;\n        },\n\n        _positionEvent: function(eventObject) {\n            var eventHeight = this.options.eventHeight;\n            var eventOffset = 2;\n            var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n            var left = this._adjustLeftPosition(rect.left);\n            var width = rect.right - rect.left;\n\n            if (width < 0) {\n                width = 0;\n            }\n\n            if (width < this.options.eventMinWidth) {\n                var slotsCollection = eventObject.slotRange.collection;\n                var lastSlot = slotsCollection._slots[slotsCollection._slots.length - 1];\n                var offsetRight = lastSlot.offsetLeft + lastSlot.offsetWidth;\n\n                width = this.options.eventMinWidth;\n\n                if (offsetRight < left + width) {\n                    width = offsetRight - rect.left;\n                }\n            }\n\n            eventObject.element.css({\n                top: eventObject.slotRange.start.offsetTop + eventObject.rowIndex * (eventHeight + eventOffset) + \"px\",\n                left: left,\n                width: width\n            });\n        },\n\n        _refreshSlots: function() {\n            for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                this.groups[groupIndex].refresh();\n            }\n        },\n\n        _eventsByResource: function(events, resources, result, parentValue) {\n            var resource = resources[0];\n\n            if (resource) {\n                var view = resource.dataSource.view();\n\n                view = view.filter(function(item) {\n                    var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                    return itemParentValue === null || itemParentValue === undefined || itemParentValue === parentValue;\n                });\n\n                for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                    var value = this._resourceValue(resource, view[itemIdx]);\n\n                    var eventsFilteredByResource = new kendo.data.Query(events).filter({ field: resource.field, operator: SchedulerView.groupEqFilter(value) }).toArray();\n\n                    if (resources.length > 1) {\n                        this._eventsByResource(eventsFilteredByResource, resources.slice(1), result, value);\n                    } else {\n                        result.push(eventsFilteredByResource);\n                    }\n                }\n            } else {\n                result.push(events);\n            }\n        },\n\n        _isInDateSlot: function(event) {\n            var startTime = event.start;\n            var endTime = event.end;\n            var rangeStart = getDate(this._startDate);\n            var rangeEnd = kendo.date.addDays(getDate(this.visibleEndDate()), 1);\n\n            if (startTime < rangeEnd && rangeStart <= endTime) {\n                return true;\n            }\n            return false;\n        },\n\n        _isInTimeSlot: function(event) {\n            var startTime = event._startTime || kendo.date.toUtcTime(event.start);\n            var endTime = event._endTime || kendo.date.toUtcTime(event.end);\n\n            var slotRanges = this._slotRanges;\n\n            if (startTime === endTime) {\n                endTime = endTime + 1;\n            }\n\n            for (var slotIndex = 0; slotIndex < slotRanges.length; slotIndex++) {\n                if (startTime < slotRanges[slotIndex].end && slotRanges[slotIndex].start < endTime) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _adjustEvent: function(event) {\n            var start = event.start;\n            var end = event.end;\n            var eventStartTime = event._time(\"start\");\n            var eventEndTime = event._time(\"end\");\n            var startTime = getMilliseconds(this.startTime());\n            var endTime = getMilliseconds(this.endTime());\n            var adjustedStartDate = null;\n            var adjustedEndDate = null;\n            var occurrence;\n            var head = false;\n            var tail = false;\n\n            if (event.isAllDay) {\n                start = getDate(start);\n                eventStartTime = 0;\n\n                end = getDate(end);\n                eventEndTime = MS_PER_DAY;\n                adjustedEndDate = kendo.date.addDays(end, 1);\n            }\n\n            if (endTime === 0) {\n                endTime = MS_PER_DAY;\n            }\n\n            if (endTime <= startTime) {\n                if (eventStartTime < startTime && eventStartTime >= endTime) {\n                    adjustedStartDate = getDate(start);\n                    setTime(adjustedStartDate, startTime);\n                    tail = true;\n                }\n\n                if (eventEndTime > endTime && eventEndTime <= startTime) {\n                    adjustedEndDate = getDate(end);\n                    setTime(adjustedEndDate, endTime);\n                    head = true;\n                }\n            } else {\n                if (startTime > eventStartTime) {\n                    adjustedStartDate = getDate(start);\n                    setTime(adjustedStartDate, startTime);\n                    tail = true;\n                } else if (endTime <= eventStartTime) {\n                    adjustedStartDate = getDate(start);\n                    adjustedStartDate = kendo.date.addDays(adjustedStartDate, 1);\n                    setTime(adjustedStartDate, startTime);\n                    tail = true;\n                }\n\n                if (endTime < eventEndTime) {\n                    adjustedEndDate = getDate(end);\n                    setTime(adjustedEndDate, endTime);\n                    head = true;\n                } else if (startTime > eventEndTime) {\n                    adjustedEndDate = getDate(end);\n                    adjustedEndDate = kendo.date.addDays(adjustedEndDate,-1);\n                    setTime(adjustedEndDate, endTime);\n                    head = true;\n                }\n            }\n\n            occurrence = event.clone({\n                start: adjustedStartDate ? adjustedStartDate : start,\n                end: adjustedEndDate ? adjustedEndDate : end,\n                _startTime: adjustedStartDate ? kendo.date.toUtcTime(adjustedStartDate) : event._startTime,\n                _endTime: adjustedEndDate ? kendo.date.toUtcTime(adjustedEndDate) : event._endTime,\n                isAllDay: false\n            });\n\n            return {\n                occurrence: occurrence,\n                head: head,\n                tail: tail\n            };\n        },\n\n        _renderEvents: function(events, groupIndex, eventGroup) {\n            var event;\n            var idx;\n            var length;\n\n            for (idx = 0, length = events.length; idx < length; idx++) {\n                event = events[idx];\n\n                if (this._isInDateSlot(event)) {\n                    var isMultiDayEvent = event.isAllDay || event.duration() >= MS_PER_DAY;\n                    var container = this.content;\n\n                    if (isMultiDayEvent || this._isInTimeSlot(event)) {\n                        var adjustedEvent = this._adjustEvent(event);\n                        var group = this.groups[groupIndex];\n\n                        if (!group._continuousEvents) {\n                            group._continuousEvents = [];\n                        }\n\n                        if (this._isInTimeSlot(adjustedEvent.occurrence)) {\n                            var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n                            var range = ranges[0];\n                            var startIndex = range.start.index;\n                            var endIndex = range.end.index;\n\n                            this._groupedView._renderEvent(eventGroup, event, adjustedEvent, group, range, container, startIndex, endIndex);\n                        }\n                    }\n                }\n            }\n        },\n\n        addContinuousEvent: function(group, range, element, isAllDay) {\n            var events = group._continuousEvents;\n\n            events.push({\n                element: element,\n                isAllDay: isAllDay,\n                uid: element.attr(kendo.attr(\"uid\")),\n                start: range.start,\n                end: range.end\n            });\n        },\n\n        _createEventElement: function(occurrence, event, head, tail) {\n            var template = this.eventTemplate;\n            var editable = this.options.editable;\n            var isMobile = this._isMobile();\n            var showDelete = editable && editable.destroy !== false && !isMobile;\n            var resizable = editable && editable.resize !== false;\n            var eventStartTime = event._time(\"start\");\n            var eventEndTime = event._time(\"end\");\n            var eventStartDate = event.start;\n            var eventEndDate = event.end;\n\n            var resources = this.eventResources(event);\n\n            if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                eventStartDate = new Date(eventStartTime);\n                eventStartDate = kendo.timezone.apply(eventStartDate, \"Etc/UTC\");\n            }\n\n            if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                eventEndDate = new Date(eventEndTime);\n                eventEndDate = kendo.timezone.apply(eventEndDate, \"Etc/UTC\");\n            }\n\n            var data = extend({}, {\n                ns: kendo.ns,\n                resizable: resizable,\n                showDelete: showDelete,\n                head: head,\n                tail: tail,\n                singleDay: this._dates.length == 1,\n                resources: resources,\n                inverseColor: false,\n                messages: this.options.messages,\n                ariaLabel: this._formatEventAriaLabel(event.title, eventStartDate, eventEndDate, event.isAllDay)\n            }, event, {\n                start: eventStartDate,\n                end: eventEndDate\n            });\n\n            var element = $(template(data));\n\n            this.angular(\"compile\", function() {\n                return {\n                    elements: element,\n                    data: [ { dataItem: data } ]\n                };\n            });\n\n            return element;\n        },\n\n        _arrangeRows: function(eventObject, slotRange, eventGroup) {\n            var startIndex = slotRange.start.index;\n            var endIndex = slotRange.end.index;\n\n            var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n            var rectRight = rect.right + this.options.eventMinWidth;\n\n            var events = collidingEvents(slotRange.events(), rect.left, rectRight);\n\n            slotRange.addEvent({\n                slotIndex: startIndex,\n                start: startIndex,\n                end: endIndex,\n                rectLeft: rect.left,\n                rectRight: rectRight,\n                element: eventObject.element,\n                uid: eventObject.uid\n            });\n\n            events.push({\n                start: startIndex,\n                end: endIndex,\n                uid: eventObject.uid\n            });\n\n            var rows = SchedulerView.createRows(events);\n\n            if (eventGroup.maxRowCount < rows.length) {\n                eventGroup.maxRowCount = rows.length;\n            }\n\n            for (var idx = 0, length = rows.length; idx < length; idx++) {\n                var rowEvents = rows[idx].events;\n                for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                    eventGroup.events[rowEvents[j].uid].rowIndex = idx;\n                }\n            }\n        },\n\n        _groupCount: function() {\n            var resources = this.groupedResources;\n            var groupedView = this._groupedView;\n\n            if (resources.length) {\n                if (this._groupOrientation() === \"vertical\") {\n                    return groupedView._verticalCountForLevel(resources.length - 1);\n                } else {\n                    return groupedView._horizontalCountForLevel(resources.length - 1, this.columnLevels.length - 1);\n                }\n            }\n            return 1;\n        },\n\n        _updateEventForSelection: function(event) {\n            var adjustedEvent = this._adjustEvent(event.clone());\n            return adjustedEvent.occurrence;\n        },\n\n        _eventOptionsForMove: function(event) {\n            if (event.isAllDay) {\n                return { isAllDay: false };\n            }\n\n            return {};\n        },\n\n        _updateEventForResize: function(event) {\n            if (event.isAllDay) {\n                event.set(\"isAllDay\", false);\n            }\n        },\n\n        _updateMoveHint: function(event, groupIndex, distance) {\n            var group = this.groups[groupIndex];\n\n            var clonedEvent = event.clone({ start: event.start, end: event.end });\n\n            var eventDuraton = clonedEvent.duration();\n            clonedEvent.start = new Date(clonedEvent.start.getTime() + distance);\n            clonedEvent.end = new Date(+clonedEvent.start + eventDuraton);\n\n            this._removeMoveHint(event.uid);\n\n            if (this._isInDateSlot(clonedEvent)) {\n                if (clonedEvent.isAllDay || clonedEvent.duration() >= MS_PER_DAY || this._isInTimeSlot(clonedEvent)) {\n                    var adjustedEvent = this._adjustEvent(clonedEvent);\n                    var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n\n                    for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                        this._groupedView._createMoveHint(ranges[rangeIndex], adjustedEvent);\n                    }\n                }\n            }\n        },\n\n       _appendMoveHint: function(hint) {\n            hint.appendTo(this.content);\n\n            this._moveHint = this._moveHint.add(hint);\n       },\n\n        _updateResizeHint: function(event, groupIndex, startTime, endTime) {\n            var group = this.groups[groupIndex];\n            var ranges = group.ranges(startTime, endTime, false, false);\n\n            this._removeResizeHint();\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                var range = ranges[rangeIndex];\n                var start = range.startSlot();\n\n                var startRect = range.innerRect(startTime, endTime, false);\n                startRect.top = start.offsetTop;\n\n                var width = startRect.right - startRect.left;\n\n                if (width < 0) {\n                    for (var i = 0; i < range.events().length; i++) {\n                        if (range.events()[i].uid === event.uid) {\n                            width = range.events()[i].rectRight - startRect.left;\n                            break;\n                        }\n                    }\n                }\n\n                var height = range.endSlot().offsetTop + start.offsetHeight - startRect.top;\n\n                var left = this._adjustLeftPosition(startRect.left);\n\n                var hint = SchedulerView.fn._createResizeHint.call(this,\n                    left,\n                    startRect.top,\n                    width,\n                    height\n                );\n\n                this._resizeHint = this._resizeHint.add(hint);\n            }\n\n            var format = \"t\";\n            var container = this.content;\n\n            this._resizeHint.appendTo(container);\n\n            this._resizeHint.find(\".k-label-top,.k-label-bottom\").text(\"\");\n\n            this._resizeHint.first().addClass(\"k-first\").find(\".k-label-top\").text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n\n            this._resizeHint.last().addClass(\"k-last\").find(\".k-label-bottom\").text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n        },\n\n        selectionByElement: function(cell) {\n            var offset = cell.offset();\n            return this._slotByPosition(offset.left, offset.top);\n        },\n\n        _updateDirection: function(selection, ranges, multiple, reverse, vertical) {\n\n            var startSlot = ranges[0].start;\n            var endSlot = ranges[ranges.length - 1].end;\n            if (multiple && !vertical) {\n                if (startSlot.index === endSlot.index &&\n                    startSlot.collectionIndex === endSlot.collectionIndex) {\n                    selection.backward = reverse;\n                }\n            }\n        },\n\n        _changeGroup: function(selection, previous) {\n            var method = previous ? \"prevGroupSlot\" : \"nextGroupSlot\";\n\n            var slot = this[method](selection.start, selection.groupIndex, false);\n\n            if (slot) {\n                selection.groupIndex += previous ? -1 : 1;\n            }\n\n            this._groupedView._changeGroup(selection, previous, slot);\n            return slot;\n        },\n\n        prevGroupSlot: function(date, groupIndex, isDay) {\n            var group = this.groups[groupIndex];\n            var slot = group.ranges(date, date, isDay, false)[0].start;\n\n            if (groupIndex <= 0) {\n                return;\n            }\n\n            return this._groupedView._prevGroupSlot(slot, group, isDay);\n        },\n\n        nextGroupSlot: function(date, groupIndex, isDay) {\n            var group = this.groups[groupIndex];\n            var slot = group.ranges(date, date, isDay, false)[0].start;\n\n            if (groupIndex >= this.groups.length - 1) {\n                return;\n            }\n\n            return this._groupedView._nextGroupSlot(slot, group, isDay);\n        },\n\n        _verticalSlots: function(selection, ranges, multiple, reverse) {\n            var groupedView = this._groupedView;\n            var method = groupedView._verticalMethod(reverse, multiple);\n            var startSlot = ranges[0].start;\n            var endSlot = ranges[ranges.length - 1].end;\n            var group = this.groups[selection.groupIndex];\n            var slot = groupedView._normalizeVerticalSelection(selection, ranges, reverse, multiple);\n\n            if (slot) {\n                startSlot = endSlot = slot;\n            }\n\n            startSlot = group[method](startSlot);\n            endSlot = group[method](endSlot);\n\n            if (!multiple && this._isVerticallyGrouped() && (!startSlot || !endSlot)) {\n                startSlot = endSlot = groupedView._verticalSlots(selection, reverse, slot);\n            }\n\n            return {\n                startSlot: startSlot,\n                endSlot: endSlot\n            };\n        },\n\n        _horizontalSlots: function(selection, ranges, multiple, reverse) {\n            var method = reverse ? \"upSlot\" : \"downSlot\";\n            var startSlot = ranges[0].start;\n            var endSlot = ranges[ranges.length - 1].end;\n            var group = this.groups[selection.groupIndex];\n            var result = {};\n\n            if (!multiple) {\n                result = this._groupedView._horizontalSlots(selection, group, method, startSlot, endSlot, multiple, reverse);\n            } else {\n                result.startSlot = group[method](startSlot);\n                result.endSlot = group[method](endSlot);\n\n                if (!multiple && this._isHorizontallyGrouped() && (!startSlot || !endSlot)) {\n                    result.startSlot = result.endSlot = this._changeGroup(selection, reverse);\n                }\n            }\n\n            return result;\n        },\n\n        _changeViewPeriod: function(selection, reverse) {\n            var date = reverse ? this.previousDate() : this.nextDate();\n            var start = selection.start;\n            var end = selection.end;\n            var newStart, newEnd;\n\n            newStart = new Date(date);\n            newEnd = new Date(date);\n\n            if (this._isInRange(newStart, newEnd)) {\n                return false;\n            }\n            selection.start = newStart;\n            selection.end = newEnd;\n\n            if (this._isHorizontallyGrouped()) {\n               selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n            }\n\n            var duration = end - start;\n\n            if (reverse) {\n                end = getMilliseconds(this.endTime());\n                end = end === 0 ? MS_PER_DAY : end;\n\n                setTime(selection.start, end - duration);\n                setTime(selection.end, end);\n            } else {\n                start = getMilliseconds(this.startTime());\n\n                setTime(selection.start, start);\n                setTime(selection.end, start + duration);\n            }\n\n            selection.events = [];\n\n            return true;\n        },\n\n        move: function(selection, key, shift) {\n            var handled = false;\n            var group = this.groups[selection.groupIndex];\n            var keys = kendo.keys;\n            var groupedView = this._groupedView;\n            var ranges = group.ranges(selection.start, selection.end, false, false);\n            var startSlot, endSlot, reverse, slots;\n\n            if (key === keys.DOWN || key === keys.UP) {\n                handled = true;\n                reverse = key === keys.UP;\n\n                groupedView._updateDirection(selection, ranges, shift, reverse);\n\n                slots = this._verticalSlots(selection, ranges, shift, reverse);\n\n                if (groupedView._changeVerticalViewPeriod(slots, shift, selection, reverse)) {\n                    return handled;\n                }\n            } else if (key === keys.LEFT || key === keys.RIGHT) {\n                handled = true;\n                reverse = key === keys.LEFT;\n\n                this._updateDirection(selection, ranges, shift, reverse, false);\n\n                slots = this._horizontalSlots(selection, ranges, shift, reverse);\n\n                if (groupedView._changeHorizontalViewPeriod(slots, shift, selection, reverse)) {\n                     return handled;\n                }\n            }\n\n           if (handled) {\n               startSlot = slots.startSlot;\n               endSlot = slots.endSlot;\n\n               if (shift) {\n                   var backward = selection.backward;\n\n                   if (backward && startSlot) {\n                       selection.start = startSlot.startDate();\n                   } else if (!backward && endSlot) {\n                       selection.end = endSlot.endDate();\n                   }\n               } else if (startSlot && endSlot) {\n                   selection.start = startSlot.startDate();\n                   selection.end = endSlot.endDate();\n               }\n\n               selection.events = [];\n           }\n\n            return handled;\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.element) {\n                that.element.off(NS);\n            }\n\n            if (that.footer) {\n                that.footer.remove();\n            }\n\n            if (that._currentTimeUpdateTimer) {\n                clearInterval(that._currentTimeUpdateTimer);\n            }\n\n            SchedulerView.fn.destroy.call(this);\n\n            if (this._isMobile() && that.options.editable) {\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents.destroy();\n                }\n\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents.destroy();\n                }\n            }\n        },\n\n        _resourceBySlot: function(slot) {\n            var resources = this.groupedResources;\n            var result = {},\n            groupOptions = this.options.group;\n\n            if (resources.length && groupOptions.orientation === \"horizontal\" && groupOptions.date) {\n                var resourceIndex = slot.groupIndex,\n                    levels = this.columnLevels,\n                    groupLevel = levels[levels.length - 1],\n                    resource = resources[resources.length - 1],\n                    groupLevelMember = groupLevel[resourceIndex],\n                    passedChildren, numberOfChildren, j, i;\n\n                this._setResourceValue(groupLevelMember, resource, result);\n\n                for (j = levels.length - 2; j >= 3; j--) {\n                    groupLevel = levels[j];\n                    resource = resources[j - 3];\n                    passedChildren = 0;\n\n                    for (i = 0; i < groupLevel.length; i++) {\n                        groupLevelMember = groupLevel[i];\n                        numberOfChildren = groupLevelMember.columns.length;\n\n                        if (numberOfChildren > resourceIndex - passedChildren) {\n                            this._setResourceValue(groupLevelMember, resource, result);\n\n                            i = groupLevel.length;\n                        } else {\n                            passedChildren += numberOfChildren;\n                        }\n                    }\n                }\n\n                return result;\n            } else {\n                return SchedulerView.fn._resourceBySlot.call(this, slot);\n            }\n        }\n    });\n\n    extend(true, ui, {\n        TimelineView: TimelineView,\n        TimelineWeekView: TimelineView.extend({\n            options: {\n                name: \"TimelineWeekView\",\n                title: \"Timeline Week\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\",\n                selectedMobileDateFormat: \"{0:MMM dd} - {1:dd}\",\n                majorTick: 120\n            },\n            name: \"timelineWeek\",\n            calculateDateRange: function() {\n                var selectedDate = this.options.date,\n                    start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                    idx, length,\n                    dates = [];\n\n                for (idx = 0, length = 7; idx < length; idx++) {\n                    dates.push(start);\n                    start = kendo.date.nextDay(start);\n                }\n                this._render(dates);\n            }\n        }),\n        TimelineWorkWeekView: TimelineView.extend({\n            options: {\n                name: \"TimelineWorkWeekView\",\n                title: \"Timeline Work Week\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\",\n                selectedMobileDateFormat: \"{0:MMM dd} - {1:dd}\",\n                majorTick: 120\n            },\n            name: \"timelineWorkWeek\",\n            nextDate: function() {\n                var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.endDate()), this.calendarInfo().firstDay, 1);\n\n                return kendo.date.addDays(weekStart, this._workDays[0]);\n            },\n            previousDate: function() {\n                var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                var workDays = this._workDays;\n\n                return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n            },\n            calculateDateRange: function() {\n                var options = this.options,\n                    selectedDate = options.date,\n                    dayOfWeek = kendo.date.dayOfWeek,\n                    weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                    start = dayOfWeek(weekStart, options.workWeekStart, 1),\n                    end = dayOfWeek(start, options.workWeekEnd, 1),\n                    dates = [],\n                    workDays = (options.workDays && options.workDays.length) ? options.workDays.map(function(day) {\n                        return dayOfWeek(weekStart, day, 1).getTime();\n                    }) : null;\n\n                if (workDays) {\n                    start = weekStart;\n                    end = dayOfWeek(start, this.calendarInfo().firstDay + 6, 1);\n                }\n\n                while (start <= end) {\n                    if (workDays && workDays.indexOf(start.getTime()) > -1) {\n                        dates.push(start);\n                    } else if (!workDays) {\n                        dates.push(start);\n                    }\n\n                    start = kendo.date.nextDay(start);\n                }\n\n                this._render(dates);\n            }\n        }),\n        TimelineMonthView: TimelineView.extend({\n            options: {\n                name: \"TimelineMonthView\",\n                title: \"Timeline Month\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\",\n                workDayStart: new Date(1980, 1, 1, 0, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 23, 59, 59),\n                footer: false,\n                majorTick: 1440,\n                minorTickCount: 1\n            },\n            name: \"timelineMonth\",\n            calculateDateRange: function() {\n                var selectedDate = this.options.date,\n                    start = kendo.date.firstDayOfMonth(selectedDate),\n                    end = kendo.date.lastDayOfMonth(selectedDate),\n                    idx, length,\n                    dates = [];\n\n                for (idx = 0, length = end.getDate(); idx < length; idx++) {\n                    dates.push(start);\n                    start = kendo.date.nextDay(start);\n                }\n                this._render(dates);\n            }\n        })\n    });\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n\n"],"names":["define","__meta__","id","name","category","description","depends","hidden","$","window","kendo","jQuery","undefined","ui","setTime","date","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","getDate","getMilliseconds","MS_PER_DAY","MS_PER_MINUTE","CURRENT_TIME_MARKER_CLASS","CURRENT_TIME_MARKER_ARROW_CLASS","SCHEDULER_HEADER_WRAP_CLASS","INVERSE_COLOR_CLASS","BORDER_SIZE_COEFF","NS","EVENT_TEMPLATE","template","DATA_HEADER_TEMPLATE","EVENT_WRAPPER_STRING","toInvariantTime","staticDate","Date","getWorkDays","options","workDays","length","dayIndex","workWeekStart","workWeekEnd","Math","abs","push","setColspan","columnLevel","count","columns","i","colspan","collidingEvents","elements","left","right","idx","startPosition","overlaps","endPosition","rectLeft","rectRight","eventsForSlot","events","event","TimelineGroupedView","Class","init","view","this","_view","_getTimeSlotByPosition","x","y","groupIndex","group","groups","timeSlotByPosition","_hideHeaders","timesHeader","find","last","hide","datesHeader","_setColspan","timeColumn","_createRowsLayout","resources","rows","groupHeaderTemplate","_createVerticalColumnsLayout","_createColumnsLayout","_getRowCount","_groupCount","_getGroupsCount","_addContent","dates","columnCount","groupsCount","rowCount","start","end","slotTemplate","isVerticalGrouped","html","appendRow","content","classes","tmplDate","_resourceBySlot","isToday","workDayStart","workDayEnd","_isWorkDay","rowIdx","groupIdx","_forTimeRange","_addTimeSlotsCollections","groupCount","datesCount","tableRows","interval","isVerticallyGrouped","floor","rowMultiplier","time","rowIndex","cellMultiplier","cells","children","cellsPerGroup","cellsPerDay","dateIndex","cellOffset","startTime","cellIndex","_addTimeSlotToCollection","_getVerticalGroupCount","_getVerticalRowCount","eventGroups","maxRowCount","_isVerticallyGrouped","_renderEvent","eventGroup","adjustedEvent","range","container","element","_createEventElement","occurrence","head","tail","appendTo","css","top","height","eventHeight","eventObject","_startTime","_endTime","uid","slotRange","offsetTop","_inverseEventColor","addContinuousEvent","isAllDay","_arrangeRows","_verticalCountForLevel","level","_rowCountForLevel","_horizontalCountForLevel","_columnCountForLevel","_updateCurrentVerticalTimeMarker","ranges","currentTime","elementHtml","headerWrap","round","innerRect","getTime","timesTableMarker","prependTo","addClass","_adjustLeftPosition","prev","position","width","scrollHeight","_changeGroup","_prevGroupSlot","slot","isDay","collection","_collection","_nextGroupSlot","first","_verticalSlots","selection","reverse","_verticalMethod","_normalizeVerticalSelection","_horizontalSlots","method","startSlot","endSlot","multiple","result","_isHorizontallyGrouped","_changeVerticalViewPeriod","_changeHorizontalViewPeriod","slots","shift","_changeViewPeriod","_updateDirection","_createMoveHint","hint","rect","snap","offsetHeight","inverseColor","_appendMoveHint","_isRtl","scrollWidth","clientWidth","TimelineGroupedByDateView","eq","times","_createDateLayout","subColumns","isMajorTickColumn","isMiddleColumn","isLastSlotColumn","minorTickColumns","workDateIndex","tempStart","minorTickCount","msMajorInterval","majorTick","msInterval","_dates","startIndex","endIndex","eventObjects","index","currentSlot","_timeSlotCollections","_slots","dateRange","timeSlotRanges","firstTimesCell","lastTimesCell","markerTopPosition","timesTableMarkerCss","previous","_changeDate","collections","_getCollections","tempSlot","startEnd","slotIdx","offsetLeft","offsetWidth","TimelineView","scheduler","that","fn","call","_groupedView","_getGroupedView","title","_workDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_isVirtualized","_isGroupedByDate","_getNextEventIndexBySlot","sortedEvents","tempIndex","startDate","_getSelectedSlot","pad","_getSortedEvents","uniqueAllEvents","sort","second","isDaySlot","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","_scrollTo","elementOffset","elementOffsetDir","containerScroll","scrollLeft","containerOffsetDir","rightDistance","remove","_isInDateSlot","currentTimeMarker","useLocalTimezone","timezone","dataSource","schema","timezoneOffset","offset","convert","getTimezoneOffset","orientation","currentGroup","utcCurrentTime","toUtcTime","slotElement","slotByStartDate","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","bind","editable","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","attr","preventDefault","create","_slotByPosition","pageX","pageY","resourceInfo","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","useClickAsTap","browser","edge","filter","tap","_scrolling","location","_editUserEvents","eventElement","target","touchElement","touch","initialTouch","hasClass","mozilla","webkit","version","msie","scrollTop","ceil","selectedDateFormat","selectedShortDateFormat","selectedMobileDateFormat","today","endTime","showWorkHours","eventMinWidth","columnWidth","majorTimeHeaderTemplate","eventTemplate","dateHeaderTemplate","footer","command","messages","defaultRowText","showFullDay","showWorkDay","settings","Template","templateSettings","_eventTmpl","_render","_startDate","_endDate","_calculateSlotRanges","createLayout","_layout","_content","_footer","_setContentWidth","refreshLayout","th","currentTarget","contentWidth","contentTable","minWidth","calculatedWidth","add","slotStartTime","slotEndTime","slotRanges","rangeStart","rangeEnd","_slotRanges","min","max","action","verticalByDate","msMin","msMax","majorTickDivider","isLastMajorSlot","timeColumns","text","groupedView","minorTickSlots","minorTickIndex","className","minorTicks","middleColumn","lastSlotColumn","minorSlotsCount","slice","groupedResources","_groupOrientation","toggleFullDay","currentDate","isWorkDay","columnLevels","rowLevel","rowLevels","day","getDay","append","_addResourceView","addTimeSlotCollection","addDays","_timeSlotGroups","_timeSlotInterval","cell","getTimeSlotCollection","UTC","getFullYear","getMonth","addTimeSlot","visibleEndDate","nextDate","nextDay","previousDate","previousDay","render","_headerColumnCount","data","Query","field","dir","toArray","eventsByResource","_eventsByResource","_renderEvents","_setRowsHeight","_positionEvents","eventsForGroup","eventUid","Array","isArray","eventIndex","_positionEvent","eventBottomOffset","_getBottomRowOffset","verticalGroupCount","rowsCount","rowHeight","timesRow","row","_refreshSlots","isMobile","minOffset","maxOffset","eventOffset","slotsCollection","lastSlot","offsetRight","refresh","parentValue","resource","item","itemParentValue","getter","dataParentValueField","itemIdx","value","_resourceValue","eventsFilteredByResource","operator","groupEqFilter","_isInTimeSlot","slotIndex","_adjustEvent","eventStartTime","_time","eventEndTime","adjustedStartDate","adjustedEndDate","clone","isMultiDayEvent","duration","_continuousEvents","showDelete","destroy","resizable","resize","eventStartDate","eventEndDate","eventResources","apply","ns","singleDay","ariaLabel","_formatEventAriaLabel","angular","dataItem","addEvent","createRows","rowEvents","j","eventLength","_updateEventForSelection","_eventOptionsForMove","_updateEventForResize","set","_updateMoveHint","distance","clonedEvent","eventDuraton","_removeMoveHint","rangeIndex","_moveHint","_updateResizeHint","_removeResizeHint","startRect","_createResizeHint","_resizeHint","format","toString","toLocalDate","selectionByElement","vertical","collectionIndex","backward","prevGroupSlot","nextGroupSlot","newStart","newEnd","_isInRange","move","key","handled","keys","DOWN","UP","LEFT","RIGHT","off","clearInterval","groupOptions","resourceIndex","levels","groupLevel","groupLevelMember","passedChildren","numberOfChildren","_setResourceValue","TimelineWeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","TimelineWorkWeekView","weekStart","map","indexOf","TimelineMonthView","firstDayOfMonth","lastDayOfMonth","amd","a1","a2","a3"],"mappings":"CAAA,SAAaA,QACTA,OAAO,+BAA+B,CAAE,wBACzC,WAEH,IAAIC,EAAW,CACXC,GAAI,yBACJC,KAAM,0BACNC,SAAU,MACVC,YAAa,8BACbC,QAAS,CAAE,kBACXC,OAAQ,MAGFC,EA4gFPC,OAAOC,MAAMC,OA5gFHC,OAAb,EACQF,EAAQD,OAAOC,MACfG,EAAKH,EAAMG,GACXC,EAAUJ,EAAMK,KAAKD,QACrBE,EAAgBH,EAAGG,cACnBC,EAAaP,EAAMQ,YACnBC,EAAcT,EAAMU,aACpBC,EAASb,EAAEa,OACXC,EAAUZ,EAAMK,KAAKO,QACrBC,EAAkBb,EAAMK,KAAKQ,gBAC7BC,EAAad,EAAMK,KAAKS,WACxBC,EAAgBf,EAAMK,KAAKU,cAC3BC,EAA4B,iBAC5BC,EAAkC,uBAClCC,EAA8B,0BAC9BC,EAAsB,kBACtBC,EAAoB,MACpBC,EAAK,qBAELC,EAAiBtB,EAAMuB,SAAS,QAChC,gGACA,sDACAC,EAAuBxB,EAAMuB,SAAS,wEACtCE,EAAuB,sBACf,+BACA,yBACA,yBACI,sFACA,mBACJ,aACI,kBACJ,MACA,IACA,iCACI,qBACI,iDACJ,MACA,8BACI,kDACJ,qCACI,0CACJ,QACJ,UACA,MACA,iCACI,sBACI,gKACJ,MACA,qBACI,kDACJ,MACJ,UACA,iCACA,mDACA,MACA,iCACA,mDACA,MACA,SAEZ,SAASC,EAAgBrB,GACrB,IAAIsB,EAAa,IAAIC,KAAK,KAAM,EAAG,EAAG,EAAG,EAAG,GAC5CxB,EAAQuB,EAAYd,EAAgBR,IACpC,OAAOsB,EAGX,SAASE,EAAYC,GACjB,GAAIA,EAAQC,UAAYD,EAAQC,SAASC,OACrC,OAAOF,EAAQC,SAGnB,IAAIA,EAAW,GACf,IAAIE,EAAWH,EAAQI,cAAgB,EACvC,IAAIC,EAAcC,KAAKC,IAAIP,EAAQK,YAAc,GAEjDJ,EAASO,KAAKL,GAEd,MAAOE,GAAeF,EAAU,CAC5B,GAAIA,EAAW,EACXA,GAAY,OAEZA,IAEJF,EAASO,KAAKL,GAElB,OAAOF,EAGX,SAASQ,EAAWC,GAChB,IAAIC,EAAQ,EACZ,GAAID,EAAYE,QAAS,CACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAYE,QAAQV,OAAQW,IAC5CF,GAASF,EAAWC,EAAYE,QAAQC,IAE5CH,EAAYI,QAAUH,EACtB,OAAOA,MACJ,CACHD,EAAYI,QAAU,EACtB,OAAO,GAIf,SAASC,EAAgBC,EAAUC,EAAMC,GACrC,IAAIC,EACAC,EACAC,EACAC,EAEJ,IAAKH,EAAMH,EAASd,OAAS,EAAGiB,GAAO,EAAGA,IAAO,CAC7CC,EAAgBJ,EAASG,GAAKI,SAC9BD,EAAcN,EAASG,GAAKK,UAE5BH,EAAWD,GAAiBH,GAAQK,GAAeL,EAEnD,GAAII,GAAaD,GAAiBH,GAAQK,GAAeJ,GAAWD,GAAQG,GAAiBF,GAASE,EAAgB,CAClH,GAAIA,EAAgBH,EAChBA,EAAOG,EAGX,GAAIE,EAAcJ,EACdA,EAAQI,GAKpB,OAAOG,EAAcT,EAAUC,EAAMC,GAGzC,SAASO,EAAcT,EAAUC,EAAMC,GACnC,IAAIQ,EAAS,GAEb,IAAK,IAAIP,EAAM,EAAGA,EAAMH,EAASd,OAAQiB,IAAO,CAC5C,IAAIQ,EAAQ,CACRJ,SAAUP,EAASG,GAAKI,SACxBC,UAAWR,EAASG,GAAKK,WAG7B,GAAKG,EAAMJ,SAAWN,GAAQU,EAAMH,UAAYP,GAAUU,EAAMJ,UAAYN,GAAQU,EAAMH,WAAaN,EACnGQ,EAAOlB,KAAKQ,EAASG,IAI7B,OAAOO,EAGX,IAAIE,EAAsB1D,EAAM2D,MAAMhD,OAAO,CACzCiD,KAAM,SAASC,GACXC,KAAKC,MAAQF,GAGjBG,uBAAwB,SAASC,EAAGC,EAAGC,GACnC,IAAIC,EAAQN,KAAKC,MAAMM,OAAOF,GAE9B,OAAOC,EAAME,mBAAmBL,EAAGC,IAGvCK,aAAc,WACV,IAAIV,EAAOC,KAAKC,MAEhBF,EAAKW,YAAYC,KAAK,YAAYC,OAAOC,OACzCd,EAAKe,YAAYH,KAAK,YAAYC,OAAOC,QAG7CE,YAAa,SAASC,GAClBvC,EAAWuC,IAGfC,kBAAmB,SAASC,EAAWC,EAAMC,GACzC,IAAIrB,EAAOC,KAAKC,MAEhB,OAAOF,EAAKkB,kBAAkBC,EAAWC,EAAMC,IAGnDC,6BAA8B,SAASH,EAAWC,EAAMC,EAAqBxC,GAEzE,OAAOA,GAGX0C,qBAAsB,SAASJ,EAAWtC,EAASwC,GAC/C,IAAIrB,EAAOC,KAAKC,MAEhB,OAAOF,EAAKuB,qBAAqBJ,EAAWtC,EAASwC,IAGzDG,aAAc,WACV,IAAIxB,EAAOC,KAAKC,MAEhB,OAAOF,EAAKyB,eAGhBC,gBAAiB,WACb,OAAO,GAGXC,YAAa,SAASC,EAAOC,EAAaC,EAAaC,EAAUC,EAAOC,EAAKC,EAAcC,GACvF,IAAInC,EAAOC,KAAKC,MAChB,IAAIkC,EAAO,GACX,IAAInE,EAAU+B,EAAK/B,QAEnB,IAAIoE,EAAY,SAAS7F,GACrB,IAAI8F,EAAU,GACd,IAAIC,EAAU,GACd,IAAIC,EAEJ,IAAIrB,EAAY,SAASb,GACrB,OAAO,WACH,OAAON,EAAKyC,gBAAgB,CAAEnC,WAAYA,MAIlD,GAAInE,EAAMK,KAAKkG,QAAQd,EAAMxC,IACzBmD,GAAW,UAGf,GAAIpG,EAAMK,KAAKQ,gBAAgBR,GAAQL,EAAMK,KAAKQ,gBAAgBiB,EAAQ0E,eACtExG,EAAMK,KAAKQ,gBAAgBR,IAASL,EAAMK,KAAKQ,gBAAgBiB,EAAQ2E,cACtE5C,EAAK6C,WAAWjB,EAAMxC,IACvBmD,GAAW,kBAGfD,GAAW,OAASC,IAAY,GAAK,WAAaA,EAAU,IAAM,IAAM,IACxEC,EAAWrG,EAAMK,KAAKO,QAAQ6E,EAAMxC,IACpCjD,EAAMK,KAAKD,QAAQiG,EAAUrG,EAAMK,KAAKQ,gBAAgBR,IAExD8F,GAAWJ,EAAa,CAAE1F,KAAMgG,EAAUrB,UAAWA,EAAUgB,EAAoBW,EAASC,KAC5FT,GAAW,QAEX,OAAOA,GAGX,IAAK,IAAIQ,EAAS,EAAGA,EAASf,EAAUe,IAAU,CAC9CV,GAAQ,OACR,IAAK,IAAIW,EAAW,EAAGA,EAAWjB,EAAaiB,IAC3C,IAAK,IAAI3D,EAAM,EAAGjB,EAAS0D,EAAazC,EAAMjB,EAAQiB,IAClDgD,GAAQpC,EAAKgD,cAAchB,EAAOC,EAAKI,GAG/CD,GAAQ,QAEZ,OAAOA,GAGXa,yBAA0B,SAASC,EAAYC,EAAYC,EAAWC,EAAUC,GAC5E,IAAItD,EAAOC,KAAKC,MAChB,IAAI6B,EAAWqB,EAAUjF,OAEzB,GAAImF,EACAvB,EAAWxD,KAAKgF,MAAMxB,EAAWmB,GAGrC,IAAK,IAAI5C,EAAa,EAAGA,EAAa4C,EAAY5C,IAAc,CAC5D,IAAIkD,EAAgB,EACpB,IAAIjD,EAAQP,EAAKQ,OAAOF,GACxB,IAAImD,EAEJ,GAAIH,EACAE,EAAgBlD,EAGpB,IAAIoD,EAAWF,EAAgBzB,EAC/B,IAAI4B,EAAiB,EAErB,IAAKL,EACDK,EAAiBrD,EAGrB,IAAIsD,EAAQR,EAAUM,GAAUG,SAChC,IAAIC,EAAgBF,EAAMzF,SAAWmF,EAAsBJ,EAAa,GACxE,IAAIa,EAAcD,EAAgBX,EAElC,IAAK,IAAIa,EAAY,EAAGA,EAAYb,EAAYa,IAAa,CACzD,IAAIC,EAAaD,EAAYD,EAAeD,EAAgBH,EAC5DF,EAAOzG,EAAgB,IAAIe,MAAMiC,EAAKkE,cAEtC,IAAK,IAAIC,EAAY,EAAGA,EAAYJ,EAAaI,IAAa,CAE1DnE,EAAKoE,yBAAyB7D,EAAOqD,EAAOO,EAAWF,EAAYD,EAAWP,EAAMJ,GACpFI,GAAQJ,MAMxBgB,uBAAwB,SAASvC,GAE7B,OAAOA,GAGXwC,qBAAsB,SAASC,EAAajE,EAAYkE,GACpD,IAAIxE,EAAOC,KAAKC,MAEhB,OAAOF,EAAKyE,uBAAyBF,EAAYjE,GAAYkE,YAAcA,GAG/EE,aAAc,SAASC,EAAY/E,EAAOgF,EAAerE,EAAOsE,EAAOC,GACnE,IAAI9E,EAAOC,KAAKC,MAChB,IAAI6E,EAEJA,EAAU/E,EAAKgF,oBAAoBJ,EAAcK,WAAYrF,EAAOiF,EAAMK,MAAQN,EAAcM,KAAML,EAAMM,MAAQP,EAAcO,MAClIJ,EAAQK,SAASN,GAAWO,IAAI,CAAEC,IAAK,EAAGC,OAAQvF,EAAK/B,QAAQuH,cAE/D,IAAIC,EAAc,CACdzD,MAAO4C,EAAcK,WAAWS,YAAcd,EAAcK,WAAWjD,MACvEC,IAAK2C,EAAcK,WAAWU,UAAYf,EAAcK,WAAWhD,IACnE8C,QAASA,EACTa,IAAKhG,EAAMgG,IACXC,UAAWhB,EACXnB,SAAU,EACVoC,UAAW,GAGfnB,EAAWhF,OAAOC,EAAMgG,KAAOH,EAE/BzF,EAAK+F,mBAAmBhB,GACxB/E,EAAKgG,mBAAmBzF,EAAOsE,EAAOE,EAASnF,EAAMqG,UACrDjG,EAAKkG,aAAaT,EAAaZ,EAAOF,IAG1CwB,uBAAwB,SAASC,GAC7B,IAAIpG,EAAOC,KAAKC,MAEhB,OAAOF,EAAKqG,kBAAkBD,IAGlCE,yBAA0B,SAASF,GAC/B,IAAIpG,EAAOC,KAAKC,MAEhB,OAAOF,EAAKuG,qBAAqBH,IAGrCI,iCAAkC,SAASC,EAAQC,GAC/C,IAAI1G,EAAOC,KAAKC,MAChB,IAAIyG,EAAc,eAAiBxJ,EAA4B,WAC/D,IAAIyJ,EAAa5G,EAAKe,YAAYH,KAAK,IAAMvD,GAC7C,IAAI6B,EAAOX,KAAKsI,MAAMJ,EAAO,GAAGK,UAAUJ,EAAa,IAAI3I,KAAK2I,EAAYK,UAAY,GAAI,OAAO7H,MACnG,IAAI8H,EAAmB/K,EAAE0K,GAChBM,UAAUL,GACVM,SAAS9J,EAAkC,SAEpD4J,EAAiB3B,IAAI,CACjBnG,KAAMc,EAAKmH,oBAAoBjI,EAAQxC,EAAWsK,GAAoBzJ,EAAoB,GAC1F+H,IAAKsB,EAAWhG,KAAK,MAAMC,OAAOuG,OAAOC,WAAW/B,MAGxDrJ,EAAE0K,GAAaM,UAAUjH,EAAKsC,SAAS+C,IAAI,CACvCnG,KAAMc,EAAKmH,oBAAoBjI,GAC/BoI,MAAO,MACP/B,OAAQvF,EAAKsC,QAAQ,GAAGiF,aAAe,EACvCjC,IAAK,KAIbkC,aAAc,WACV,OAAOnL,GAGXoL,eAAgB,SAASC,EAAMnH,EAAOoH,GAClC,IAAI3H,EAAOC,KAAKC,MAEhB,GAAIF,EAAKyE,uBACL,OAAOiD,MACJ,CACH,IAAIE,EAAarH,EAAMsH,YAAY,EAAGF,GACtC,OAAOC,EAAW/G,SAI1BiH,eAAgB,SAASJ,EAAMnH,EAAOoH,GAClC,IAAI3H,EAAOC,KAAKC,MAEhB,GAAIF,EAAKyE,uBACL,OAAOiD,MACJ,CACH,IAAIE,EAAarH,EAAMsH,YAAY,EAAGF,GACtC,OAAOC,EAAWG,UAI1BC,eAAgB,SAASC,EAAWC,GAC/B,IAAIlI,EAAOC,KAAKC,MAEhB,OAAOF,EAAKwH,aAAaS,EAAWC,IAGxCC,gBAAiB,SAASD,GAErB,OAAOA,EAAU,WAAa,aAGnCE,4BAA6B,WACzB,OAAO/L,GAGXgM,iBAAkB,SAASJ,EAAW1H,EAAO+H,EAAQC,EAAWC,EAASC,EAAUP,GAChF,IAAIlI,EAAOC,KAAKC,MAChB,IAAIwI,EAAS,GAEbA,EAAOH,UAAYhI,EAAM+H,GAAQC,GACjCG,EAAOF,QAAUjI,EAAM+H,GAAQE,GAE/B,IAAKC,GAAYzI,EAAK2I,4BAA8BD,EAAOH,YAAcG,EAAOF,SAC5EE,EAAOH,UAAYG,EAAOF,QAAUxI,EAAKwH,aAAaS,EAAWC,GAGrE,OAAOQ,GAGXE,0BAA2B,WACvB,OAAO,OAGXC,4BAA6B,SAASC,EAAOC,EAAOd,EAAWC,GAC3D,IAAIlI,EAAOC,KAAKC,MAEhB,KAAM4I,EAAMP,YAAcO,EAAMN,WAAcO,GAAS/I,EAAKgJ,kBAAkBf,EAAWC,EAAS,OAC9F,OAAO,KAEX,OAAO,OAGXe,iBAAkB,SAAShB,EAAWxB,EAAQsC,EAAOb,GACjD,IAAIlI,EAAOC,KAAKC,MAEhBF,EAAKiJ,iBAAiBhB,EAAWxB,EAAQsC,EAAOb,EAAS,OAG5DgB,gBAAiB,SAASrE,EAAOD,GAC1B,IAAI5E,EAAOC,KAAKC,MAChB,IAAIqI,EAAY1D,EAAM7C,MAEtB,IAAImH,EAAOnJ,EAAKgF,oBAAoBJ,EAAcK,WAAYL,EAAcK,WAAY,MAAO,OAE/FkE,EAAKjC,SAAS,qBAEd,IAAIkC,EAAOvE,EAAMiC,UAAUlC,EAAcK,WAAWjD,MAAO4C,EAAcK,WAAWhD,IAAKjC,EAAK/B,QAAQoL,MACtG,IAAI/B,EAAQ8B,EAAKjK,MAAQiK,EAAKlK,KAE9B,GAAIoI,EAAQ,EACRA,EAAQ,EAGZ,IAAIpI,EAAOc,EAAKmH,oBAAoBiC,EAAKlK,MAEzC,IAAImG,EAAM,CACNnG,KAAMA,EACNoG,IAAKiD,EAAUzC,UACfP,OAAQgD,EAAUe,aAClBhC,MAAOA,GAGX6B,EAAK9D,IAAIA,GAET,GAAIT,EAAcK,WAAWsE,aACzBJ,EAAKjC,SAAS5J,GAGlB0C,EAAKwJ,gBAAgBL,IAG5BhC,oBAAqB,SAASjI,GAC3B,IAAIc,EAAOC,KAAKC,MAEhB,GAAIF,EAAKyJ,OACLvK,GAASc,EAAKsC,QAAQ,GAAGoH,YAAc1J,EAAKsC,QAAQ,GAAGqH,YAG3D,OAAOzK,KAIX0K,EAA4BzN,EAAM2D,MAAMhD,OAAO,CAC/CiD,KAAM,SAASC,GACXC,KAAKC,MAAQF,GAGjBG,uBAAwB,SAASC,EAAGC,EAAGC,GACnC,IAAIC,EAAQN,KAAKC,MAAMM,OAAOF,GAE9B,OAAOC,EAAME,mBAAmBL,EAAGC,EAAG,OAG1CK,aAAc,WACV,IAAIV,EAAOC,KAAKC,MAEhB,IAAKF,EAAKyE,uBAAwB,CAC9BzE,EAAKW,YAAYC,KAAK,YAAYiJ,GAAG,GAAG/I,OACxCd,EAAKe,YAAYH,KAAK,YAAYiJ,GAAG,GAAG/I,YAEhCd,EAAK8J,MAAMlJ,KAAK,WAAWE,QAG3CE,YAAa,aAEbE,kBAAmB,SAASC,EAAWC,EAAMC,EAAqBxC,GAC9D,IAAImB,EAAOC,KAAKC,MAEhB,OAAOF,EAAK+J,kBAAkBlL,EAAS,KAAM,OAGjDyC,6BAA8B,SAASH,EAAWC,EAAMC,GACpD,IAAIrB,EAAOC,KAAKC,MAEhB,OAAOF,EAAKuB,qBAAqBJ,EAAW,KAAME,IAGtDE,qBAAsB,SAASJ,EAAWtC,EAASwC,EAAqB2I,GACpE,IAAIhK,EAAOC,KAAKC,MAEhB,OAAOF,EAAKuB,qBAAqBJ,EAAWtC,EAASwC,EAAqB2I,EAAY,OAG1FxI,aAAc,SAAS4E,GACnB,IAAIpG,EAAOC,KAAKC,MAEhB,OAAOF,EAAKqG,kBAAkBD,IAGlC1E,gBAAiB,WACb,IAAI1B,EAAOC,KAAKC,MAEhB,OAAOF,EAAKyB,eAGhBE,YAAa,SAASC,EAAOC,EAAaC,EAAaC,EAAUC,EAAOC,EAAKC,EAAcC,GACvF,IAAInC,EAAOC,KAAKC,MAChB,IAAIkC,EAAO,GACX,IAAInE,EAAU+B,EAAK/B,QAEnB,IAAIoE,EAAY,SAAS7F,EAAMyN,EAAmBC,EAAgBC,EAAkBC,EAAkBrH,GAClG,IAAIT,EAAU,GACd,IAAIC,EAAU,GACd,IAAIC,EACJ,IAAI6H,EAAgBrK,EAAKyE,uBAAyBT,EAAY5E,EAE9D,IAAI+B,EAAY,SAASb,GACrB,OAAO,WACH,OAAON,EAAKyC,gBAAgB,CAAEnC,WAAYA,MAIlD,GAAInE,EAAMK,KAAKkG,QAAQd,EAAMxC,IACzBmD,GAAW,UAGf,GAAIpG,EAAMK,KAAKQ,gBAAgBR,GAAQL,EAAMK,KAAKQ,gBAAgBiB,EAAQ0E,eACtExG,EAAMK,KAAKQ,gBAAgBR,IAASL,EAAMK,KAAKQ,gBAAgBiB,EAAQ2E,cACtE5C,EAAK6C,WAAWjB,EAAMyI,IACvB9H,GAAW,kBAGfD,GAAW,OAASC,IAAY,GAAK,WAAaA,EAAU,IAAM,IAAM,IACxEC,EAAWrG,EAAMK,KAAKO,QAAQ6E,EAAMxC,IACpCjD,EAAMK,KAAKD,QAAQiG,EAAUrG,EAAMK,KAAKQ,gBAAgBR,IAExD8F,GAAWJ,EAAa,CAAE1F,KAAMgG,EAAUrB,UAAWA,EAAU4B,KAC/DT,GAAW,QAEX,OAAOA,GAGX,IAAIgI,EAAY,IAAIvM,KAAKiE,GACrBuI,EAAiBvK,EAAK/B,QAAQsM,eAC9BC,EAAkBxK,EAAK/B,QAAQwM,UAAYvN,EAC3CwN,EAAaF,EAAkBD,GAAkB,EACjDvG,EAEJ,IAAK,IAAIlB,EAAS,EAAGA,EAASf,EAAUe,IAAU,CAC9CV,GAAQ,OAEP,GAAKU,GAAUf,EAAW/B,EAAK2K,OAAOxM,UAAa,EAAG,CACpD6F,EAAalB,GAAUf,EAAW/B,EAAK2K,OAAOxM,QAC9CmM,EAAY,IAAIvM,KAAKiC,EAAK2K,OAAO3G,IACjC7H,EAAMK,KAAKD,QAAQ+N,EAAWnO,EAAMK,KAAKQ,gBAAgBgF,IAG5D,IAAK,IAAI5C,EAAM,EAAGjB,EAAS0D,EAAazC,EAAMjB,EAAQiB,IAAO,CAEzDgD,GAAQpC,EAAKgD,cAAcsH,EAAWrI,EAAKI,EAAWF,EAAmBL,GAEzE,GAAIK,EAAmB,CACvB5F,EAAQ+N,EAAWI,EAAY,OAC3B,OAGTtI,GAAQ,QAGX,OAAOA,GAGXa,yBAA0B,SAASC,EAAYC,EAAYC,EAAWC,EAAUC,GAC5E,IAAItD,EAAOC,KAAKC,MAChB,IAAI6B,EAAWqB,EAAUjF,OAExB,GAAImF,EACDvB,EAAWA,EAAWoB,EAG1B,IAAK,IAAIa,EAAY,EAAGA,EAAYb,EAAYa,IAAa,CACzD,IAAIR,EAAgB,EACpB,IAAIC,EAEJ,GAAIH,EACAE,EAAgBQ,EAGpB,IAAIN,EAAWF,EAAgBzB,EAC/B,IAAI4B,EAAiB,EACrB,IAAIC,EAAQR,EAAUM,GAAUG,SAChC,IAAIC,EAAgBR,EAAsBvB,EAAW6B,EAAMzF,QAAUgF,EAAaD,GAClF,IAAIa,EAAcH,EAAMzF,OAASgF,EACjC,IAAIc,EAEJR,EAAOzG,EAAgB,IAAIe,MAAMiC,EAAKkE,cAEtC,IAAK,IAAIC,EAAY,EAAGA,EAAYL,EAAeK,IAAa,CAC5D,IAAKb,EAAqB,CACtBW,EAAcD,EAAYD,EAAgBb,EAAaiB,EACvDR,QACG,CACHM,EAAa,EACbL,EAAQR,EAAUe,EAAaL,EAAgBE,GAAYH,SAG/D,IAAK,IAAIvD,EAAa,EAAGA,EAAa4C,EAAY5C,IAAc,CAC5D,IAAIC,EAAQP,EAAKQ,OAAOF,GAExBN,EAAKoE,yBAAyB7D,EAAOqD,EAAOtD,EAAY2D,EAAYD,EAAWP,EAAMJ,GAEzFI,GAAQJ,KAKpBgB,uBAAwB,WACpB,IAAIrE,EAAOC,KAAKC,MAEhB,OAAOF,EAAKsC,QAAQ1B,KAAK,MAAMzC,QAGnCmG,qBAAsB,SAASC,EAAajE,EAAYkE,GAEpD,OAAOA,GAGXE,aAAc,SAASC,EAAY/E,EAAOgF,EAAerE,EAAOsE,EAAOC,EAAW8F,EAAYC,GAC1F,IAAI7K,EAAOC,KAAKC,MAChB,IAAI6E,EACJ,IAAI+F,EAAe,GAEnB,IAAK,IAAIhM,EAAI+F,EAAM7C,MAAM+I,MAAOjM,GAAK+F,EAAM5C,IAAI8I,MAAOjM,IAAK,CACvDiG,EAAU/E,EAAKgF,oBAAoBJ,EAAcK,WAAYrF,EAAOd,IAAM+L,EAAU/L,IAAM8L,GAC1F7F,EAAQK,SAASN,GAAWO,IAAI,CAAEC,IAAK,EAAGC,OAAQvF,EAAK/B,QAAQuH,cAC/D,IAAIwF,EAAczK,EAAM0K,qBAAqB,GAAGC,OAAOpM,GACvD,IAAIqM,EAAY5K,EAAM6K,eAAeJ,EAAYhJ,MAAOgJ,EAAY/I,IAAK,OAAO,GAE5E,IAAIwD,EAAc,CAClBzD,MAAOlD,IAAM8L,EAAahG,EAAcK,WAAWS,YAAcd,EAAcK,WAAWjD,MAAQgJ,EAAYhJ,MAC9GC,IAAKnD,IAAM+L,EAAWjG,EAAcK,WAAWU,UAAYf,EAAcK,WAAWhD,IAAM+I,EAAY/I,IACtG8C,QAASA,EACTa,IAAKhG,EAAMgG,IACXC,UAAWsF,EACXzH,SAAU,EACVoC,UAAW,GAGfnB,EAAWhF,OAAOC,EAAMgG,KAAOH,EAC/BqF,EAAarM,KAAKgH,GAElBzF,EAAKgG,mBAAmBzF,EAAO4K,EAAWpG,EAASnF,EAAMqG,UACzDjG,EAAKkG,aAAaT,EAAa0F,EAAWxG,GAE9CA,EAAWhF,OAAOC,EAAMgG,KAAOkF,GAGnC3E,uBAAwB,SAASC,GAC7B,IAAIpG,EAAOC,KAAKC,MAEhB,OAAOF,EAAKuG,qBAAqBH,IAGrCE,yBAA0B,SAASF,EAAOzH,GACtC,IAAIqB,EAAOC,KAAKC,MAEhB,OAAOF,EAAKuG,qBAAqB5H,GAAeqB,EAAKuG,qBAAqB,IAG9EC,iCAAkC,SAASC,EAAOC,GAC9C,IAAI1G,EAAOC,KAAKC,MAChB,IAAImL,EAAiBrL,EAAK8J,MAAMlJ,KAAK,MAAMmH,QAAQnH,KAAK,MAAMmH,QAC9D,IAAIuD,EAAgBtL,EAAK8J,MAAMlJ,KAAK,MAAMmH,QAAQnH,KAAK,MAAMC,OAC7D,IAAI8F,EAAc,eAAiBxJ,EAA4B,WAC/D,IAAI6J,EAAmB/K,EAAE0K,GAAaM,UAAUjH,EAAK8J,OACrD,IAAIyB,EAAoBhN,KAAKsI,MAAMJ,EAAO,GAAGK,UAAUJ,EAAa,IAAI3I,KAAK2I,EAAYK,UAAY,GAAI,OAAOzB,KAChH,IAAIkG,EAAsB,GAE1B,GAAIvL,KAAKwJ,OAAQ,CACb+B,EAAoBrM,MAAQkM,EAAehE,WAAWnI,KAAOtC,EAAYyO,GAAkBzO,EAAY0O,GACvGtE,EAAiBE,SAAS9J,EAAkC,aACzD,CACHoO,EAAoBtM,KAAOoM,EAAcjE,WAAWnI,KACpD8H,EAAiBE,SAAS9J,EAAkC,UAGhEoO,EAAoBlG,IAAMiG,EAAqB7O,EAAWsK,GAAoBzJ,EAAoB,EAElGyJ,EAAiB3B,IAAImG,GAErBvP,EAAE0K,GAAaM,UAAUjH,EAAKsC,SAAS+C,IAAI,CACvCC,IAAKiG,EACLhG,OAAQ,MACRpG,MAAO,MACPmI,MAAOtH,EAAKsC,QAAQ,GAAGoH,YACvBxK,KAAM,KAIdsI,aAAc,SAASS,EAAWwD,EAAU/D,GACvC,IAAI1H,EAAOC,KAAKC,MAEhB,IAAKwH,EACFO,EAAU3H,WAAamL,EAAWzL,EAAKQ,OAAOrC,OAAS,EAAI,GAIlEsJ,eAAgB,SAASC,GACpB,OAAOA,GAGbI,eAAgB,SAASJ,GACnB,OAAOA,GAGbgE,YAAa,SAASzD,EAAWC,EAASR,GACtC,IAAI1H,EAAOC,KAAKC,MAChB,IAAIK,EAAQP,EAAKQ,OAAOyH,EAAU3H,YAClC,IAAIqL,EAAaZ,EAEjB,GAAI7C,EAAS,CACPyD,EAAcpL,EAAMqL,gBAAgB,OACpCb,EAAQrD,EAAKqD,MAAQ,EAErB,GAAIA,GAAS,EACT,OAAOY,EAAY,GAAGT,OAAOH,OAE9B,CACHY,EAAcpL,EAAMqL,gBAAgB,OACpCb,EAAQrD,EAAKqD,MAAQ,EAErB,GAAIY,EAAY,IAAMA,EAAY,GAAGT,OAAOH,GACxC,OAAOY,EAAY,GAAGT,OAAOH,KAK3C/C,eAAgB,SAASC,EAAWC,EAASR,GACzC,OAAOzH,KAAKyL,YAAYzD,EAAWC,EAASR,IAGhDS,gBAAiB,SAASD,EAASO,GAC/B,GAAIA,EACD,OAAOP,EAAU,SAAW,gBAE5B,OAAOA,EAAU,WAAa,aAIrCE,4BAA6B,SAASH,EAAWxB,EAAQyB,EAASO,GAC9D,IAAIzI,EAAOC,KAAKC,MAEhB,IAAKuI,EACD,OAAOzI,EAAKoI,4BAA4BH,EAAWxB,EAAQyB,GAG/D,OAAO7L,GAGXgM,iBAAkB,SAASJ,EAAW1H,EAAO+H,EAAQC,EAAWC,EAASC,EAAUP,GAC9E,IAAIlI,EAAOC,KAAKC,MAChB,IAAI2L,EAAW7L,EAAKwH,aAAaS,EAAWC,GAC5C,IAAIQ,EAAS,GAEd,IAAKmD,GACD,IAAK7L,EAAKyE,uBAAwB,CAC9BiE,EAAOH,UAAYhI,EAAM+H,GAAQC,GACjCG,EAAOF,QAAUjI,EAAM+H,GAAQE,SAInCE,EAAOH,UAAYG,EAAOF,QAAUqD,EAGxC,OAAOnD,GAGXE,0BAA2B,SAASE,EAAOC,EAAOd,EAAWC,GACzD,IAAIlI,EAAOC,KAAKC,MAEhB,KAAM4I,EAAMP,YAAcO,EAAMN,WAAaO,GACzC/I,EAAKgJ,kBAAkBf,EAAWC,EAASlI,EAAKyE,wBAChD,OAAO,KAEX,OAAO,OAGXoE,4BAA6B,SAASC,EAAOC,EAAOd,EAAWC,GAC5D,IAAIlI,EAAOC,KAAKC,MAEhB,GAAKF,EAAKyE,uBACN,OAAO,MAGX,KAAMqE,EAAMP,YAAcO,EAAMN,WAAcO,GAAS/I,EAAKgJ,kBAAkBf,EAAWC,EAAS,OAC7F,OAAO,KAEX,OAAO,OAGXe,iBAAkB,SAAShB,EAAWxB,EAAQsC,EAAOb,GACjD,IAAIlI,EAAOC,KAAKC,MAEhBF,EAAKiJ,iBAAiBhB,EAAWxB,EAAQsC,EAAOb,GAAUlI,EAAKyE,yBAGlEyE,gBAAiB,SAASrE,EAAOD,GAC1B,IAAI5E,EAAOC,KAAKC,MAChB,IAAIqI,EAAY1D,EAAM7C,MACtB,IAAI8J,EAAWjH,EAAM5C,IAErB,IAAK,IAAI8J,EAAUxD,EAAUwC,MAAOgB,GAAWD,EAASf,MAAOgB,IAAW,CACtE,IAAIrE,EAAO7C,EAAM+C,WAAWsD,OAAOa,GACnC,IAAI5C,EAAOnJ,EAAKgF,oBAAoBJ,EAAcK,WAAYL,EAAcK,WAAY,MAAO,OAE/FkE,EAAKjC,SAAS,qBAEd,IAAI7B,EAAM,CACNnG,KAAMwI,EAAKsE,WAAa,EACxB1G,IAAKoC,EAAK5B,UACVP,OAAQvF,EAAK/B,QAAQuH,YACrB8B,MAAOI,EAAKuE,aAGhB9C,EAAK9D,IAAIA,GAET,GAAIT,EAAcK,WAAWsE,aACzBJ,EAAKjC,SAAS5J,GAGlB0C,EAAKwJ,gBAAgBL,KAIhChC,oBAAqB,SAASjI,GAC1B,IAAIc,EAAOC,KAAKC,MAEjB,GAAIF,EAAKyJ,SAAWzJ,EAAKyE,uBACrBvF,GAASc,EAAKsC,QAAQ,GAAGoH,YAAc1J,EAAKsC,QAAQ,GAAG2J,YAG3D,OAAO/M,KAOXgN,GAHJ/P,EAAMG,GAAG6P,UAAUtM,oBAAsBA,EACzC1D,EAAMG,GAAG6P,UAAUvC,0BAA4BA,EAE5BnN,EAAcK,OAAO,CACpCiD,KAAM,SAASgF,EAAS9G,GACpB,IAAImO,EAAOnM,KAEXxD,EAAc4P,GAAGtM,KAAKuM,KAAKF,EAAMrH,EAAS9G,GAE1CmO,EAAKG,aAAeH,EAAKI,kBAEzBJ,EAAKK,MAAQL,EAAKnO,QAAQwO,OAASL,EAAKnO,QAAQrC,KAEhDwQ,EAAKM,UAAY1O,EAAYoO,EAAKnO,SAElCmO,EAAKO,aAELP,EAAKQ,YAELR,EAAKS,qBAELT,EAAKU,UAELV,EAAKW,aAAa,OAEtBnR,KAAM,WAENoR,eAAgB,WACZ,OAAO,OAGXR,gBAAiB,WAEb,GAAIvM,KAAKgN,mBACF,OAAO,IAAI9Q,EAAMG,GAAG6P,UAAUvC,0BAA0B3J,WAExD,OAAO,IAAI9D,EAAMG,GAAG6P,UAAUtM,oBAAoBI,OAI7DiN,yBAA0B,SAASxF,EAAMyF,EAAc7M,GACpD,GAAIL,KAAKwE,uBACL,OAAOtI,EAAMG,GAAGG,cAAc4P,GAAGa,yBAAyBZ,KAAKrM,KAAMyH,EAAMyF,EAAc7M,GAG5F,IAAI8M,EAAY,EAEhB,IAAK,IAAItO,EAAI,EAAGA,EAAIqO,EAAahP,OAAQW,IAAK,CAC1C,GAAI4I,EAAK2F,YAAcF,EAAarO,GAAGkD,MAAMqL,YAAa,CACtDD,IACA,SAGJ,GAAI1F,EAAK2F,YAAYtG,YAAcoG,EAAarO,GAAGkD,MAAMqL,YAAYtG,WACpEzG,EAAa6M,EAAarO,GAAGkD,MAAM1B,WAAY,CAC1C8M,IACA,SAGL,MAGL,OAAOA,GAGXE,iBAAkB,SAAS5F,EAAMyF,EAAcvN,EAAOR,EAAKmO,EAAKnG,GAC5D,GAAInH,KAAKwE,uBACN,OAAOtI,EAAMG,GAAGG,cAAc4P,GAAGiB,iBAAiBhB,KAAKrM,KAAMyH,EAAMyF,EAAcvN,EAAOR,EAAKmO,EAAKnG,GAGrG,OAAOM,GAGX8F,iBAAkB,SAASC,GACvB,GAAIxN,KAAKwE,uBACN,OAAOtI,EAAMG,GAAGG,cAAc4P,GAAGmB,iBAAiBlB,KAAKrM,KAAMwN,GAGhE,OAAOA,EAAgBC,KAAK,SAAS3F,EAAO4F,GACxC,IAAIjF,EAASX,EAAM/F,MAAMqL,YAAYtG,UAAY4G,EAAO3L,MAAMqL,YAAYtG,UAE1E,GAAI2B,IAAW,EAAG,CACd,GAAIX,EAAM/F,MAAM4L,YAAcD,EAAO3L,MAAM4L,UACnClF,GAAU,EAGlB,IAAKX,EAAM/F,MAAM4L,WAAaD,EAAO3L,MAAM4L,UACnClF,EAAS,EAIrB,GAAIA,IAAW,EACXA,EAASX,EAAM/F,MAAM1B,WAAaqN,EAAO3L,MAAM1B,WAGnD,GAAIoI,IAAW,EACXA,EAASzM,EAAE8L,EAAMhD,SAASgG,QAAU9O,EAAE0R,EAAO5I,SAASgG,QAG1D,OAAOrC,KAIfmF,0BAA2B,WACvB5N,KAAK6N,yBAAyB,IAAI/P,OAGtCgQ,UAAW,SAAShJ,EAASD,GACzBrI,EAAc4P,GAAG0B,UAAUzB,KAAKrM,KAAM8E,EAASD,GAE/C,IAAIkJ,EAAgBjJ,EAAQiH,WACxBiC,EAAmBlJ,EAAQkH,YAC3BiC,EAAkBpJ,EAAUqJ,WAC5BC,EAAqBtJ,EAAU6E,YAC/B0E,EAAgBL,EAAgBC,EAChCvF,EAAS,EAET,GAAIwF,EAAkBF,EAClBtF,EAASsF,OACN,GAAIK,EAAiBH,EAAkBE,EAC1C,GAAIH,GAAoBG,EACpB1F,EAAU2F,EAAgBD,OAE1B1F,EAASsF,OAGbtF,EAASwF,EAEbpJ,EAAUqJ,WAAazF,GAG/BoF,yBAA0B,SAASpH,GAC/B,IAAIzI,EAAUgC,KAAKhC,QAEnBgC,KAAKc,YAAYH,KAAK,IAAMzD,GAA2BmR,SACvDrO,KAAK6J,MAAMlJ,KAAK,IAAMzD,GAA2BmR,SACjDrO,KAAKqC,QAAQ1B,KAAK,IAAMzD,GAA2BmR,SAEnD,IAAKrO,KAAKsO,cAAc,CAAEvM,MAAO0E,EAAazE,IAAKyE,IAC/C,OAGJ,GAAIzI,EAAQuQ,kBAAkBC,mBAAqB,MAAO,CACtD,IAAIC,EAAWzQ,EAAQ0Q,WAAW1Q,QAAQ2Q,OAAOF,SAEjD,GAAIzQ,EAAQ0Q,YAAcD,EAAU,CAChC,IAAIG,EAAiB1S,EAAMuS,SAASI,OAAOpI,EAAagI,GACxDhI,EAAcvK,EAAMuS,SAASK,QAAQrI,EAAaA,EAAYsI,oBAAqBH,IAI3F,IAAI/M,GAAe7D,EAAQsC,OAAStC,EAAQsC,MAAM0O,aAAe,WAAa,EAAIhP,KAAKO,OAAOrC,OAE9F,IAAK,IAAImC,EAAa,EAAGA,EAAawB,EAAaxB,IAAc,CAC7D,IAAI4O,EAAejP,KAAKO,OAAOF,GAE/B,IAAK4O,EACD,OAGJ,IAAIC,EAAiBhT,EAAMK,KAAK4S,UAAU1I,GAC1C,IAAID,EAASyI,EAAa9D,eAAe+D,EAAgBA,EAAiB,GAE1E,GAAI1I,EAAOtI,SAAW,EAClB,OAGJ,IAAIyJ,EAAanB,EAAO,GAAGmB,WAC3B,IAAIyH,EAAczH,EAAW0H,gBAAgB5I,GAE7C,GAAI2I,EAEA,GAAIpP,KAAKwE,uBACLxE,KAAKsM,aAAa/F,iCAAiCC,EAAOC,OACvD,CACH,IAAIC,EAAc,eAAiBxJ,EAA4B,WAC/D,IAAIyJ,EAAa3G,KAAKc,YAAYH,KAAK,IAAMvD,GAC7C,IAAI6B,EAAOX,KAAKsI,MAAMJ,EAAO,GAAGK,UAAUJ,EAAa,IAAI3I,KAAK2I,EAAYK,UAAY,GAAI,OAAO7H,MACnG,IAAI8H,EAAmB/K,EAAE0K,GAChBM,UAAUL,GACVM,SAAS9J,EAAkC,SAEpD4J,EAAiB3B,IAAI,CACjBnG,KAAMe,KAAKkH,oBAAoBjI,EAAQxC,EAAWsK,GAAoBzJ,EAAoB,GAC1F+H,IAAKsB,EAAWhG,KAAK,MAAMC,OAAOuG,OAAOC,WAAW/B,MAGxDrJ,EAAE0K,GAAaM,UAAUhH,KAAKqC,SAAS+C,IAAI,CACvCnG,KAAMe,KAAKkH,oBAAoBjI,GAC/BoI,MAAO,MACP/B,OAAQtF,KAAKqC,QAAQ,GAAGiF,aAAe,EACvCjC,IAAK,OAOzB6B,oBAAqB,SAASjI,GAC1B,OAAOe,KAAKsM,aAAapF,oBAAoBjI,IAGjD6N,aAAc,SAASwC,GACnB,IAAInD,EAAOnM,KACX,IAAIuP,EAAgBpD,EAAKnO,QAAQuQ,kBAEjC,GAAIgB,IAAkB,OAASA,EAAcC,iBAAmBpT,EAAW,CACvE+P,EAAKyB,4BAEL,GAAI0B,EACAnD,EAAKsD,wBAA0BC,YAAY1P,KAAK4N,0BAA0B+B,KAAKxD,GAAOoD,EAAcC,kBAKhH7C,UAAW,WACP,GAAI3M,KAAKhC,QAAQ4R,SACb,GAAI5P,KAAK6P,YACL7P,KAAK8P,sBAEL9P,KAAK+P,kBAKjBA,eAAgB,WACZ,IAAI5D,EAAOnM,KACXmM,EAAKrH,QAAQkL,GAAG,QAAUzS,EAAI,6BAA8B,SAAS0S,GACjE9D,EAAK+D,QAAQ,SAAU,CAAEvK,IAAK3J,EAAEgE,MAAMmQ,QAAQ,YAAYC,KAAKlU,EAAMkU,KAAK,UAC1EH,EAAEI,mBAGN,GAAIlE,EAAKnO,QAAQ4R,SAASU,SAAW,MACjCnE,EAAKrH,QAAQkL,GAAG,WAAazS,EAAI,0BAA2B,SAAS0S,GACjE,IAAIxI,EAAO0E,EAAKoE,gBAAgBN,EAAEO,MAAOP,EAAEQ,OAE3C,GAAIhJ,EAAM,CACN,IAAIiJ,EAAevE,EAAK3J,gBAAgBiF,GACxC0E,EAAK+D,QAAQ,MAAO,CAAES,UAAW9T,EAAO,CAAEkF,MAAO0F,EAAK2F,YAAapL,IAAKyF,EAAKmJ,WAAaF,KAG9FT,EAAEI,mBAIV,GAAIlE,EAAKnO,QAAQ4R,SAASiB,SAAW,MACjC1E,EAAKrH,QAAQkL,GAAG,WAAazS,EAAI,WAAY,SAAS0S,GAClD9D,EAAK+D,QAAQ,OAAQ,CAAEvK,IAAK3J,EAAEgE,MAAMmQ,QAAQ,YAAYC,KAAKlU,EAAMkU,KAAK,UACxEH,EAAEI,oBAKdP,eAAgB,WACZ,IAAI3D,EAAOnM,KACX,IAAI8Q,EAAY,EAEhB,GAAI5U,EAAM6U,QAAQC,SAASC,QACvBH,EAAY,EAGhB,GAAI3E,EAAKnO,QAAQ4R,SAASU,SAAW,MACjCnE,EAAK+E,eAAiB,IAAIhV,EAAMiV,WAAWhF,EAAKrH,QAAS,CACrDgM,UAAWA,EACXM,eAAgBlV,EAAM6U,QAAQM,QAAQC,KACtCC,OAAQ,0BACRC,IAAK,SAASvB,GACV,GAAI9D,EAAKsF,WACL,OAEJ,IAAItR,EAAI8P,EAAE9P,EAAEuR,WAAatV,EAAY6T,EAAE9P,EAAEuR,SAAWzB,EAAE9P,EACtD,IAAIC,EAAI6P,EAAE7P,EAAEsR,WAAatV,EAAY6T,EAAE7P,EAAEsR,SAAWzB,EAAE7P,EACtD,IAAIqH,EAAO0E,EAAKoE,gBAAgBpQ,EAAGC,GAEnC,GAAIqH,EAAM,CACN,IAAIiJ,EAAevE,EAAK3J,gBAAgBiF,GACxC0E,EAAK+D,QAAQ,MAAO,CAAES,UAAW9T,EAAO,CAAEkF,MAAO0F,EAAK2F,YAAapL,IAAKyF,EAAKmJ,WAAaF,KAG9FT,EAAEI,oBAKd,GAAIlE,EAAKnO,QAAQ4R,SAASiB,SAAW,MACjC1E,EAAKwF,gBAAkB,IAAIzV,EAAMiV,WAAWhF,EAAKrH,QAAS,CACtDgM,UAAWA,EACXM,eAAgBlV,EAAM6U,QAAQM,QAAQC,KACtCC,OAAQ,WACRC,IAAK,SAASvB,GACV,GAAI9D,EAAKsF,WACL,OAEJ,IAAIG,EAAe5V,EAAEiU,EAAE4B,QAAQ1B,QAAQ,YACvC,IAAI2B,EAAe9V,EAAEiU,EAAE8B,MAAMC,cAE7B,GAAIF,EAAaG,SAAS,aACtB9F,EAAK+D,QAAQ,SAAU,CAAEvK,IAAKiM,EAAaxB,KAAKlU,EAAMkU,KAAK,eACxD,IAAKwB,EAAaK,SAAS,kBAC9B9F,EAAK+D,QAAQ,OAAQ,CAAEvK,IAAKiM,EAAaxB,KAAKlU,EAAMkU,KAAK,UAG7DH,EAAEI,qBAMlBE,gBAAiB,SAASpQ,EAAGC,GACzB,IAAIqH,EACJ,IAAIpF,EAAUrC,KAAKqC,QACnB,IAAIwM,EAASxM,EAAQwM,SACrB,IAAIxO,EAEJF,GAAK0O,EAAO5P,KACZmB,GAAKyO,EAAOxJ,IAEZ,GAAIrF,KAAKwJ,OAAQ,CACb,IAAI6H,EAAUnV,EAAM6U,QAAQM,QAE5B,GAAIA,EAAQa,SAAYb,EAAQc,QAAUd,EAAQe,SAAW,GAAK,CAC7DjS,GAAMkC,EAAQ,GAAGoH,YAAcpH,EAAQ,GAAG2J,YAC1C7L,GAAKkC,EAAQ,GAAG6L,gBACd,GAAImD,EAAQgB,KAAM,CACpBlS,GAAKjE,EAAMgS,WAAW7L,GACtBlC,GAAKkC,EAAQ,GAAGoH,YAAcpH,EAAQ,GAAG2J,iBACvC,GAAIqF,EAAQc,OACdhS,GAAKkC,EAAQ,GAAG6L,gBAGrB/N,GAAKkC,EAAQ,GAAG6L,WAGpB9N,GAAKiC,EAAQ,GAAGiQ,UAEhBnS,EAAI7B,KAAKiU,KAAKpS,GACdC,EAAI9B,KAAKiU,KAAKnS,GAEd,IAAKC,EAAa,EAAGA,EAAaL,KAAKO,OAAOrC,OAAQmC,IAAc,CAE/DoH,EAAOzH,KAAKsM,aAAapM,uBAAuBC,EAAGC,EAAGC,GAEtD,GAAIoH,EACA,OAAOA,EAIhB,OAAO,MAGXzJ,QAAS,CACLrC,KAAM,eACN6Q,MAAO,WACPgG,mBAAoB,QACpBC,wBAAyB,QACzBC,yBAA0B,aAC1BnW,KAAML,EAAMK,KAAKoW,QACjB1O,UAAW/H,EAAMK,KAAKoW,QACtBC,QAAS1W,EAAMK,KAAKoW,QACpBE,cAAe,MACfvI,eAAgB,EAChBsF,SAAU,KACVlN,aAAc,IAAI5E,KAAK,KAAM,EAAG,EAAG,EAAG,EAAG,GACzC6E,WAAY,IAAI7E,KAAK,KAAM,EAAG,EAAG,GAAI,EAAG,GACxCM,cAAe,EACfC,YAAa,EACbmM,UAAW,GACXjF,YAAa,GACbuN,cAAe,EACfC,YAAa,IACb3R,oBAAqB,UACrB4R,wBAAyB,+BACzB/Q,aAAc,SACdgR,cAAezV,EACf0V,mBAAoBxV,EACpByV,OAAQ,CACJC,QAAS,WAEb7E,kBAAmB,CACfiB,eAAgB,IAChBhB,iBAAkB,MAEtB6E,SAAU,CACNC,eAAgB,aAChBC,YAAa,gBACbC,YAAa,wBAIrB9T,OAAQ,CAAC,SAAU,MAAO,QAE1BgN,WAAY,WACR,IAAI1O,EAAUgC,KAAKhC,QACfyV,EAAW5W,EAAO,GAAIX,EAAMwX,SAAU1V,EAAQ2V,kBAElD3T,KAAKiT,cAAgBjT,KAAK4T,WAAW5V,EAAQiV,cAAetV,GAC5DqC,KAAKgT,wBAA0B9W,EAAMuB,SAASO,EAAQgV,wBAAyBS,GAC/EzT,KAAKkT,mBAAqBhX,EAAMuB,SAASO,EAAQkV,mBAAoBO,GACrEzT,KAAKiC,aAAe/F,EAAMuB,SAASO,EAAQiE,aAAcwR,GACzDzT,KAAKoB,oBAAsBlF,EAAMuB,SAASO,EAAQoD,oBAAqBqS,IAG3EI,QAAS,SAASlS,GACd,IAAIwK,EAAOnM,KAEX2B,EAAQA,GAAS,GAEjBwK,EAAKzB,OAAS/I,EAEdwK,EAAK2H,WAAanS,EAAM,GAExBwK,EAAK4H,SAAWpS,EAAOA,EAAMzD,OAAS,GAAM,GAE5CiO,EAAK6H,uBAEL7H,EAAK8H,aAAa9H,EAAK+H,QAAQvS,IAE/BwK,EAAKgI,SAASxS,GAEdwK,EAAKiI,UAELjI,EAAKkI,mBAELlI,EAAKmI,gBAELnI,EAAKrL,YAAYkP,GAAG,QAAUzS,EAAI,aAAc,SAAS0S,GACrD,IAAIsE,EAAKvY,EAAEiU,EAAEuE,eAAerE,QAAQ,MAEpC,IAAI1I,EAAO0E,EAAKoE,gBAAgBgE,EAAG1F,SAAS5P,KAAMkN,EAAK9J,QAAQwM,SAASxJ,KAExE8G,EAAK+D,QAAQ,WAAY,CAAEnQ,KAAM,WAAYxD,KAAMkL,EAAK2F,gBAG5DjB,EAAKG,aAAa7L,gBAGtB4T,iBAAkB,WACd,IAAIhS,EAAUrC,KAAKqC,QACnB,IAAIoS,EAAepS,EAAQgF,QAC3B,IAAIqN,EAAe1U,KAAKqC,QAAQ1B,KAAK,SACrC,IAAIiB,EAAc8S,EAAa/T,KAAK,MAAMmH,QAAQlE,WAAW1F,OAE7D,IAAIyW,EAAW,IACf,IAAIC,EAAkBhT,EAAc5B,KAAKhC,QAAQ+U,YAEjD,GAAI0B,EAAeG,EACfD,EAAWrW,KAAKiU,KAAMqC,EAAkBH,EAAgB,KAG5DC,EAAaG,IAAI7U,KAAKc,YAAYH,KAAK,UAClCyE,IAAI,QAASuP,EAAW,MAGjCX,qBAAsB,WAClB,IAAIrS,EAAQ3B,KAAK0K,OACjB,IAAIoK,EAAgB9U,KAAKiE,YACzB,IAAI8Q,EAAc/U,KAAK4S,UAEvBmC,EAAchY,EAAgBgY,GAC9BD,EAAgB/X,EAAgB+X,GAEhC,GAAIC,IAAgBD,EAChBC,GAAe/X,EAAa,OACzB,GAAI+X,EAAcD,EACrBC,GAAe/X,EAGnB,IAAIgY,EAAa,GACjB,IAAK,IAAInW,EAAI,EAAGA,EAAI8C,EAAMzD,OAAQW,IAAK,CACnC,IAAIoW,EAAanY,EAAQ6E,EAAM9C,IAC/BvC,EAAQ2Y,EAAYH,GAEpB,IAAII,EAAWpY,EAAQ6E,EAAM9C,IAC7BvC,EAAQ4Y,EAAUH,GAElBC,EAAWxW,KAAK,CACZuD,MAAO7F,EAAMK,KAAK4S,UAAU8F,GAC5BjT,IAAK9F,EAAMK,KAAK4S,UAAU+F,KAIlClV,KAAKmV,YAAcH,GAGvBjS,cAAe,SAASqS,EAAKC,EAAKC,EAAQC,EAAgB1T,GACtDuT,EAAMxX,EAAgBwX,GACtBC,EAAMzX,EAAgByX,GAEtB,IAAIlJ,EAAOnM,KACPwV,EAAQzY,EAAgBqY,GACxBK,EAAQ1Y,EAAgBsY,GACxB/K,EAAiB6B,EAAKnO,QAAQsM,eAC9BC,EAAkB4B,EAAKnO,QAAQwM,UAAYvN,EAC3CwN,EAAaF,EAAkBD,GAAkB,EACjDvI,EAAQ,IAAIjE,MAAMsX,GAClBjW,EAAM,EAAGjB,EACTiE,EAAO,GAEXjE,EAASlB,EAAayN,EAEtB,GAAI+K,GAASC,EAAO,CAChB,GAAID,EAAQC,EACRA,GAASzY,EAGbkB,GAAWuX,EAAQD,GAAS/K,EAGhCvM,EAASqX,EAAiB,EAAIjX,KAAKsI,MAAM1I,GAEzC,GAAI2D,EACA3D,EAASA,EAAS2D,EAGtB,KAAO1C,EAAMjB,EAAQiB,IAAO,CACxB,IAAIuW,EAAmBvW,GAAOoL,EAAkBE,GAChD,IAAIT,EAAoB0L,IAAqB,EAC7C,IAAIzL,EAAiByL,EAAmBpL,EAAiB,EACzD,IAAIJ,EAAmBwL,IAAqBpL,EAAiB,EAC7D,IAAIH,EAAmBG,EAEvB,GAAIpM,EAASoM,IAAmB,EAAG,CAC/B,IAAIqL,EAAmBzX,GAAUiB,EAAM,GAAMmL,EAC7C,GAAIN,GAAqB2L,EACrBxL,EAAmBjM,EAASoM,EAIpCnI,GAAQmT,EAAOvT,EAAOiI,EAAmBC,EAAgBC,EAAkBC,EAAkBhL,EAAM0C,GAEnG,IAAK0T,EACD,GAAI1T,GACA,GAAK1C,EAAM0C,IAAiBA,EAAc,EACtCvF,EAAQyF,EAAO0I,EAAY,YAG/BnO,EAAQyF,EAAO0I,EAAY,OAKvC,OAAOtI,GAGX+R,QAAS,SAASvS,GACd,IAAIiU,EAAc,GAClB,IAAIhX,EAAU,GACd,IAAIuN,EAAOnM,KACX,IAAImB,EAAO,CAAC,CAAE0U,KAAM1J,EAAKnO,QAAQqV,SAASC,iBAC1C,IAAIwC,EAAc3J,EAAKG,aAEvB,IAAIyJ,EAAiB,GACrB,IAAK,IAAIC,EAAiB,EAAGA,EAAiB7J,EAAKnO,QAAQsM,eAAgB0L,IACvED,EAAevX,KAAK,CAChBqX,KAAM,UACNI,UAAW,SACXC,WAAY,OAIpBlW,KAAK+C,cAAcoJ,EAAKlI,YAAakI,EAAKyG,UAAW,SAASrW,EAAMiO,EAAW2L,EAAcC,EAAgBC,GACzG,IAAI5Y,EAAW0O,EAAK6G,wBAEpB,GAAIxI,EAAW,CACX,IAAIxJ,EAAa,CACb6U,KAAMpY,EAAS,CAAElB,KAAMA,IACvB0Z,UAAWG,EAAiB,cAAgB,GAC5CxX,QAASmX,EAAeO,MAAM,EAAGD,IAGrCP,EAAY/U,YAAYC,GAExB4U,EAAYpX,KAAKwC,MAIzB,IAAK,IAAI7B,EAAM,EAAGA,EAAMwC,EAAMzD,OAAQiB,IAClCP,EAAQJ,KAAK,CACTqX,KAAM1J,EAAK+G,mBAAmB,CAAE3W,KAAMoF,EAAMxC,KAC5C8W,UAAW,cACXrX,QAASgX,EAAYU,MAAM,KAInC,IAAIpV,EAAYlB,KAAKuW,iBACrB,GAAIrV,EAAUhD,OACV,GAAI8B,KAAKwW,sBAAwB,WAAY,CACzCrV,EAAO2U,EAAY7U,kBAAkBC,EAAW,KAAMlB,KAAKoB,oBAAqBxC,GAChFA,EAAUkX,EAAYzU,6BAA6BH,EAAW,KAAMlB,KAAKoB,oBAAqBxC,QAG9FA,EAAUkX,EAAYxU,qBAAqBJ,EAAWtC,EAASoB,KAAKoB,oBAAqBxC,GAIjG,MAAO,CACHA,QAASA,EACTuC,KAAMA,IAIdiT,QAAS,WACL,IAAIpW,EAAUgC,KAAKhC,QAEnB,GAAIA,EAAQmV,SAAW,MAAO,CAC1B,IAAIhR,EAAO,6CAEX,IAAIiR,EAAUpV,EAAQmV,OAAOC,QAE7B,GAAIpT,KAAK6P,YAAa,CAClB1N,GAAQ,4EACRA,GAAQnE,EAAQqV,SAASV,MAAQ,cAGrC,GAAIS,GAAWA,IAAY,UACvB,GAAIpT,KAAK6P,YAAa,CAClB1N,GAAQ,8EACRA,IAASnE,EAAQ6U,cAAgB7U,EAAQqV,SAASE,YAAcvV,EAAQqV,SAASG,aAAe,kBAC7F,CACHrR,GAAQ,wIACJA,GAAQ,uDACRA,GAAQ,+BACJA,GAASnE,EAAQ6U,cAAgB7U,EAAQqV,SAASE,YAAcvV,EAAQqV,SAASG,YACrFrR,GAAQ,UACZA,GAAQ,YAIhBA,GAAQ,SAERnC,KAAKmT,OAASnX,EAAEmG,GAAMgD,SAASnF,KAAK8E,SAEpC,IAAIqH,EAAOnM,KAEXA,KAAKmT,OAAOnD,GAAG,QAAUzS,EAAI,uBAAwB,SAAS0S,GAC1DA,EAAEI,iBACFlE,EAAKsK,kBAGTzW,KAAKmT,OAAOnD,GAAG,QAAUzS,EAAI,qBAAsB,SAAS0S,GACxDA,EAAEI,iBACF,IAAI5B,EAAWtC,EAAKnO,QAAQyQ,SAC5B,IAAI6G,EAAS,QACb,IAAIoB,EAAc,IAAI5Y,KACtB,IAAIvB,EAEJ,GAAIkS,EAAU,CACV,IAAIG,EAAiB1S,EAAMuS,SAASI,OAAO6H,EAAajI,GACxDlS,EAAOL,EAAMuS,SAASK,QAAQ4H,EAAaA,EAAY3H,oBAAqBH,QAE5ErS,EAAOma,EAGXvK,EAAK+D,QAAQ,WAAY,CAAEnQ,KAAMoM,EAAKxQ,MAAQqC,EAAQrC,KAAM2Z,OAAQA,EAAQ/Y,KAAMA,QAK9Fka,cAAe,WACX,IAAIzY,EAAUgC,KAAKhC,QAEnBgC,KAAKkQ,QAAQ,WAAY,CAAEnQ,KAAMC,KAAKrE,MAAQqC,EAAQrC,KAAMY,KAAMyB,EAAQzB,KAAMoa,WAAY3Y,EAAQ6U,iBAGxGvM,qBAAsB,SAASH,GAC3B,IAAIzH,EAAcsB,KAAK4W,aAAazQ,GACpC,OAAOzH,EAAcA,EAAYR,OAAS,GAG9CkI,kBAAmB,SAASD,GACxB,IAAI0Q,EAAW7W,KAAK8W,UAAU3Q,GAC9B,OAAO0Q,EAAWA,EAAS3Y,OAAS,GAGxC0E,WAAY,SAASrG,GACjB,IAAIwa,EAAMxa,EAAKya,SACf,IAAI/Y,EAAW+B,KAAKyM,UAEpB,IAAK,IAAI5N,EAAI,EAAGA,EAAIZ,EAASC,OAAQW,IACjC,GAAIZ,EAASY,KAAOkY,EAChB,OAAO,KAGf,OAAO,OAGX5C,SAAU,SAASxS,GACf,IAAIwK,EAAOnM,KACX,IAAI+B,EAAQoK,EAAKlI,YACjB,IAAIjC,EAAMhC,KAAK4S,UACf,IAAI/Q,EAAc,EAClB,IAAIC,EAAW,EACf,IAAIF,EAAcD,EAAMzD,OACxB,IAAIiE,EAAO,GACX,IAAIjB,EAAYlB,KAAKuW,iBACrB,IAAItU,EAAejC,KAAKiC,aACxB,IAAIC,EAAoB,MAExB,GAAIhB,EAAUhD,OAAQ,CAClBgE,EAAoBiK,EAAKqK,sBAAwB,WAEjD,GAAItU,EAAmB,CACnBJ,EAAWqK,EAAKG,aAAa/K,aAAavB,KAAK8W,UAAU5Y,OAAS,GAClE2D,EAAcsK,EAAKG,aAAa7K,uBAEhCI,EAAcsK,EAAK3K,cAI3BW,GAAQ,UACRA,GAAQgK,EAAKG,aAAa5K,YAAYC,EAAOC,EAAaC,EAAaC,EAAUC,EAAOC,EAAKC,EAAcC,GAC3GC,GAAQ,WAERnC,KAAKqC,QAAQ1B,KAAK,SAASsW,OAAO9U,IAGtC0K,QAAS,WACL,IAAI5J,EAAajD,KAAKwB,cACtB,IAAIG,EAAQ3B,KAAK0K,OACjB,IAAI9I,EAAcD,EAAMzD,OAExB8B,KAAKO,OAAS,GAEd,IAAK,IAAIpB,EAAM,EAAGA,EAAM8D,EAAY9D,IAAO,CACvC,IAAIY,EAAOC,KAAKkX,iBAAiB/X,GAEjC,IAAI4C,EAAQJ,EAAM,GAClB,IAAIK,EAAML,EAAOA,EAAMzD,OAAS,GAAM,GAEtC,IAAI+F,EAAYlH,EAAgBiD,KAAKiE,aACrC,IAAI2O,EAAU7V,EAAgBiD,KAAK4S,WAEnC,GAAI3O,IAAc,GAAK2O,GAAW3O,EAAW,CACzClC,EAAQjF,EAAQiF,GAChBzF,EAAQyF,EAAOkC,GAEfjC,EAAMlF,EAAQkF,GACd1F,EAAQ0F,EAAK4Q,GAGjB7S,EAAKoX,sBAAsBpV,EAAO7F,EAAMK,KAAK6a,QAAQpV,EAAK,IAG9DhC,KAAKqX,gBAAgBpU,EAAYrB,IAGrC8G,uBAAwB,WACpB,OAAO1I,KAAKuW,iBAAiBrY,QAAU8B,KAAKwW,sBAAwB,cAGxEa,gBAAiB,SAASpU,EAAYC,GAClC,IAAIE,EAAWpD,KAAKsX,oBACpB,IAAIjU,EAAsBrD,KAAKwE,uBAC/B,IAAIrB,EAAYnD,KAAKqC,QAAQ1B,KAAK,MAElCX,KAAKsM,aAAatJ,yBAAyBC,EAAYC,EAAYC,EAAWC,EAAUC,IAI5Fc,yBAA0B,SAAS7D,EAAOqD,EAAOO,EAAWF,EAAYD,EAAWP,EAAMJ,GACnF,IAAImU,EAAO5T,EAAMO,EAAYF,GAC7B,IAAI2D,EAAarH,EAAMkX,sBAAsB,GAC7C,IAAId,EAAc1W,KAAK0K,OAAO3G,GAC9B,IAAI0C,EAAc3I,KAAK2Z,IAAIf,EAAYgB,cAAehB,EAAYiB,WAAYjB,EAAY5Z,WAC1F,IAAIiF,EAAQ0E,EAAcjD,EAC1B,IAAIxB,EAAMD,EAAQqB,EAElBuE,EAAWiQ,YAAYL,EAAMxV,EAAOC,EAAK,OAG/CoL,UAAW,WACP,OAAOpN,KAAK8T,YAGhBlD,QAAS,WACL,OAAO5Q,KAAK+T,UAGhB8D,eAAgB,WACZ,IAAI5T,EAAYlH,EAAgBiD,KAAKiE,aACrC,IAAI2O,EAAU7V,EAAgBiD,KAAK4S,WACnC,IAAIhC,EAAU5Q,KAAK4Q,UAEnB,GAAI3M,IAAc,GAAK2O,GAAW3O,EAC9B2M,EAAU1U,EAAMK,KAAK6a,QAAQxG,EAAS,GAG1C,OAAOA,GAGX3M,UAAW,WACP,IAAIjG,EAAUgC,KAAKhC,QACnB,OAAOA,EAAQ6U,cAAgB7U,EAAQ0E,aAAe1E,EAAQiG,WAGlE2O,QAAS,WACL,IAAI5U,EAAUgC,KAAKhC,QACnB,OAAOA,EAAQ6U,cAAgB7U,EAAQ2E,WAAa3E,EAAQ4U,SAGhE0E,kBAAmB,WACf,IAAItZ,EAAUgC,KAAKhC,QACnB,OAAQA,EAAQwM,UAAYxM,EAAQsM,eAAkBrN,GAG1D6a,SAAU,WACN,OAAO5b,EAAMK,KAAKwb,QAAQ/X,KAAK4Q,YAGnCoH,aAAc,WACV,OAAO9b,EAAMK,KAAK0b,YAAYjY,KAAKoN,cAGvCR,mBAAoB,WAChB5M,KAAK6T,QAAQ,CAAC7T,KAAKhC,QAAQzB,QAG/B2b,OAAQ,SAASxY,GACbM,KAAKmY,mBAAqB,EAE1BnY,KAAK6M,UAEL7M,KAAK8E,QAAQnE,KAAK,YAAY0N,SAE9B3O,EAAS,IAAIxD,EAAMkc,KAAKC,MAAM3Y,GACzB+N,KAAK,CAAC,CAAE6K,MAAO,QAASC,IAAK,OAAQ,CAAED,MAAO,MAAOC,IAAK,UAC1DC,UAEL,IAAIC,EAAmB,GAEvBzY,KAAK0Y,kBAAkBhZ,EAAQM,KAAKuW,iBAAkBkC,GAEtD,IAAInU,EAAc,GAClB,IAAIC,EAAc,EAElB,IAAK,IAAIlE,EAAa,EAAGA,EAAaoY,EAAiBva,OAAQmC,IAAc,CACzE,IAAIqE,EAAa,CACbrE,WAAYA,EACZkE,YAAa,EACb7E,OAAQ,IAGZ4E,EAAY9F,KAAKkG,GAEjB1E,KAAK2Y,cAAcF,EAAiBpY,GAAaA,EAAYqE,GAE7D,GAAIH,EAAcG,EAAWH,YACzBA,EAAcG,EAAWH,YAIjCvE,KAAK4Y,eAAetU,EAAamU,EAAiBva,OAAQqG,GAE1DvE,KAAK6Y,gBAAgBvU,EAAamU,EAAiBva,QAEnD8B,KAAK8M,aAAa,OAElB9M,KAAKkQ,QAAQ,aAGjB2I,gBAAiB,SAASvU,EAAazC,GACnC,IAAK,IAAIxB,EAAa,EAAGA,EAAawB,EAAaxB,IAAc,CAC7D,IAAIyY,EAAiBxU,EAAYjE,GAAYX,OAC7C,IAAK,IAAIqZ,KAAYD,EAAgB,CACjC,IAAItT,EAAcsT,EAAeC,GACjC,GAAIC,MAAMC,QAAQzT,GACd,IAAK,IAAI0T,EAAa,EAAGA,EAAa1T,EAAYtH,OAAQgb,IACtDlZ,KAAKmZ,eAAe3T,EAAY0T,SAGpClZ,KAAKmZ,eAAe3T,MAMpCoT,eAAgB,SAAStU,EAAazC,EAAa0C,GAC/C,IAAIgB,EAAcvF,KAAKhC,QAAQuH,YAC/B,IAAI6T,EAAoBpZ,KAAKqZ,sBAC7B,IAAIvD,EAAc9V,KAAKsM,aACvB,IAAIgN,EAAqBxD,EAAY1R,uBAAuBvC,GAE5DA,EAAc7B,KAAKwE,uBAAyB8U,EAAqB,EAEjE,IAAK,IAAIjZ,EAAa,EAAGA,EAAawB,EAAaxB,IAAc,CAC7D,IAAIkZ,EAAYzD,EAAYzR,qBAAqBC,EAAajE,EAAYkE,GAE1EgV,EAAYA,EAAYA,EAAY,EAEpC,IAAIC,GAAcjU,EAAc,GAAKgU,EAAaH,EAClD,IAAIK,EAAWzd,EAAEgE,KAAK6J,MAAMlJ,KAAK,MAAMN,IACvC,IAAIqZ,EAAM1d,EAAEgE,KAAKqC,QAAQ1B,KAAK,MAAMN,IAEpCoZ,EAASnU,OAAOkU,GAChBE,EAAIpU,OAAOkU,GAGfxZ,KAAKqU,mBACLrU,KAAKsU,gBACLtU,KAAK2Z,iBAGTN,oBAAqB,WACjB,IAAID,EAAoBpZ,KAAKhC,QAAQuH,YAAc,GACnD,IAAIqU,EAAW5Z,KAAK6P,YACpB,IAAIgK,EACJ,IAAIC,EAEJ,GAAIF,EAAU,CACVC,EAAY,GACZC,EAAY,OACT,CACHD,EAAY,GACZC,EAAY,GAGhB,GAAIV,EAAoBU,EACpBV,EAAoBU,OACjB,GAAIV,EAAoBS,EAC3BT,EAAoBS,EAGxB,OAAOT,GAGXD,eAAgB,SAAS3T,GACrB,IAAID,EAAcvF,KAAKhC,QAAQuH,YAC/B,IAAIwU,EAAc,EAClB,IAAI5Q,EAAO3D,EAAYI,UAAUiB,UAAUrB,EAAYzD,MAAOyD,EAAYxD,IAAK,OAC/E,IAAI/C,EAAOe,KAAKkH,oBAAoBiC,EAAKlK,MACzC,IAAIoI,EAAQ8B,EAAKjK,MAAQiK,EAAKlK,KAE9B,GAAIoI,EAAQ,EACRA,EAAQ,EAGZ,GAAIA,EAAQrH,KAAKhC,QAAQ8U,cAAe,CACpC,IAAIkH,EAAkBxU,EAAYI,UAAU+B,WAC5C,IAAIsS,EAAWD,EAAgB/O,OAAO+O,EAAgB/O,OAAO/M,OAAS,GACtE,IAAIgc,EAAcD,EAASlO,WAAakO,EAASjO,YAEjD3E,EAAQrH,KAAKhC,QAAQ8U,cAErB,GAAIoH,EAAcjb,EAAOoI,EACrBA,EAAQ6S,EAAc/Q,EAAKlK,KAInCuG,EAAYV,QAAQM,IAAI,CACpBC,IAAKG,EAAYI,UAAU7D,MAAM8D,UAAYL,EAAY/B,UAAY8B,EAAcwU,GAAe,KAClG9a,KAAMA,EACNoI,MAAOA,KAIfsS,cAAe,WACX,IAAK,IAAItZ,EAAa,EAAGA,EAAaL,KAAKO,OAAOrC,OAAQmC,IACtDL,KAAKO,OAAOF,GAAY8Z,WAIhCzB,kBAAmB,SAAShZ,EAAQwB,EAAWuH,EAAQ2R,GACnD,IAAIC,EAAWnZ,EAAU,GAEzB,GAAImZ,EAAU,CACV,IAAIta,EAAOsa,EAAS3L,WAAW3O,OAE/BA,EAAOA,EAAKwR,OAAO,SAAS+I,GACxB,IAAIC,EAAkBre,EAAMse,OAAOH,EAASI,qBAAtBve,CAA4Coe,GAElE,OAAOC,IAAoB,MAAQA,IAAoBne,GAAame,IAAoBH,IAG5F,IAAK,IAAIM,EAAU,EAAGA,EAAU3a,EAAK7B,OAAQwc,IAAW,CACpD,IAAIC,EAAQ3a,KAAK4a,eAAeP,EAAUta,EAAK2a,IAE/C,IAAIG,EAA2B,IAAI3e,EAAMkc,KAAKC,MAAM3Y,GAAQ6R,OAAO,CAAE+G,MAAO+B,EAAS/B,MAAOwC,SAAUte,EAAcue,cAAcJ,KAAUnC,UAE5I,GAAItX,EAAUhD,OAAS,EACnB8B,KAAK0Y,kBAAkBmC,EAA0B3Z,EAAUoV,MAAM,GAAI7N,EAAQkS,QAE7ElS,EAAOjK,KAAKqc,SAIpBpS,EAAOjK,KAAKkB,IAIpB4O,cAAe,SAAS3O,GACpB,IAAIsE,EAAYtE,EAAMoC,MACtB,IAAI6Q,EAAUjT,EAAMqC,IACpB,IAAIiT,EAAanY,EAAQkD,KAAK8T,YAC9B,IAAIoB,EAAWhZ,EAAMK,KAAK6a,QAAQta,EAAQkD,KAAK6X,kBAAmB,GAElE,GAAI5T,EAAYiR,GAAYD,GAAcrC,EACtC,OAAO,KAEX,OAAO,OAGXoI,cAAe,SAASrb,GACpB,IAAIsE,EAAYtE,EAAM8F,YAAcvJ,EAAMK,KAAK4S,UAAUxP,EAAMoC,OAC/D,IAAI6Q,EAAUjT,EAAM+F,UAAYxJ,EAAMK,KAAK4S,UAAUxP,EAAMqC,KAE3D,IAAIgT,EAAahV,KAAKmV,YAEtB,GAAIlR,IAAc2O,EACdA,EAAUA,EAAU,EAGxB,IAAK,IAAIqI,EAAY,EAAGA,EAAYjG,EAAW9W,OAAQ+c,IACnD,GAAIhX,EAAY+Q,EAAWiG,GAAWjZ,KAAOgT,EAAWiG,GAAWlZ,MAAQ6Q,EACvE,OAAO,KAGf,OAAO,OAGXsI,aAAc,SAASvb,GACnB,IAAIoC,EAAQpC,EAAMoC,MAClB,IAAIC,EAAMrC,EAAMqC,IAChB,IAAImZ,EAAiBxb,EAAMyb,MAAM,SACjC,IAAIC,EAAe1b,EAAMyb,MAAM,OAC/B,IAAInX,EAAYlH,EAAgBiD,KAAKiE,aACrC,IAAI2O,EAAU7V,EAAgBiD,KAAK4S,WACnC,IAAI0I,EAAoB,KACxB,IAAIC,EAAkB,KACtB,IAAIvW,EACJ,IAAIC,EAAO,MACX,IAAIC,EAAO,MAEX,GAAIvF,EAAMqG,SAAU,CAChBjE,EAAQjF,EAAQiF,GAChBoZ,EAAiB,EAEjBnZ,EAAMlF,EAAQkF,GACdqZ,EAAere,EACfue,EAAkBrf,EAAMK,KAAK6a,QAAQpV,EAAK,GAG9C,GAAI4Q,IAAY,EACZA,EAAU5V,EAGd,GAAI4V,GAAW3O,EAAW,CACtB,GAAIkX,EAAiBlX,GAAakX,GAAkBvI,EAAS,CACzD0I,EAAoBxe,EAAQiF,GAC5BzF,EAAQgf,EAAmBrX,GAC3BiB,EAAO,KAGX,GAAImW,EAAezI,GAAWyI,GAAgBpX,EAAW,CACrDsX,EAAkBze,EAAQkF,GAC1B1F,EAAQif,EAAiB3I,GACzB3N,EAAO,UAER,CACH,GAAIhB,EAAYkX,EAAgB,CAC5BG,EAAoBxe,EAAQiF,GAC5BzF,EAAQgf,EAAmBrX,GAC3BiB,EAAO,UACJ,GAAI0N,GAAWuI,EAAgB,CAClCG,EAAoBxe,EAAQiF,GAC5BuZ,EAAoBpf,EAAMK,KAAK6a,QAAQkE,EAAmB,GAC1Dhf,EAAQgf,EAAmBrX,GAC3BiB,EAAO,KAGX,GAAI0N,EAAUyI,EAAc,CACxBE,EAAkBze,EAAQkF,GAC1B1F,EAAQif,EAAiB3I,GACzB3N,EAAO,UACJ,GAAIhB,EAAYoX,EAAc,CACjCE,EAAkBze,EAAQkF,GAC1BuZ,EAAkBrf,EAAMK,KAAK6a,QAAQmE,GAAiB,GACtDjf,EAAQif,EAAiB3I,GACzB3N,EAAO,MAIfD,EAAarF,EAAM6b,MAAM,CACrBzZ,MAAOuZ,EAAoBA,EAAoBvZ,EAC/CC,IAAKuZ,EAAkBA,EAAkBvZ,EACzCyD,WAAY6V,EAAoBpf,EAAMK,KAAK4S,UAAUmM,GAAqB3b,EAAM8F,WAChFC,SAAU6V,EAAkBrf,EAAMK,KAAK4S,UAAUoM,GAAmB5b,EAAM+F,SAC1EM,SAAU,QAGd,MAAO,CACHhB,WAAYA,EACZC,KAAMA,EACNC,KAAMA,IAIdyT,cAAe,SAASjZ,EAAQW,EAAYqE,GACxC,IAAI/E,EACJ,IAAIR,EACJ,IAAIjB,EAEJ,IAAKiB,EAAM,EAAGjB,EAASwB,EAAOxB,OAAQiB,EAAMjB,EAAQiB,IAAO,CACvDQ,EAAQD,EAAOP,GAEf,GAAIa,KAAKsO,cAAc3O,GAAQ,CAC3B,IAAI8b,EAAkB9b,EAAMqG,UAAYrG,EAAM+b,YAAc1e,EAC5D,IAAI6H,EAAY7E,KAAKqC,QAErB,GAAIoZ,GAAmBzb,KAAKgb,cAAcrb,GAAQ,CAC9C,IAAIgF,EAAgB3E,KAAKkb,aAAavb,GACtC,IAAIW,EAAQN,KAAKO,OAAOF,GAExB,IAAKC,EAAMqb,kBACPrb,EAAMqb,kBAAoB,GAG9B,GAAI3b,KAAKgb,cAAcrW,EAAcK,YAAa,CAC9C,IAAIwB,EAASlG,EAAM0U,WAAWrQ,EAAcK,WAAY,OACxD,IAAIJ,EAAQ4B,EAAO,GACnB,IAAImE,EAAa/F,EAAM7C,MAAM+I,MAC7B,IAAIF,EAAWhG,EAAM5C,IAAI8I,MAEzB9K,KAAKsM,aAAa7H,aAAaC,EAAY/E,EAAOgF,EAAerE,EAAOsE,EAAOC,EAAW8F,EAAYC,QAO1H7E,mBAAoB,SAASzF,EAAOsE,EAAOE,EAASkB,GAChD,IAAItG,EAASY,EAAMqb,kBAEnBjc,EAAOlB,KAAK,CACRsG,QAASA,EACTkB,SAAUA,EACVL,IAAKb,EAAQsL,KAAKlU,EAAMkU,KAAK,QAC7BrO,MAAO6C,EAAM7C,MACbC,IAAK4C,EAAM5C,OAInB+C,oBAAqB,SAASC,EAAYrF,EAAOsF,EAAMC,GACnD,IAAIzH,EAAWuC,KAAKiT,cACpB,IAAIrD,EAAW5P,KAAKhC,QAAQ4R,SAC5B,IAAIgK,EAAW5Z,KAAK6P,YACpB,IAAI+L,EAAahM,GAAYA,EAASiM,UAAY,QAAUjC,EAC5D,IAAIkC,EAAYlM,GAAYA,EAASmM,SAAW,MAChD,IAAIZ,EAAiBxb,EAAMyb,MAAM,SACjC,IAAIC,EAAe1b,EAAMyb,MAAM,OAC/B,IAAIY,EAAiBrc,EAAMoC,MAC3B,IAAIka,EAAetc,EAAMqC,IAEzB,IAAId,EAAYlB,KAAKkc,eAAevc,GAEpC,GAAIA,EAAM8F,YAAc0V,IAAmBjf,EAAMK,KAAKQ,gBAAgB4C,EAAMoC,OAAQ,CAChFia,EAAiB,IAAIle,KAAKqd,GAC1Ba,EAAiB9f,EAAMuS,SAAS0N,MAAMH,EAAgB,WAG1D,GAAIrc,EAAM+F,UAAY2V,IAAiBnf,EAAMK,KAAKQ,gBAAgB4C,EAAMqC,KAAM,CAC1Eia,EAAe,IAAIne,KAAKud,GACxBY,EAAe/f,EAAMuS,SAAS0N,MAAMF,EAAc,WAGtD,IAAI7D,EAAOvb,EAAO,GAAI,CAClBuf,GAAIlgB,EAAMkgB,GACVN,UAAWA,EACXF,WAAYA,EACZ3W,KAAMA,EACNC,KAAMA,EACNmX,UAAWrc,KAAK0K,OAAOxM,QAAU,EACjCgD,UAAWA,EACXoI,aAAc,MACd+J,SAAUrT,KAAKhC,QAAQqV,SACvBiJ,UAAWtc,KAAKuc,sBAAsB5c,EAAM6M,MAAOwP,EAAgBC,EAActc,EAAMqG,WACxFrG,EAAO,CACNoC,MAAOia,EACPha,IAAKia,IAGT,IAAInX,EAAU9I,EAAEyB,EAAS2a,IAEzBpY,KAAKwc,QAAQ,UAAW,WACpB,MAAO,CACHxd,SAAU8F,EACVsT,KAAM,CAAE,CAAEqE,SAAUrE,OAI5B,OAAOtT,GAGXmB,aAAc,SAAST,EAAaI,EAAWlB,GAC3C,IAAIiG,EAAa/E,EAAU7D,MAAM+I,MACjC,IAAIF,EAAWhF,EAAU5D,IAAI8I,MAE7B,IAAI3B,EAAO3D,EAAYI,UAAUiB,UAAUrB,EAAYzD,MAAOyD,EAAYxD,IAAK,OAC/E,IAAIxC,EAAY2J,EAAKjK,MAAQc,KAAKhC,QAAQ8U,cAE1C,IAAIpT,EAASX,EAAgB6G,EAAUlG,SAAUyJ,EAAKlK,KAAMO,GAE5DoG,EAAU8W,SAAS,CACfzB,UAAWtQ,EACX5I,MAAO4I,EACP3I,IAAK4I,EACLrL,SAAU4J,EAAKlK,KACfO,UAAWA,EACXsF,QAASU,EAAYV,QACrBa,IAAKH,EAAYG,MAGrBjG,EAAOlB,KAAK,CACRuD,MAAO4I,EACP3I,IAAK4I,EACLjF,IAAKH,EAAYG,MAGrB,IAAIxE,EAAO3E,EAAcmgB,WAAWjd,GAEpC,GAAIgF,EAAWH,YAAcpD,EAAKjD,OAC9BwG,EAAWH,YAAcpD,EAAKjD,OAGlC,IAAK,IAAIiB,EAAM,EAAGjB,EAASiD,EAAKjD,OAAQiB,EAAMjB,EAAQiB,IAAO,CACzD,IAAIyd,EAAYzb,EAAKhC,GAAKO,OAC1B,IAAK,IAAImd,EAAI,EAAGC,EAAcF,EAAU1e,OAAQ2e,EAAIC,EAAaD,IAC7DnY,EAAWhF,OAAOkd,EAAUC,GAAGlX,KAAKlC,SAAWtE,IAK3DqC,YAAa,WACT,IAAIN,EAAYlB,KAAKuW,iBACrB,IAAIT,EAAc9V,KAAKsM,aAEvB,GAAIpL,EAAUhD,OACV,GAAI8B,KAAKwW,sBAAwB,WAC7B,OAAOV,EAAY5P,uBAAuBhF,EAAUhD,OAAS,QAE7D,OAAO4X,EAAYzP,yBAAyBnF,EAAUhD,OAAS,EAAG8B,KAAK4W,aAAa1Y,OAAS,GAGrG,OAAO,GAGX6e,yBAA0B,SAASpd,GAC/B,IAAIgF,EAAgB3E,KAAKkb,aAAavb,EAAM6b,SAC5C,OAAO7W,EAAcK,YAGzBgY,qBAAsB,SAASrd,GAC3B,GAAIA,EAAMqG,SACN,MAAO,CAAEA,SAAU,OAGvB,MAAO,IAGXiX,sBAAuB,SAAStd,GAC5B,GAAIA,EAAMqG,SACNrG,EAAMud,IAAI,WAAY,QAI9BC,gBAAiB,SAASxd,EAAOU,EAAY+c,GACzC,IAAI9c,EAAQN,KAAKO,OAAOF,GAExB,IAAIgd,EAAc1d,EAAM6b,MAAM,CAAEzZ,MAAOpC,EAAMoC,MAAOC,IAAKrC,EAAMqC,MAE/D,IAAIsb,EAAeD,EAAY3B,WAC/B2B,EAAYtb,MAAQ,IAAIjE,KAAKuf,EAAYtb,MAAM+E,UAAYsW,GAC3DC,EAAYrb,IAAM,IAAIlE,MAAMuf,EAAYtb,MAAQub,GAEhDtd,KAAKud,gBAAgB5d,EAAMgG,KAE3B,GAAI3F,KAAKsO,cAAc+O,GACnB,GAAIA,EAAYrX,UAAYqX,EAAY3B,YAAc1e,GAAcgD,KAAKgb,cAAcqC,GAAc,CACjG,IAAI1Y,EAAgB3E,KAAKkb,aAAamC,GACtC,IAAI7W,EAASlG,EAAM0U,WAAWrQ,EAAcK,WAAY,OAExD,IAAK,IAAIwY,EAAa,EAAGA,EAAahX,EAAOtI,OAAQsf,IACjDxd,KAAKsM,aAAarD,gBAAgBzC,EAAOgX,GAAa7Y,KAMvE4E,gBAAiB,SAASL,GACrBA,EAAK/D,SAASnF,KAAKqC,SAEnBrC,KAAKyd,UAAYzd,KAAKyd,UAAU5I,IAAI3L,IAGxCwU,kBAAmB,SAAS/d,EAAOU,EAAY4D,EAAW2O,GACtD,IAAItS,EAAQN,KAAKO,OAAOF,GACxB,IAAImG,EAASlG,EAAMkG,OAAOvC,EAAW2O,EAAS,MAAO,OAErD5S,KAAK2d,oBAEL,IAAK,IAAIH,EAAa,EAAGA,EAAahX,EAAOtI,OAAQsf,IAAc,CAC/D,IAAI5Y,EAAQ4B,EAAOgX,GACnB,IAAIzb,EAAQ6C,EAAM0D,YAElB,IAAIsV,EAAYhZ,EAAMiC,UAAU5C,EAAW2O,EAAS,OACpDgL,EAAUvY,IAAMtD,EAAM8D,UAEtB,IAAIwB,EAAQuW,EAAU1e,MAAQ0e,EAAU3e,KAExC,GAAIoI,EAAQ,EACR,IAAK,IAAIxI,EAAI,EAAGA,EAAI+F,EAAMlF,SAASxB,OAAQW,IACvC,GAAI+F,EAAMlF,SAASb,GAAG8G,MAAQhG,EAAMgG,IAAK,CACrC0B,EAAQzC,EAAMlF,SAASb,GAAGW,UAAYoe,EAAU3e,KAChD,MAKZ,IAAIqG,EAASV,EAAM2D,UAAU1C,UAAY9D,EAAMsH,aAAeuU,EAAUvY,IAExE,IAAIpG,EAAOe,KAAKkH,oBAAoB0W,EAAU3e,MAE9C,IAAIiK,EAAO1M,EAAc4P,GAAGyR,kBAAkBxR,KAAKrM,KAC/Cf,EACA2e,EAAUvY,IACVgC,EACA/B,GAGJtF,KAAK8d,YAAc9d,KAAK8d,YAAYjJ,IAAI3L,GAG5C,IAAI6U,EAAS,IACb,IAAIlZ,EAAY7E,KAAKqC,QAErBrC,KAAK8d,YAAY3Y,SAASN,GAE1B7E,KAAK8d,YAAYnd,KAAK,gCAAgCkV,KAAK,IAE3D7V,KAAK8d,YAAYhW,QAAQb,SAAS,WAAWtG,KAAK,gBAAgBkV,KAAK3Z,EAAM8hB,SAAS9hB,EAAMuS,SAASwP,YAAYha,GAAY8Z,IAE7H/d,KAAK8d,YAAYld,OAAOqG,SAAS,UAAUtG,KAAK,mBAAmBkV,KAAK3Z,EAAM8hB,SAAS9hB,EAAMuS,SAASwP,YAAYrL,GAAUmL,KAGhIG,mBAAoB,SAAS3G,GACzB,IAAI1I,EAAS0I,EAAK1I,SAClB,OAAO7O,KAAKuQ,gBAAgB1B,EAAO5P,KAAM4P,EAAOxJ,MAGpD2D,iBAAkB,SAAShB,EAAWxB,EAAQgC,EAAUP,EAASkW,GAE7D,IAAI7V,EAAY9B,EAAO,GAAGzE,MAC1B,IAAIwG,EAAU/B,EAAOA,EAAOtI,OAAS,GAAG8D,IACxC,GAAIwG,IAAa2V,EACb,GAAI7V,EAAUwC,QAAUvC,EAAQuC,OAC5BxC,EAAU8V,kBAAoB7V,EAAQ6V,gBACtCpW,EAAUqW,SAAWpW,GAKjCV,aAAc,SAASS,EAAWwD,GAC9B,IAAInD,EAASmD,EAAW,gBAAkB,gBAE1C,IAAI/D,EAAOzH,KAAKqI,GAAQL,EAAUjG,MAAOiG,EAAU3H,WAAY,OAE/D,GAAIoH,EACAO,EAAU3H,YAAcmL,GAAY,EAAI,EAG5CxL,KAAKsM,aAAa/E,aAAaS,EAAWwD,EAAU/D,GACpD,OAAOA,GAGX6W,cAAe,SAAS/hB,EAAM8D,EAAYqH,GACtC,IAAIpH,EAAQN,KAAKO,OAAOF,GACxB,IAAIoH,EAAOnH,EAAMkG,OAAOjK,EAAMA,EAAMmL,EAAO,OAAO,GAAG3F,MAErD,GAAI1B,GAAc,EACd,OAGJ,OAAOL,KAAKsM,aAAa9E,eAAeC,EAAMnH,EAAOoH,IAGzD6W,cAAe,SAAShiB,EAAM8D,EAAYqH,GACtC,IAAIpH,EAAQN,KAAKO,OAAOF,GACxB,IAAIoH,EAAOnH,EAAMkG,OAAOjK,EAAMA,EAAMmL,EAAO,OAAO,GAAG3F,MAErD,GAAI1B,GAAcL,KAAKO,OAAOrC,OAAS,EACnC,OAGJ,OAAO8B,KAAKsM,aAAazE,eAAeJ,EAAMnH,EAAOoH,IAGzDK,eAAgB,SAASC,EAAWxB,EAAQgC,EAAUP,GAClD,IAAI6N,EAAc9V,KAAKsM,aACvB,IAAIjE,EAASyN,EAAY5N,gBAAgBD,EAASO,GAClD,IAAIF,EAAY9B,EAAO,GAAGzE,MAC1B,IAAIwG,EAAU/B,EAAOA,EAAOtI,OAAS,GAAG8D,IACxC,IAAI1B,EAAQN,KAAKO,OAAOyH,EAAU3H,YAClC,IAAIoH,EAAOqO,EAAY3N,4BAA4BH,EAAWxB,EAAQyB,EAASO,GAE/E,GAAIf,EACAa,EAAYC,EAAUd,EAG1Ba,EAAYhI,EAAM+H,GAAQC,GAC1BC,EAAUjI,EAAM+H,GAAQE,GAExB,IAAKC,GAAYxI,KAAKwE,0BAA4B8D,IAAcC,GAC5DD,EAAYC,EAAUuN,EAAY/N,eAAeC,EAAWC,EAASR,GAGzE,MAAO,CACHa,UAAWA,EACXC,QAASA,IAIjBH,iBAAkB,SAASJ,EAAWxB,EAAQgC,EAAUP,GACpD,IAAII,EAASJ,EAAU,SAAW,WAClC,IAAIK,EAAY9B,EAAO,GAAGzE,MAC1B,IAAIwG,EAAU/B,EAAOA,EAAOtI,OAAS,GAAG8D,IACxC,IAAI1B,EAAQN,KAAKO,OAAOyH,EAAU3H,YAClC,IAAIoI,EAAS,GAEb,IAAKD,EACDC,EAASzI,KAAKsM,aAAalE,iBAAiBJ,EAAW1H,EAAO+H,EAAQC,EAAWC,EAASC,EAAUP,OACjG,CACHQ,EAAOH,UAAYhI,EAAM+H,GAAQC,GACjCG,EAAOF,QAAUjI,EAAM+H,GAAQE,GAE/B,IAAKC,GAAYxI,KAAK0I,4BAA8BJ,IAAcC,GAC9DE,EAAOH,UAAYG,EAAOF,QAAUvI,KAAKuH,aAAaS,EAAWC,GAIzE,OAAOQ,GAGXM,kBAAmB,SAASf,EAAWC,GACnC,IAAI1L,EAAO0L,EAAUjI,KAAKgY,eAAiBhY,KAAK8X,WAChD,IAAI/V,EAAQiG,EAAUjG,MACtB,IAAIC,EAAMgG,EAAUhG,IACpB,IAAIwc,EAAUC,EAEdD,EAAW,IAAI1gB,KAAKvB,GACpBkiB,EAAS,IAAI3gB,KAAKvB,GAElB,GAAIyD,KAAK0e,WAAWF,EAAUC,GAC1B,OAAO,MAEXzW,EAAUjG,MAAQyc,EAClBxW,EAAUhG,IAAMyc,EAEhB,GAAIze,KAAK0I,yBACNV,EAAU3H,WAAa4H,EAAUjI,KAAKO,OAAOrC,OAAS,EAAI,EAG7D,IAAIwd,EAAW1Z,EAAMD,EAErB,GAAIkG,EAAS,CACTjG,EAAMjF,EAAgBiD,KAAK4S,WAC3B5Q,EAAMA,IAAQ,EAAIhF,EAAagF,EAE/B1F,EAAQ0L,EAAUjG,MAAOC,EAAM0Z,GAC/Bpf,EAAQ0L,EAAUhG,IAAKA,OACpB,CACHD,EAAQhF,EAAgBiD,KAAKiE,aAE7B3H,EAAQ0L,EAAUjG,MAAOA,GACzBzF,EAAQ0L,EAAUhG,IAAKD,EAAQ2Z,GAGnC1T,EAAUtI,OAAS,GAEnB,OAAO,MAGXif,KAAM,SAAS3W,EAAW4W,EAAK9V,GAC3B,IAAI+V,EAAU,MACd,IAAIve,EAAQN,KAAKO,OAAOyH,EAAU3H,YAClC,IAAIye,EAAO5iB,EAAM4iB,KACjB,IAAIhJ,EAAc9V,KAAKsM,aACvB,IAAI9F,EAASlG,EAAMkG,OAAOwB,EAAUjG,MAAOiG,EAAUhG,IAAK,MAAO,OACjE,IAAIsG,EAAWC,EAASN,EAASY,EAEjC,GAAI+V,IAAQE,EAAKC,MAAQH,IAAQE,EAAKE,GAAI,CACtCH,EAAU,KACV5W,EAAU2W,IAAQE,EAAKE,GAEvBlJ,EAAY9M,iBAAiBhB,EAAWxB,EAAQsC,EAAOb,GAEvDY,EAAQ7I,KAAK+H,eAAeC,EAAWxB,EAAQsC,EAAOb,GAEtD,GAAI6N,EAAYnN,0BAA0BE,EAAOC,EAAOd,EAAWC,GAC/D,OAAO4W,OAER,GAAID,IAAQE,EAAKG,MAAQL,IAAQE,EAAKI,MAAO,CAChDL,EAAU,KACV5W,EAAU2W,IAAQE,EAAKG,KAEvBjf,KAAKgJ,iBAAiBhB,EAAWxB,EAAQsC,EAAOb,EAAS,OAEzDY,EAAQ7I,KAAKoI,iBAAiBJ,EAAWxB,EAAQsC,EAAOb,GAExD,GAAI6N,EAAYlN,4BAA4BC,EAAOC,EAAOd,EAAWC,GAChE,OAAO4W,EAIjB,GAAIA,EAAS,CACTvW,EAAYO,EAAMP,UAClBC,EAAUM,EAAMN,QAEhB,GAAIO,EAAO,CACP,IAAIuV,EAAWrW,EAAUqW,SAEzB,GAAIA,GAAY/V,EACZN,EAAUjG,MAAQuG,EAAU8E,iBACzB,IAAKiR,GAAY9V,EACpBP,EAAUhG,IAAMuG,EAAQqI,eAEzB,GAAItI,GAAaC,EAAS,CAC7BP,EAAUjG,MAAQuG,EAAU8E,YAC5BpF,EAAUhG,IAAMuG,EAAQqI,UAG5B5I,EAAUtI,OAAS,GAGtB,OAAOmf,GAGXhD,QAAS,WACL,IAAI1P,EAAOnM,KAEX,GAAImM,EAAKrH,QACLqH,EAAKrH,QAAQqa,IAAI5hB,GAGrB,GAAI4O,EAAKgH,OACLhH,EAAKgH,OAAO9E,SAGhB,GAAIlC,EAAKsD,wBACL2P,cAAcjT,EAAKsD,yBAGvBjT,EAAc4P,GAAGyP,QAAQxP,KAAKrM,MAE9B,GAAIA,KAAK6P,aAAe1D,EAAKnO,QAAQ4R,SAAU,CAC3C,GAAIzD,EAAKnO,QAAQ4R,SAASU,SAAW,MACjCnE,EAAK+E,eAAe2K,UAGxB,GAAI1P,EAAKnO,QAAQ4R,SAASiB,SAAW,MACjC1E,EAAKwF,gBAAgBkK,YAKjCrZ,gBAAiB,SAASiF,GACtB,IAAIvG,EAAYlB,KAAKuW,iBACrB,IAAI9N,EAAS,GACb4W,EAAerf,KAAKhC,QAAQsC,MAE5B,GAAIY,EAAUhD,QAAUmhB,EAAarQ,cAAgB,cAAgBqQ,EAAa9iB,KAAM,CACpF,IAAI+iB,EAAgB7X,EAAKpH,WACrBkf,EAASvf,KAAK4W,aACd4I,EAAaD,EAAOA,EAAOrhB,OAAS,GACpCmc,EAAWnZ,EAAUA,EAAUhD,OAAS,GACxCuhB,EAAmBD,EAAWF,GAC9BI,EAAgBC,EAAkB9C,EAAGhe,EAEzCmB,KAAK4f,kBAAkBH,EAAkBpF,EAAU5R,GAEnD,IAAKoU,EAAI0C,EAAOrhB,OAAS,EAAG2e,GAAK,EAAGA,IAAK,CACrC2C,EAAaD,EAAO1C,GACpBxC,EAAWnZ,EAAU2b,EAAI,GACzB6C,EAAiB,EAEjB,IAAK7gB,EAAI,EAAGA,EAAI2gB,EAAWthB,OAAQW,IAAK,CACpC4gB,EAAmBD,EAAW3gB,GAC9B8gB,EAAmBF,EAAiB7gB,QAAQV,OAE5C,GAAIyhB,EAAmBL,EAAgBI,EAAgB,CACnD1f,KAAK4f,kBAAkBH,EAAkBpF,EAAU5R,GAEnD5J,EAAI2gB,EAAWthB,YAEfwhB,GAAkBC,GAK9B,OAAOlX,OAEP,OAAOjM,EAAc4P,GAAG5J,gBAAgB6J,KAAKrM,KAAMyH,OAgHnE,OA3GI5K,EAAO,KAAMR,EAAI,CACb4P,aAAcA,EACd4T,iBAAkB5T,EAAapP,OAAO,CAClCmB,QAAS,CACLrC,KAAM,mBACN6Q,MAAO,gBACPgG,mBAAoB,gBACpBC,wBAAyB,gBACzBC,yBAA0B,sBAC1BlI,UAAW,KAEf7O,KAAM,eACNiR,mBAAoB,WAChB,IAAIkT,EAAe9f,KAAKhC,QAAQzB,KAC5BwF,EAAQ7F,EAAMK,KAAKwjB,UAAUD,EAAc9f,KAAKggB,eAAeC,UAAW,GAC1E9gB,EAAKjB,EACLyD,EAAQ,GAEZ,IAAKxC,EAAM,EAAGjB,EAAS,EAAGiB,EAAMjB,EAAQiB,IAAO,CAC3CwC,EAAMnD,KAAKuD,GACXA,EAAQ7F,EAAMK,KAAKwb,QAAQhW,GAE/B/B,KAAK6T,QAAQlS,MAGrBue,qBAAsBjU,EAAapP,OAAO,CACtCmB,QAAS,CACLrC,KAAM,uBACN6Q,MAAO,qBACPgG,mBAAoB,gBACpBC,wBAAyB,gBACzBC,yBAA0B,sBAC1BlI,UAAW,KAEf7O,KAAM,mBACNmc,SAAU,WACN,IAAIqI,EAAYjkB,EAAMK,KAAKwjB,UAAU7jB,EAAMK,KAAKwb,QAAQ/X,KAAK4Q,WAAY5Q,KAAKggB,eAAeC,SAAU,GAEvG,OAAO/jB,EAAMK,KAAK6a,QAAQ+I,EAAWngB,KAAKyM,UAAU,KAExDuL,aAAc,WACV,IAAImI,EAAYjkB,EAAMK,KAAKwjB,UAAU/f,KAAKoN,YAAapN,KAAKggB,eAAeC,UAAW,GACtF,IAAIhiB,EAAW+B,KAAKyM,UAEpB,OAAOvQ,EAAMK,KAAK6a,QAAQ+I,EAAWliB,EAASA,EAASC,OAAS,GAAK,IAEzE0O,mBAAoB,WAChB,IAAI5O,EAAUgC,KAAKhC,QACf8hB,EAAe9hB,EAAQzB,KACvBwjB,EAAY7jB,EAAMK,KAAKwjB,UACvBI,EAAYJ,EAAUD,EAAc9f,KAAKggB,eAAeC,UAAW,GACnEle,EAAQge,EAAUI,EAAWniB,EAAQI,cAAe,GACpD4D,EAAM+d,EAAUhe,EAAO/D,EAAQK,YAAa,GAC5CsD,EAAQ,GACR1D,EAAYD,EAAQC,UAAYD,EAAQC,SAASC,OAAUF,EAAQC,SAASmiB,IAAI,SAASrJ,GACrF,OAAOgJ,EAAUI,EAAWpJ,EAAK,GAAGjQ,YACnC,KAET,GAAI7I,EAAU,CACV8D,EAAQoe,EACRne,EAAM+d,EAAUhe,EAAO/B,KAAKggB,eAAeC,SAAW,EAAG,GAG7D,MAAOle,GAASC,EAAK,CACjB,GAAI/D,GAAYA,EAASoiB,QAAQte,EAAM+E,YAAc,EACjDnF,EAAMnD,KAAKuD,QACR,IAAK9D,EACR0D,EAAMnD,KAAKuD,GAGfA,EAAQ7F,EAAMK,KAAKwb,QAAQhW,GAG/B/B,KAAK6T,QAAQlS,MAGrB2e,kBAAmBrU,EAAapP,OAAO,CACnCmB,QAAS,CACLrC,KAAM,oBACN6Q,MAAO,iBACPgG,mBAAoB,gBACpBC,wBAAyB,gBACzB/P,aAAc,IAAI5E,KAAK,KAAM,EAAG,EAAG,EAAG,EAAG,GACzC6E,WAAY,IAAI7E,KAAK,KAAM,EAAG,EAAG,GAAI,GAAI,IACzCqV,OAAQ,MACR3I,UAAW,KACXF,eAAgB,GAEpB3O,KAAM,gBACNiR,mBAAoB,WAChB,IAAIkT,EAAe9f,KAAKhC,QAAQzB,KAC5BwF,EAAQ7F,EAAMK,KAAKgkB,gBAAgBT,GACnC9d,EAAM9F,EAAMK,KAAKikB,eAAeV,GAChC3gB,EAAKjB,EACLyD,EAAQ,GAEZ,IAAKxC,EAAM,EAAGjB,EAAS8D,EAAIlF,UAAWqC,EAAMjB,EAAQiB,IAAO,CACvDwC,EAAMnD,KAAKuD,GACXA,EAAQ7F,EAAMK,KAAKwb,QAAQhW,GAE/B/B,KAAK6T,QAAQlS,QAOtB1F,OAAOC,QA3hFd,CA6hFoB,mBAAVV,QAAwBA,OAAOilB,IAAMjlB,OAAS,SAASklB,EAAIC,EAAIC,IAAOA,GAAMD"}