{"version":3,"file":"kendo.dataviz.barcode.min.js","sources":["kendo.dataviz.barcode.js"],"sourcesContent":["(function(f, define) {\n    define('kendo.dataviz.barcode',[ \"kendo.dataviz.core\", \"kendo.drawing\" ], f);\n})(function() {\n\nvar __meta__ = { // jshint ignore:line\n    id: \"dataviz.barcode\",\n    name: \"Barcode\",\n    category: \"dataviz\",\n    description: \"Barcode widget\",\n    depends: [ \"dataviz.core\" ]\n};\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n\n        extend = $.extend,\n        deepExtend = kendo.deepExtend,\n        inArray = $.inArray,\n        isPlainObject = $.isPlainObject,\n\n        draw = kendo.drawing,\n        geom = kendo.geometry,\n        util = kendo.drawing.util,\n        defined = util.defined,\n        dataviz = kendo.dataviz,\n        Box2D = dataviz.Box2D,\n        TextBox = dataviz.TextBox,\n        DEFAULT_WIDTH = 300,\n        DEFAULT_HEIGHT = 100,\n        DEFAULT_QUIETZONE_LENGTH = 10,\n        numberRegex = /^\\d+$/,\n        alphanumericRegex = /^[a-z0-9]+$/i,\n        InvalidCharacterErrorTemplate = \"Character '{0}' is not valid for symbology {1}\";\n\n    function getNext(value, index, count) {\n        return value.substring(index, index + count);\n    }\n\n    var Encoding = kendo.Class.extend({\n        init: function(options) {\n            this.setOptions(options);\n        },\n        setOptions: function(options) {\n            var that = this;\n            that.options = extend({}, that.options, options);\n            that.quietZoneLength = that.options.addQuietZone ? 2 * that.options.quietZoneLength : 0;\n        },\n        encode: function(value, width, height) {\n            var that = this;\n            if (defined(value)) {\n                value += '';\n            }\n\n            that.initValue(value, width, height);\n\n            if (that.options.addQuietZone) {\n                that.addQuietZone();\n            }\n\n            that.addData();\n\n            if (that.options.addQuietZone) {\n                that.addQuietZone();\n            }\n\n            return {\n                baseUnit: that.baseUnit,\n                pattern: that.pattern\n            };\n        },\n        options: {\n            quietZoneLength: DEFAULT_QUIETZONE_LENGTH,\n            addQuietZone: true,\n            addCheckSum: true\n        },\n        initValue: function() {},\n        addQuietZone: function() {\n            this.pattern.push(this.options.quietZoneLength || DEFAULT_QUIETZONE_LENGTH);\n        },\n        addData: function() {\n        },\n        invalidCharacterError: function(character) {\n            throw new Error(kendo.format(InvalidCharacterErrorTemplate, character, this.name));\n        }\n    });\n\n    var encodings = {};\n\n    var code39Base = Encoding.extend({\n        minBaseUnitLength: 0.7,\n        addData: function() {\n            var that = this,\n                value = that.value;\n\n            that.addStart();\n\n            for (var idx = 0; idx < value.length; idx++) {\n                that.addCharacter(value.charAt(idx));\n            }\n\n            if (that.options.addCheckSum) {\n                that.pushCheckSum();\n            }\n\n            that.addStop();\n            that.prepareValues();\n        },\n        addCharacter: function(character) {\n            var that = this,\n                charData = that.characterMap[character];\n            if (!charData) {\n                that.invalidCharacterError(character);\n            }\n            that.addBase(charData);\n        },\n        addBase: function() {}\n    });\n\n    var code39ExtendedBase = {\n        addCharacter: function(character) {\n            var that = this;\n            if (that.characterMap[character]) {\n                that.addBase(that.characterMap[character]);\n            }\n            else if (character.charCodeAt(0) > 127) {\n                that.invalidCharacterError(character);\n            }\n            else {\n                that.addExtended(character.charCodeAt(0));\n            }\n        },\n        addExtended: function(code) {\n            var that = this,\n                patterns;\n            for (var i = 0; i < that.extendedMappings.length; i++) {\n                if ((patterns = that.extendedMappings[i].call(that, code))) {\n                    for (var j = 0; j < patterns.length; j++) {\n                        that.addBase(patterns[j]);\n                    }\n                    that.dataLength += patterns.length - 1;\n                    return;\n                }\n            }\n        },\n        extendedMappings: [\n            function(code) {\n                if (97 <= code && code <= 122) {\n                    var that = this;\n                    return [that.characterMap[that.shiftCharacters[0]], that.characterMap[String.fromCharCode(code - 32)]];\n                }\n            },\n            function(code) {\n                if (33 <= code && code <= 58) {\n                    var that = this;\n                    return [that.characterMap[that.shiftCharacters[1]], that.characterMap[String.fromCharCode(code + 32)]];\n                }\n            },\n            function(code) {\n                if (1 <= code && code <= 26) {\n                    var that = this;\n                    return [that.characterMap[that.shiftCharacters[2]], that.characterMap[String.fromCharCode(code + 64)]];\n                }\n            },\n            function(code) {\n                var that = this,\n                    result,\n                    dataCharacter;\n                if (!that.specialAsciiCodes[code]) {\n                    dataCharacter = Math.floor(code / 32) * 6 + (code - 27) % 32 + 64;\n                    result = [that.characterMap[that.shiftCharacters[3]], that.characterMap[String.fromCharCode(dataCharacter)]];\n                }\n                else {\n                    result = [];\n                    for (var i = 0; i < that.specialAsciiCodes[code].length; i++) {\n                        result.push(that.characterMap[that.shiftCharacters[3]]);\n                        result.push(that.characterMap[that.specialAsciiCodes[code][i]]);\n                    }\n                }\n\n                return result;\n            }\n        ],\n        specialAsciiCodes: {\n            \"0\": [\"U\"],\n            \"64\": [\"V\"],\n            \"96\": [\"W\"],\n            \"127\": [\"T\",\"X\",\"Y\",\"Z\"]\n        },\n        shiftValuesAsciiCodes: {\n            \"39\": 36,\n            \"40\": 47,\n            \"41\": 43,\n            \"42\": 37\n        },\n        characterMap: {\n            \"+\": false,\n            \"/\": false,\n            \"$\": false,\n            \"%\": false\n        },\n        shiftCharacters: [\"SHIFT0\", \"SHIFT1\", \"SHIFT2\", \"SHIFT3\"]\n    };\n\n    encodings.code39 = code39Base.extend({\n        name: \"Code 39\",\n        checkSumMod: 43,\n        minRatio: 2.5,\n        maxRatio: 3,\n        gapWidth: 1,\n        splitCharacter: \"|\",\n        initValue: function(value, width, height) {\n            var that = this;\n            that.width = width;\n            that.height = height;\n            that.value = value;\n            that.dataLength = value.length;\n            that.pattern = [];\n            that.patternString = \"\";\n        },\n        prepareValues: function() {\n            var that = this,\n                baseUnit,\n                minBaseUnit = that.minBaseUnitLength,\n                ratio = that.maxRatio,\n                minRatio = that.minRatio,\n                minHeight = Math.max(0.15 * that.width, 24);\n            if (that.height < minHeight) {\n                throw new Error(\"Insufficient Height. The minimum height for value: \" + that.value + \" is: \" + minHeight);\n            }\n\n            while ((baseUnit = that.getBaseUnit(ratio)) < minBaseUnit && ratio > minRatio) {\n                ratio = parseFloat((ratio - 0.1).toFixed(1));\n            }\n\n            if (baseUnit < minBaseUnit) {\n                var minWidth = Math.ceil(that.getBaseWidth(minRatio) * minBaseUnit);\n                throw new Error(\"Insufficient width. The minimum width for value: \" + that.value + \" is: \" + minWidth);\n            }\n\n            that.ratio = ratio;\n            that.baseUnit = baseUnit;\n            that.patternString = that.patternString.substring(0, that.patternString.length - 1);\n            that.pattern = that.pattern.concat(that.patternString.replace(/ratio/g, ratio).split(that.splitCharacter));\n        },\n        getBaseUnit: function(ratio) {\n            return this.width / this.getBaseWidth(ratio);\n        },\n        getBaseWidth: function(ratio) {\n            var that = this,\n                characterLength = 3 * (ratio + 2);\n            return that.quietZoneLength + characterLength * (that.dataLength + 2) + that.gapWidth * (that.dataLength + 1);\n        },\n        addStart: function() {\n            var that = this;\n            that.addPattern(that.characterMap.START.pattern);\n            that.addCharacterGap();\n        },\n        addBase: function(character) {\n            this.addPattern(character.pattern);\n            this.addCharacterGap();\n        },\n        addStop: function() {\n            this.addPattern(this.characterMap.START.pattern);\n        },\n        addPattern: function(pattern) {\n            for (var i = 0; i < pattern.length; i++) {\n                 this.patternString += this.patternMappings[pattern.charAt(i)];\n            }\n        },\n        addCharacterGap: function() {\n            var that = this;\n            that.patternString += that.gapWidth + that.splitCharacter;\n        },\n        patternMappings: {\n            \"b\": \"1|\",\n            \"w\": \"1|\",\n            \"B\": \"ratio|\",\n            \"W\": \"ratio|\"\n        },\n        characterMap: {\n            \"0\": { \"pattern\": \"bwbWBwBwb\",\"value\": 0 },\n            \"1\": { \"pattern\": \"BwbWbwbwB\",\"value\": 1 },\n            \"2\": { \"pattern\": \"bwBWbwbwB\",\"value\": 2 },\n            \"3\": { \"pattern\": \"BwBWbwbwb\",\"value\": 3 },\n            \"4\": { \"pattern\": \"bwbWBwbwB\",\"value\": 4 },\n            \"5\": { \"pattern\": \"BwbWBwbwb\",\"value\": 5 },\n            \"6\": { \"pattern\": \"bwBWBwbwb\",\"value\": 6 },\n            \"7\": { \"pattern\": \"bwbWbwBwB\",\"value\": 7 },\n            \"8\": { \"pattern\": \"BwbWbwBwb\",\"value\": 8 },\n            \"9\": { \"pattern\": \"bwBWbwBwb\",\"value\": 9 },\n            \"A\": { \"pattern\": \"BwbwbWbwB\",\"value\": 10 },\n            \"B\": { \"pattern\": \"bwBwbWbwB\",\"value\": 11 },\n            \"C\": { \"pattern\": \"BwBwbWbwb\",\"value\": 12 },\n            \"D\": { \"pattern\": \"bwbwBWbwB\",\"value\": 13 },\n            \"E\": { \"pattern\": \"BwbwBWbwb\",\"value\": 14 },\n            \"F\": { \"pattern\": \"bwBwBWbwb\",\"value\": 15 },\n            \"G\": { \"pattern\": \"bwbwbWBwB\",\"value\": 16 },\n            \"H\": { \"pattern\": \"BwbwbWBwb\",\"value\": 17 },\n            \"I\": { \"pattern\": \"bwBwbWBwb\",\"value\": 18 },\n            \"J\": { \"pattern\": \"bwbwBWBwb\",\"value\": 19 },\n            \"K\": { \"pattern\": \"BwbwbwbWB\",\"value\": 20 },\n            \"L\": { \"pattern\": \"bwBwbwbWB\",\"value\": 21 },\n            \"M\": { \"pattern\": \"BwBwbwbWb\",\"value\": 22 },\n            \"N\": { \"pattern\": \"bwbwBwbWB\",\"value\": 23 },\n            \"O\": { \"pattern\": \"BwbwBwbWb\",\"value\": 24 },\n            \"P\": { \"pattern\": \"bwBwBwbWb\",\"value\": 25 },\n            \"Q\": { \"pattern\": \"bwbwbwBWB\",\"value\": 26 },\n            \"R\": { \"pattern\": \"BwbwbwBWb\",\"value\": 27 },\n            \"S\": { \"pattern\": \"bwBwbwBWb\",\"value\": 28 },\n            \"T\": { \"pattern\": \"bwbwBwBWb\",\"value\": 29 },\n            \"U\": { \"pattern\": \"BWbwbwbwB\",\"value\": 30 },\n            \"V\": { \"pattern\": \"bWBwbwbwB\",\"value\": 31 },\n            \"W\": { \"pattern\": \"BWBwbwbwb\",\"value\": 32 },\n            \"X\": { \"pattern\": \"bWbwBwbwB\",\"value\": 33 },\n            \"Y\": { \"pattern\": \"BWbwBwbwb\",\"value\": 34 },\n            \"Z\": { \"pattern\": \"bWBwBwbwb\",\"value\": 35 },\n            \"-\": { \"pattern\": \"bWbwbwBwB\",\"value\": 36 },\n            \".\": { \"pattern\": \"BWbwbwBwb\",\"value\": 37 },\n            \" \": { \"pattern\": \"bWBwbwBwb\",\"value\": 38 },\n            \"$\": { \"pattern\": \"bWbWbWbwb\",\"value\": 39 },\n            \"/\": { \"pattern\": \"bWbWbwbWb\",\"value\": 40 },\n            \"+\": { \"pattern\": \"bWbwbWbWb\",\"value\": 41 },\n            \"%\": { \"pattern\": \"bwbWbWbWb\",\"value\": 42 },\n            START: { pattern: \"bWbwBwBwb\" }\n        },\n        options: {\n            addCheckSum: false\n        }\n    });\n\n    encodings.code39extended = encodings.code39.extend(deepExtend({}, code39ExtendedBase, {\n        name: \"Code 39 extended\",\n        characterMap: {\n            SHIFT0: { \"pattern\": \"bWbwbWbWb\",\"value\": 41 },\n            SHIFT1: { \"pattern\": \"bWbWbwbWb\",\"value\": 40 },\n            SHIFT2: { \"pattern\": \"bWbWbWbwb\",\"value\": 39 },\n            SHIFT3: { \"pattern\": \"bwbWbWbWb\",\"value\": 42 }\n        }\n    }));\n\n    encodings.code93 = code39Base.extend({\n        name: \"Code 93\",\n        cCheckSumTotal: 20,\n        kCheckSumTotal: 15,\n        checkSumMod: 47,\n        initValue: function(value, width, height) {\n            var that = this;\n            that.value = value;\n            that.width = width;\n            that.height = height;\n            that.pattern = [];\n            that.values = [];\n            that.dataLength = value.length;\n        },\n        prepareValues: function() {\n            var that = this,\n                minHeight = Math.max(0.15 * that.width, 24);\n            if (that.height < minHeight) {\n                throw new Error(\"Insufficient Height\");\n            }\n\n            that.setBaseUnit();\n\n            if (that.baseUnit < that.minBaseUnitLength) {\n                throw new Error(\"Insufficient Width\");\n            }\n        },\n        setBaseUnit: function() {\n            var that = this,\n                checkSumLength = 2;\n            that.baseUnit = that.width / (9 * (that.dataLength + 2 + checkSumLength) + that.quietZoneLength + 1);\n        },\n        addStart: function() {\n            var pattern = this.characterMap.START.pattern;\n            this.addPattern(pattern);\n        },\n        addStop: function() {\n            var that = this;\n            that.addStart();\n            that.pattern.push(that.characterMap.TERMINATION_BAR);\n        },\n        addBase: function(charData) {\n            this.addPattern(charData.pattern);\n            this.values.push(charData.value);\n        },\n        pushCheckSum: function() {\n            var that = this,\n                checkValues = that._getCheckValues(),\n                charData;\n\n            that.checksum = checkValues.join(\"\");\n            for (var i = 0; i < checkValues.length; i++) {\n                charData = that.characterMap[that._findCharacterByValue(checkValues[i])];\n                that.addPattern(charData.pattern);\n            }\n        },\n        _getCheckValues: function() {\n            var that = this,\n                values = that.values,\n                length = values.length,\n                wightedSum = 0,\n                cValue,\n                kValue,\n                idx;\n\n            for (idx = length - 1; idx >= 0; idx--) {\n                wightedSum += that.weightedValue(values[idx],length - idx, that.cCheckSumTotal);\n            }\n            cValue = wightedSum % that.checkSumMod;\n\n            wightedSum = that.weightedValue(cValue, 1, that.kCheckSumTotal);\n            for (idx = length - 1; idx >= 0; idx--) {\n                wightedSum += that.weightedValue(values[idx], length - idx + 1, that.kCheckSumTotal);\n            }\n\n            kValue = wightedSum % that.checkSumMod;\n            return [cValue, kValue];\n        },\n        _findCharacterByValue: function(value) {\n            for (var character in this.characterMap) {\n                if (this.characterMap[character].value === value) {\n                    return character;\n                }\n            }\n        },\n        weightedValue: function(value, index, total) {\n            return (index % total || total) * value;\n        },\n        addPattern: function(pattern) {\n            var value;\n\n            for (var i = 0; i < pattern.length; i++) {\n                value = parseInt(pattern.charAt(i),10);\n                this.pattern.push(value);\n            }\n        },\n        characterMap: {\n            \"0\": { \"pattern\": \"131112\",\"value\": 0 },\n            \"1\": { \"pattern\": \"111213\",\"value\": 1 },\n            \"2\": { \"pattern\": \"111312\",\"value\": 2 },\n            \"3\": { \"pattern\": \"111411\",\"value\": 3 },\n            \"4\": { \"pattern\": \"121113\",\"value\": 4 },\n            \"5\": { \"pattern\": \"121212\",\"value\": 5 },\n            \"6\": { \"pattern\": \"121311\",\"value\": 6 },\n            \"7\": { \"pattern\": \"111114\",\"value\": 7 },\n            \"8\": { \"pattern\": \"131211\",\"value\": 8 },\n            \"9\": { \"pattern\": \"141111\",\"value\": 9 },\n            \"A\": { \"pattern\": \"211113\",\"value\": 10 },\n            \"B\": { \"pattern\": \"211212\",\"value\": 11 },\n            \"C\": { \"pattern\": \"211311\",\"value\": 12 },\n            \"D\": { \"pattern\": \"221112\",\"value\": 13 },\n            \"E\": { \"pattern\": \"221211\",\"value\": 14 },\n            \"F\": { \"pattern\": \"231111\",\"value\": 15 },\n            \"G\": { \"pattern\": \"112113\",\"value\": 16 },\n            \"H\": { \"pattern\": \"112212\",\"value\": 17 },\n            \"I\": { \"pattern\": \"112311\",\"value\": 18 },\n            \"J\": { \"pattern\": \"122112\",\"value\": 19 },\n            \"K\": { \"pattern\": \"132111\",\"value\": 20 },\n            \"L\": { \"pattern\": \"111123\",\"value\": 21 },\n            \"M\": { \"pattern\": \"111222\",\"value\": 22 },\n            \"N\": { \"pattern\": \"111321\",\"value\": 23 },\n            \"O\": { \"pattern\": \"121122\",\"value\": 24 },\n            \"P\": { \"pattern\": \"131121\",\"value\": 25 },\n            \"Q\": { \"pattern\": \"212112\",\"value\": 26 },\n            \"R\": { \"pattern\": \"212211\",\"value\": 27 },\n            \"S\": { \"pattern\": \"211122\",\"value\": 28 },\n            \"T\": { \"pattern\": \"211221\",\"value\": 29 },\n            \"U\": { \"pattern\": \"221121\",\"value\": 30 },\n            \"V\": { \"pattern\": \"222111\",\"value\": 31 },\n            \"W\": { \"pattern\": \"112122\",\"value\": 32 },\n            \"X\": { \"pattern\": \"112221\",\"value\": 33 },\n            \"Y\": { \"pattern\": \"122121\",\"value\": 34 },\n            \"Z\": { \"pattern\": \"123111\",\"value\": 35 },\n            \"-\": { \"pattern\": \"121131\",\"value\": 36 },\n            \".\": { \"pattern\": \"311112\",\"value\": 37 },\n            \" \": { \"pattern\": \"311211\",\"value\": 38 },\n            \"$\": { \"pattern\": \"321111\",\"value\": 39 },\n            \"/\": { \"pattern\": \"112131\",\"value\": 40 },\n            \"+\": { \"pattern\": \"113121\",\"value\": 41 },\n            \"%\": { \"pattern\": \"211131\",\"value\": 42 },\n            SHIFT0: { \"pattern\": \"122211\",\"value\": 46 },\n            SHIFT1: { \"pattern\": \"311121\",\"value\": 45 },\n            SHIFT2: { \"pattern\": \"121221\",\"value\": 43 },\n            SHIFT3: { \"pattern\": \"312111\",\"value\": 44 },\n            START: { \"pattern\": \"111141\" },\n            TERMINATION_BAR: \"1\"\n        }\n    });\n\n    encodings.code93extended = encodings.code93.extend(deepExtend({}, code39ExtendedBase, {\n        name: \"Code 93 extended\",\n        pushCheckSum: function() {\n            var that = this,\n                checkValues = that._getCheckValues(),\n                value;\n\n            that.checksum = checkValues.join(\"\");\n\n            for (var i = 0; i < checkValues.length; i++) {\n                value = checkValues[i];\n                if (that.shiftValuesAsciiCodes[value]) {\n                    that.addExtended(that.shiftValuesAsciiCodes[value]);\n                }\n                else {\n                    that.addPattern(that.characterMap[that._findCharacterByValue(value)].pattern);\n                }\n            }\n        }\n    }));\n\n    var state128 = kendo.Class.extend({\n        init: function(encoding) {\n            this.encoding = encoding;\n        },\n        addStart: function() {},\n        is: function() {},\n        move: function() {},\n        pushState: function() {}\n    });\n\n    var state128AB = state128.extend({\n        FNC4: \"FNC4\",\n        init: function(encoding, states) {\n            var that = this;\n            that.encoding = encoding;\n            that.states = states;\n            that._initMoves(states);\n        },\n        addStart: function() {\n            this.encoding.addPattern(this.START);\n        },\n        is: function(value, index) {\n            var code = value.charCodeAt(index);\n            return this.isCode(code);\n        },\n        move: function(encodingState) {\n            var that = this,\n                idx = 0;\n\n            while (!that._moves[idx].call(that, encodingState) && idx < that._moves.length) {\n                idx++;\n            }\n        },\n        pushState: function(encodingState) {\n            var that = this,\n                states = that.states,\n                value = encodingState.value,\n                maxLength = value.length,\n                code;\n\n            if (inArray(\"C\", states) >= 0) {\n                var numberMatch = value.substr(encodingState.index).match(/\\d{4,}/g);\n                if (numberMatch) {\n                    maxLength = value.indexOf(numberMatch[0], encodingState.index);\n                }\n            }\n\n            while ((code = encodingState.value.charCodeAt(encodingState.index)) >= 0 &&\n                that.isCode(code) && encodingState.index < maxLength) {\n                that.encoding.addPattern(that.getValue(code));\n                encodingState.index++;\n            }\n        },\n        _initMoves: function(states) {\n            var that = this;\n            that._moves = [];\n\n            if (inArray(that.FNC4, states) >= 0) {\n                that._moves.push(that._moveFNC);\n            }\n\n            if (inArray(that.shiftKey, states) >= 0) {\n                that._moves.push(that._shiftState);\n            }\n            that._moves.push(that._moveState);\n        },\n        _moveFNC: function(encodingState) {\n            if (encodingState.fnc) {\n                encodingState.fnc = false;\n                return encodingState.previousState == this.key;\n            }\n        },\n        _shiftState: function(encodingState) {\n            var that = this;\n            if (encodingState.previousState == that.shiftKey &&\n                (encodingState.index + 1 >= encodingState.value.length ||\n                    that.encoding[that.shiftKey].is(encodingState.value, encodingState.index + 1))) {\n                that.encoding.addPattern(that.SHIFT);\n                encodingState.shifted = true;\n                return true;\n            }\n        },\n        _moveState: function() {\n            this.encoding.addPattern(this.MOVE);\n            return true;\n        },\n        SHIFT: 98\n    });\n\n    var states128 = {};\n\n    states128.A = state128AB.extend({\n        key: \"A\",\n        shiftKey: \"B\",\n        isCode: function(code) {\n            return code >= 0 && code < 96;\n        },\n        getValue: function(code) {\n            if (code < 32) {\n                return code + 64;\n            }\n\n            return code - 32;\n        },\n        MOVE: 101,\n        START: 103\n    });\n\n    states128.B = state128AB.extend({\n        key: \"B\",\n        shiftKey: \"A\",\n        isCode: function(code) {\n            return code >= 32 && code < 128;\n        },\n        getValue: function(code) {\n            return code - 32;\n        },\n        MOVE: 100,\n        START: 104\n    });\n\n    states128.C = state128.extend({\n        key: \"C\",\n        addStart: function() {\n            this.encoding.addPattern(this.START);\n        },\n        is: function(value, index) {\n            var next4 = getNext(value, index, 4);\n            return (index + 4 <= value.length || value.length == 2) && numberRegex.test(next4);\n        },\n        move: function() {\n            this.encoding.addPattern(this.MOVE);\n        },\n        pushState: function(encodingState) {\n            var code;\n            while (( code = getNext(encodingState.value, encodingState.index, 2)) &&\n                numberRegex.test(code) && code.length == 2)\n            {\n                this.encoding.addPattern(parseInt(code, 10));\n                encodingState.index += 2;\n            }\n        },\n        getValue: function(code) {\n            return code;\n        },\n        MOVE: 99,\n        START: 105\n    });\n\n    states128.FNC4 = state128.extend({\n        key: \"FNC4\",\n        dependentStates: [\"A\",\"B\"],\n        init: function(encoding, states) {\n            this.encoding = encoding;\n            this._initSubStates(states);\n        },\n        addStart: function(encodingState) {\n            var code = encodingState.value.charCodeAt(0) - 128,\n                subState = this._getSubState(code);\n\n            this.encoding[subState].addStart();\n        },\n        is: function(value, index) {\n            var code = value.charCodeAt(index);\n            return this.isCode(code);\n        },\n        isCode: function(code) {\n            return code >= 128 && code < 256;\n        },\n        pushState: function(encodingState) {\n            var that = this,\n                subState = that._initSubState(encodingState),\n                encoding = that.encoding,\n                length = subState.value.length;\n            encodingState.index += length;\n\n            if (length < 3) {\n                var code;\n                for (; subState.index < length; subState.index++) {\n                    code = subState.value.charCodeAt(subState.index);\n                    subState.state = that._getSubState(code);\n                    if (subState.previousState != subState.state) {\n                        subState.previousState = subState.state;\n                        encoding[subState.state].move(subState);\n                    }\n                    encoding.addPattern(encoding[subState.state].MOVE);\n                    encoding.addPattern(encoding[subState.state].getValue(code));\n                }\n            }\n            else {\n                if (subState.state != subState.previousState) {\n                    encoding[subState.state].move(subState);\n                }\n                that._pushStart(subState);\n                encoding.pushData(subState, that.subStates);\n                if (encodingState.index < encodingState.value.length) {\n                    that._pushStart(subState);\n                }\n            }\n\n            encodingState.fnc = true;\n            encodingState.state = subState.state;\n        },\n        _pushStart: function(subState) {\n            var that = this;\n            that.encoding.addPattern(that.encoding[subState.state].MOVE);\n            that.encoding.addPattern(that.encoding[subState.state].MOVE);\n        },\n        _initSubState: function(encodingState) {\n            var that = this,\n                subState = {\n                    value: that._getAll(encodingState.value, encodingState.index),\n                    index: 0\n                };\n            subState.state = that._getSubState(subState.value.charCodeAt(0));\n            subState.previousState = encodingState.previousState == that.key ?\n                subState.state : encodingState.previousState;\n            return subState;\n        },\n        _initSubStates: function(states) {\n            var that = this;\n            that.subStates = [];\n            for (var i = 0; i < states.length; i++) {\n                if (inArray(states[i], that.dependentStates) >= 0) {\n                    that.subStates.push(states[i]);\n                }\n            }\n        },\n        _getSubState: function(code) {\n            var that = this;\n            for (var i = 0; i < that.subStates.length; i++) {\n                if (that.encoding[that.subStates[i]].isCode(code)) {\n                    return that.subStates[i];\n                }\n            }\n        },\n        _getAll: function(value, index) {\n            var code,\n                result = \"\";\n            while ((code = value.charCodeAt(index++)) && this.isCode(code)) {\n                result += String.fromCharCode(code - 128);\n            }\n            return result;\n        }\n    });\n\n    states128.FNC1 = state128.extend({\n        key: \"FNC1\",\n        startState: \"C\",\n        dependentStates: [\"C\",\"B\"],\n        startAI: \"(\",\n        endAI: \")\",\n        init: function(encoding, states) {\n            this.encoding = encoding;\n            this.states = states;\n        },\n        addStart: function() {\n            this.encoding[this.startState].addStart();\n        },\n        is: function() {\n            return inArray(this.key, this.states) >= 0;\n        },\n        pushState: function(encodingState) {\n            var that = this,\n                encoding = that.encoding,\n                value = encodingState.value.replace(/\\s/g, \"\"),\n                regexSeparators = new RegExp(\"[\" + that.startAI + that.endAI + \"]\", \"g\"),\n                index = encodingState.index,\n                subState = {\n                    state: that.startState\n                },\n                current,\n                nextStart,\n                separatorLength;\n\n            encoding.addPattern(that.START);\n\n            while (true) {\n                subState.index = 0;\n\n                separatorLength = value.charAt(index) === that.startAI ? 2 : 0;\n                current = separatorLength > 0 ? that.getBySeparator(value, index) : that.getByLength(value, index);\n                if (current.ai.length) {\n                    nextStart = index + separatorLength + current.id.length + current.ai.length;\n                }\n                else {\n                    nextStart = value.indexOf(that.startAI, index + 1);\n                    if (nextStart < 0) {\n                        if (index + current.ai.max + current.id.length + separatorLength < value.length) {\n                            throw new Error(\"Separators are required after variable length identifiers\");\n                        }\n                        nextStart = value.length;\n                    }\n                }\n                subState.value = value.substring(index, nextStart).replace(regexSeparators, \"\");\n                that.validate(current, subState.value);\n\n                encoding.pushData(subState, that.dependentStates);\n\n                if (nextStart >= value.length) {\n                    break;\n                }\n\n                index = nextStart;\n\n                if (subState.state != that.startState) {\n                    encoding[that.startState].move(subState);\n                    subState.state = that.startState;\n                }\n\n                if (!current.ai.length) {\n                    encoding.addPattern(that.START);\n                }\n            }\n            encodingState.index = encodingState.value.length;\n        },\n        validate: function(current, value) {\n            var code = value.substr(current.id.length),\n                ai = current.ai;\n            if (!ai.type && !numberRegex.test(code)) {\n                throw new Error(\"Application identifier \" + current.id + \" is numeric only but contains non numeric character(s).\");\n            }\n\n            if (ai.type == \"alphanumeric\" && !alphanumericRegex.test(code)) {\n                 throw new Error(\"Application identifier \" + current.id + \" is alphanumeric only but contains non alphanumeric character(s).\");\n            }\n\n            if (ai.length && ai.length !== code.length) {\n                 throw new Error(\"Application identifier \" + current.id + \" must be \" + ai.length + \" characters long.\");\n            }\n\n            if (ai.min && ai.min > code.length) {\n                 throw new Error(\"Application identifier \" + current.id + \" must be at least \" + ai.min + \" characters long.\");\n            }\n\n            if (ai.max && ai.max < code.length) {\n                 throw new Error(\"Application identifier \" + current.id + \" must be at most \" + ai.max + \" characters long.\");\n            }\n        },\n        getByLength: function(value, index) {\n            var that = this,\n                id,\n                ai;\n            for (var i = 2; i <= 4; i++) {\n                id = getNext(value, index, i);\n                ai = that.getAI(id) || that.getAI(id.substring(0, id.length - 1));\n                if (ai) {\n                    return {\n                        id: id,\n                        ai: ai\n                    };\n                }\n            }\n            that.unsupportedAIError(id);\n        },\n        unsupportedAIError: function(id) {\n            throw new Error(kendo.format(\"'{0}' is not a supported Application Identifier\"),id);\n        },\n        getBySeparator: function(value, index) {\n            var that = this,\n                start = value.indexOf(that.startAI, index),\n                end = value.indexOf(that.endAI, start),\n                id = value.substring(start + 1,end),\n                ai = that.getAI(id) || that.getAI(id.substr(id.length - 1));\n            if (!ai) {\n                that.unsupportedAIError(id);\n            }\n\n            return {\n                ai: ai,\n                id: id\n            };\n        },\n        getAI: function(id) {\n            var ai = this.applicationIdentifiers,\n                multiKey = ai.multiKey;\n            if (ai[id]) {\n                return ai[id];\n            }\n\n            for (var i = 0; i < multiKey.length; i++) {\n                if (multiKey[i].ids && inArray(id, multiKey[i].ids) >= 0) {\n                    return multiKey[i].type;\n                }\n                else if (multiKey[i].ranges) {\n                    var ranges = multiKey[i].ranges;\n                    for (var j = 0; j < ranges.length; j++) {\n                        if (ranges[j][0] <= id && id <= ranges[j][1]) {\n                            return multiKey[i].type;\n                        }\n                    }\n                }\n            }\n        },\n        applicationIdentifiers: {\n            \"22\": { max: 29, type: \"alphanumeric\" },\n            \"402\": { length: 17 },\n            \"7004\": { max: 4, type: \"alphanumeric\" },\n            \"242\": { max: 6, type: \"alphanumeric\" },\n            \"8020\": { max: 25, type: \"alphanumeric\" },\n            \"703\": { min: 3, max: 30, type: \"alphanumeric\" },\n            \"8008\": { min: 8, max: 12, type: \"alphanumeric\" },\n            \"253\": { min: 13, max: 17, type: \"alphanumeric\" },\n            \"8003\": { min: 14, max: 30, type: \"alphanumeric\" },\n            multiKey: [{\n                ids: [\"15\", \"17\", \"8005\", \"8100\"],\n                ranges: [\n                    [11, 13],\n                    [310, 316],\n                    [320, 336],\n                    [340, 369]\n                ],\n                type: { length: 6 }\n            },{\n                ids: [\"240\", \"241\", \"250\", \"251\", \"400\", \"401\", \"403\", \"7002\", \"8004\", \"8007\", \"8110\"],\n                ranges: [[90 - 99]],\n                type: { max: 30, type: \"alphanumeric\" }\n            },{\n                ids: [\"7001\"],\n                ranges: [[410, 414]],\n                type: { length: 13 }\n            },{\n                ids: [\"10\",\"21\", \"254\", \"420\", \"8002\"],\n                type: { max: 20, type: \"alphanumeric\" }\n            },{\n                ids: [\"00\", \"8006\", \"8017\", \"8018\"],\n                type: { length: 18 }\n            },{\n                ids: [\"01\", \"02\", \"8001\"],\n                type: { length: 14 }\n            },{\n                ids: [\"422\"],\n                ranges: [\n                    [424, 426]\n                ],\n                type: { length: 3 }\n            },{\n                ids: [\"20\", \"8102\"],\n                type: { length: 2 }\n            },{\n                ids: [\"30\",\"37\"],\n                type: { max: 8, type: \"alphanumeric\" }\n            },{\n                ids: [\"390\",\"392\"],\n                type: { max: 15, type: \"alphanumeric\" }\n            },{\n                ids: [\"421\", \"423\"],\n                type: { min: 3, max: 15, type: \"alphanumeric\" }\n            }, {\n                ids: [\"391\", \"393\"],\n                type: { min: 3, max: 18, type: \"alphanumeric\" }\n            },{\n                ids: [\"7003\", \"8101\"],\n                type: { length: 10 }\n            }]\n        },\n        START: 102\n    });\n\n    var code128Base = Encoding.extend({\n        init: function(options) {\n            Encoding.fn.init.call(this, options);\n            this._initStates();\n        },\n        _initStates: function() {\n            var that = this;\n            for (var i = 0; i < that.states.length; i++) {\n                that[that.states[i]] = new states128[that.states[i]](that, that.states);\n            }\n        },\n        initValue: function(value, width, height) {\n           var that = this;\n           that.pattern = [];\n           that.value = value;\n           that.width = width;\n           that.height = height;\n           that.checkSum = 0;\n           that.totalUnits = 0;\n           that.index = 0;\n           that.position = 1;\n        },\n        addData: function() {\n            var that = this,\n                encodingState = {\n                    value: that.value,\n                    index: 0,\n                    state: \"\"\n                };\n            if (that.value.length === 0) {\n                return;\n            }\n\n            encodingState.state =\n                encodingState.previousState = that.getNextState(encodingState, that.states);\n\n            that.addStart(encodingState);\n\n            that.pushData(encodingState, that.states);\n\n            that.addCheckSum();\n            that.addStop();\n            that.setBaseUnit();\n        },\n        pushData: function(encodingState, states) {\n            var that = this;\n            while (true) {\n                that[encodingState.state].pushState(encodingState);\n                if (encodingState.index >= encodingState.value.length) {\n                    break;\n                }\n\n                if (!encodingState.shifted) {\n                    encodingState.previousState = encodingState.state;\n                    encodingState.state = that.getNextState(encodingState, states);\n                    that[encodingState.state].move(encodingState);\n                }\n                else {\n                   var temp = encodingState.state;\n                   encodingState.state = encodingState.previousState;\n                   encodingState.previousState = temp;\n                   encodingState.shifted = false;\n                }\n            }\n        },\n        addStart: function(encodingState) {\n            this[encodingState.state].addStart(encodingState);\n            this.position = 1;\n        },\n        addCheckSum: function() {\n            var that = this;\n\n            that.checksum = that.checkSum % 103;\n            that.addPattern(that.checksum);\n        },\n        addStop: function() {\n            this.addPattern(this.STOP);\n        },\n        setBaseUnit: function() {\n            var that = this;\n            that.baseUnit = that.width / (that.totalUnits + that.quietZoneLength);\n        },\n        addPattern: function(code) {\n            var that = this,\n                pattern = that.characterMap[code].toString(),\n                value;\n\n            for (var i = 0; i < pattern.length; i++) {\n                value = parseInt(pattern.charAt(i),10);\n                that.pattern.push(value);\n                that.totalUnits += value;\n            }\n            that.checkSum += code * that.position++;\n        },\n        getNextState: function(encodingState, states) {\n            for (var i = 0; i < states.length; i++) {\n                if (this[states[i]].is(encodingState.value, encodingState.index)) {\n                    return states[i];\n                }\n            }\n            this.invalidCharacterError(encodingState.value.charAt(encodingState.index));\n        },\n        characterMap: [\n            212222,222122,222221,121223,121322,131222,122213,122312,132212,221213,\n            221312,231212,112232,122132,122231,113222,123122,123221,223211,221132,\n            221231,213212,223112,312131,311222,321122,321221,312212,322112,322211,\n            212123,212321,232121,111323,131123,131321,112313,132113,132311,211313,\n            231113,231311,112133,112331,132131,113123,113321,133121,313121,211331,\n            231131,213113,213311,213131,311123,311321,331121,312113,312311,332111,\n            314111,221411,431111,111224,111422,121124,121421,141122,141221,112214,\n            112412,122114,122411,142112,142211,241211,221114,413111,241112,134111,\n            111242,121142,121241,114212,124112,124211,411212,421112,421211,212141,\n            214121,412121,111143,111341,131141,114113,114311,411113,411311,113141,\n            114131,311141,411131,211412,211214,211232,2331112\n        ],\n        STOP: 106\n    });\n\n    encodings.code128a = code128Base.extend({\n        name: \"Code 128 A\",\n        states: [\"A\"]\n    });\n\n\n    encodings.code128b = code128Base.extend({\n        name: \"Code 128 B\",\n        states: [\"B\"]\n    });\n\n    encodings.code128c = code128Base.extend({\n        name: \"Code 128 C\",\n        states: [\"C\"]\n    });\n\n    encodings.code128 = code128Base.extend({\n        name: \"Code 128\",\n        states: [\"C\", \"B\", \"A\", \"FNC4\"]\n    });\n\n    encodings[\"gs1-128\"] = code128Base.extend({\n       name: \"Code GS1-128\",\n       states: [\"FNC1\", \"C\", \"B\"]\n    });\n\n    var msiBase = Encoding.extend({\n        initValue: function(value, width) {\n            var that = this;\n            that.pattern = [];\n            that.value = value;\n            that.checkSumLength = 0;\n            that.width = width;\n        },\n        setBaseUnit: function() {\n            var that = this,\n                startStopLength = 7;\n\n            that.baseUnit = that.width /\n                    ( 12 * (that.value.length + that.checkSumLength) + that.quietZoneLength + startStopLength);\n        },\n        addData: function() {\n            var that = this,\n                value = that.value;\n            that.addPattern(that.START);\n\n            for (var i = 0; i < value.length; i++) {\n                that.addCharacter(value.charAt(i));\n            }\n\n            if (that.options.addCheckSum) {\n                that.addCheckSum();\n            }\n\n            that.addPattern(that.STOP);\n            that.setBaseUnit();\n        },\n        addCharacter: function(character) {\n            var that = this,\n                pattern = that.characterMap[character];\n            if (!pattern) {\n                that.invalidCharacterError(character);\n            }\n            that.addPattern(pattern);\n        },\n        addPattern: function(pattern) {\n            for (var i = 0; i < pattern.length; i++) {\n                this.pattern.push(parseInt(pattern.charAt(i),10));\n            }\n        },\n        addCheckSum: function() {\n            var that = this,\n                checkSumFunction = that.checkSums[that.checkSumType],\n                checkValues;\n\n            checkValues = checkSumFunction.call(that.checkSums, that.value);\n\n            that.checksum = checkValues.join(\"\");\n            for (var i = 0; i < checkValues.length; i++) {\n                that.checkSumLength++;\n                that.addPattern(that.characterMap[checkValues[i]]);\n            }\n        },\n        checkSums: {\n            Modulo10: function(value) {\n                var checkValues = [0, \"\"],\n                odd = value.length % 2,\n                idx,\n                evenSum,\n                oddSum;\n\n                for (idx = 0; idx < value.length; idx++) {\n                    checkValues[(idx + odd) % 2] += parseInt(value.charAt(idx),10);\n                }\n\n                oddSum = checkValues[0];\n                evenSum = (checkValues[1] * 2).toString();\n\n                for (idx = 0; idx < evenSum.length; idx++) {\n                    oddSum += parseInt(evenSum.charAt(idx),10);\n                }\n\n                return [(10 - (oddSum % 10)) % 10];\n            },\n            Modulo11: function(value) {\n                var weightedSum = 0,\n                    mod = 11,\n                    length = value.length,\n                    weight,\n                    checkValue;\n\n                for (var i = 0; i < length; i++) {\n                    weight = ((length - i) % 6 || 6) + 1;\n                    weightedSum += weight * value.charAt(i);\n                }\n                checkValue = (mod - weightedSum % mod) % mod;\n                if (checkValue != 10) {\n                    return [checkValue];\n                }\n                return [1, 0];\n            },\n            Modulo11Modulo10: function(value) {\n                var checkValues = this.Modulo11(value),\n                    mod11Value;\n                mod11Value = value + checkValues[0];\n\n                return checkValues.concat(this.Modulo10(mod11Value));\n            },\n            Modulo10Modulo10: function(value) {\n                var checkValues = this.Modulo10(value),\n                    mod10Value;\n                mod10Value = value + checkValues[0];\n\n                return checkValues.concat(this.Modulo10(mod10Value));\n            }\n        },\n        characterMap: [\"12121212\", \"12121221\",\"12122112\", \"12122121\", \"12211212\", \"12211221\", \"12212112\", \"12212121\", \"21121212\", \"21121221\"],\n        START: \"21\",\n        STOP: \"121\",\n        checkSumType: \"\"\n    });\n\n    encodings.msimod10 = msiBase.extend({\n        name: \"MSI Modulo10\",\n        checkSumType: \"Modulo10\"\n    });\n\n    encodings.msimod11 = msiBase.extend({\n        name: \"MSI Modulo11\",\n        checkSumType: \"Modulo11\"\n    });\n\n    encodings.msimod1110 = msiBase.extend({\n        name: \"MSI Modulo11 Modulo10\",\n        checkSumType: \"Modulo11Modulo10\"\n    });\n\n    encodings.msimod1010 = msiBase.extend({\n        name: \"MSI Modulo10 Modulo10\",\n        checkSumType: \"Modulo10Modulo10\"\n    });\n\n    encodings.code11 = Encoding.extend({\n        name: \"Code 11\",\n        cCheckSumTotal: 10,\n        kCheckSumTotal: 9,\n        kCheckSumMinLength: 10,\n        checkSumMod: 11,\n        DASH_VALUE: 10,\n        DASH: \"-\",\n        START: \"112211\",\n        STOP: \"11221\",\n        initValue: function(value, width) {\n            var that = this;\n            that.pattern = [];\n            that.value = value;\n            that.width = width;\n            that.totalUnits = 0;\n        },\n        addData: function() {\n            var that = this;\n            var value = that.value;\n            that.addPattern(that.START);\n\n            for (var i = 0; i < value.length; i++) {\n                that.addCharacter(value.charAt(i));\n            }\n\n            if (that.options.addCheckSum) {\n                that.addCheckSum();\n            }\n\n            that.addPattern(that.STOP);\n            that.setBaseUnit();\n        },\n        setBaseUnit: function() {\n            var that = this;\n            that.baseUnit = that.width / (that.totalUnits + that.quietZoneLength);\n        },\n        addCheckSum: function() {\n            var that = this,\n                value = that.value,\n                length = value.length,\n                cValue;\n\n            cValue = that.getWeightedSum(value, length, that.cCheckSumTotal) % that.checkSumMod;\n            that.checksum = cValue + \"\";\n            that.addPattern(that.characterMap[cValue]);\n\n            length++;\n            if (length >= that.kCheckSumMinLength) {\n                var kValue = (cValue + that.getWeightedSum(value, length, that.kCheckSumTotal)) % that.checkSumMod;\n                that.checksum += kValue;\n                that.addPattern(that.characterMap[kValue]);\n            }\n        },\n        getWeightedSum: function(value, length, total) {\n            var weightedSum = 0;\n            for (var i = 0; i < value.length; i++) {\n                weightedSum += this.weightedValue(this.getValue(value.charAt(i)), length, i, total);\n            }\n\n            return weightedSum;\n        },\n        weightedValue: function(value, length, index, total) {\n            var weight = (length - index) % total || total;\n            return weight * value;\n        },\n        getValue: function(character) {\n            var that = this;\n            if (!isNaN(character)) {\n                return parseInt(character,10);\n            }\n            else if (character !== that.DASH) {\n                that.invalidCharacterError(character);\n            }\n            return that.DASH_VALUE;\n        },\n        addCharacter: function(character) {\n            var that = this,\n                value = that.getValue(character),\n                pattern = that.characterMap[value];\n            that.addPattern(pattern);\n        },\n        addPattern: function(pattern) {\n            var value;\n            for (var i = 0; i < pattern.length; i++) {\n                value = parseInt(pattern.charAt(i),10);\n                this.pattern.push(value);\n                this.totalUnits += value;\n            }\n        },\n        characterMap: [\"111121\", \"211121\", \"121121\", \"221111\", \"112121\", \"212111\", \"122111\", \"111221\", \"211211\", \"211111\", \"112111\"],\n        options: {\n            addCheckSum: true\n        }\n    });\n\n    encodings.postnet = Encoding.extend({\n        name: \"Postnet\",\n        START: \"2\",\n        VALID_CODE_LENGTHS: [5,9, 11],\n        DIGIT_SEPARATOR: \"-\",\n        initValue: function(value, width, height) {\n            var that = this;\n            that.height = height;\n            that.width = width;\n            that.baseHeight = height / 2;\n            that.value = value.replace(new RegExp(that.DIGIT_SEPARATOR,\"g\"), \"\");\n            that.pattern = [];\n            that.validate(that.value);\n            that.checkSum = 0;\n            that.setBaseUnit();\n        },\n        addData: function() {\n            var that = this,\n                value = that.value;\n            that.addPattern(that.START);\n\n            for (var i = 0; i < value.length; i++) {\n                that.addCharacter(value.charAt(i));\n            }\n\n            if (that.options.addCheckSum) {\n                that.addCheckSum();\n            }\n\n            that.addPattern(that.START);\n            that.pattern.pop();\n        },\n        addCharacter: function(character) {\n            var that = this,\n                pattern = that.characterMap[character];\n            that.checkSum += parseInt(character,10);\n            that.addPattern(pattern);\n        },\n        addCheckSum: function() {\n            var that = this;\n            that.checksum = (10 - (that.checkSum % 10)) % 10;\n            that.addCharacter(that.checksum);\n        },\n        setBaseUnit: function() {\n            var that = this,\n                startStopLength = 3;\n            that.baseUnit = that.width / ((that.value.length + 1) * 10 + startStopLength + that.quietZoneLength);\n        },\n        validate: function(value) {\n            var that = this;\n\n            if (!numberRegex.test(value)) {\n                that.invalidCharacterError(value.match(/[^0-9]/)[0]);\n            }\n            if (inArray(value.length, that.VALID_CODE_LENGTHS) < 0) {\n                throw new Error(\"Invalid value length. Valid lengths for the Postnet symbology are \" + that.VALID_CODE_LENGTHS.join(\",\"));\n            }\n        },\n        addPattern: function(pattern) {\n            var that = this,\n                y1;\n            for (var i = 0; i < pattern.length; i++) {\n                y1 = that.height - that.baseHeight * pattern.charAt(i);\n                that.pattern.push({ width: 1, y1: y1, y2: that.height });\n                that.pattern.push(1);\n            }\n        },\n        characterMap: [\"22111\", \"11122\", \"11212\", \"11221\", \"12112\", \"12121\", \"12211\", \"21112\", \"21121\", \"21211\"]\n    });\n\n    encodings.ean13 = Encoding.extend({\n        initValue: function(value, width, height) {\n            value += \"\";\n\n            if (value.length != 12 || /\\D/.test(value)) {\n                throw new Error('The value of the \"EAN13\" encoding should be 12 symbols');\n            }\n\n            var that = this;\n            that.pattern = [];\n            that.options.height = height;\n            that.baseUnit = width / (95 + that.quietZoneLength);\n            that.value = value;\n            that.checksum = that.calculateChecksum();\n            that.leftKey = value[0];\n            that.leftPart = value.substr(1,6);\n            that.rightPart = value.substr(7) + that.checksum;\n        },\n        addData: function() {\n            var that = this;\n            that.addPieces(that.characterMap.start);\n            that.addSide(that.leftPart,that.leftKey);\n            that.addPieces(that.characterMap.middle);\n            that.addSide(that.rightPart);\n            that.addPieces(that.characterMap.start);\n        },\n        addSide: function(leftPart,key) {\n            var that = this;\n            for (var i = 0; i < leftPart.length; i++) {\n                if (key && parseInt(that.keyTable[key].charAt(i),10)) {\n                    that.addPieces(Array.prototype.slice.call(that.characterMap.digits[leftPart.charAt(i)]).reverse(),true);\n                } else {\n                    that.addPieces(that.characterMap.digits[leftPart.charAt(i)],true);\n                }\n            }\n        },\n        addPieces: function(arrToAdd,limitedHeight) {\n            var that = this;\n            for (var i = 0; i < arrToAdd.length; i++) {\n                if (limitedHeight) {\n                    that.pattern.push({\n                        y1: 0,\n                        y2: that.options.height * 0.95,\n                        width: arrToAdd[i]\n                    });\n                } else {\n                    that.pattern.push(arrToAdd[i]);\n                }\n            }\n        },\n        calculateChecksum: function() {\n            var odd = 0,\n                even = 0,\n                value = this.value.split(\"\").reverse().join(\"\");\n            for (var i = 0; i < value.length; i++) {\n                if (i % 2) {\n                    even += parseInt(value.charAt(i),10);\n                }\n                else {\n                    odd += parseInt(value.charAt(i),10);\n                }\n            }\n            var checksum = (10 - ((3 * odd + even) % 10)) % 10;\n            return checksum;\n        },\n        keyTable: [\n            '000000',\n            '001011',\n            '001101',\n            '001110',\n            '010011',\n            '011001',\n            '011100',\n            '010101',\n            '010110',\n            '011010'\n        ],\n        characterMap: {\n            digits: [\n                [3,2,1,1],\n                [2,2,2,1],\n                [2,1,2,2],\n                [1,4,1,1],\n                [1,1,3,2],\n                [1,2,3,1],\n                [1,1,1,4],\n                [1,3,1,2],\n                [1,2,1,3],\n                [3,1,1,2]\n            ],\n            start: [1,1,1],\n            middle: [1,1,1,1,1]\n        }\n    });\n\n    encodings.ean8 = encodings.ean13.extend({\n        initValue: function(value, width, height) {\n            var that = this;\n            if (value.length != 7 || /\\D/.test(value)) {\n                throw new Error('Invalid value provided');\n            }\n            that.value = value;\n            that.options.height = height;\n            that.checksum = that.calculateChecksum(that.value);\n            that.leftPart = that.value.substr(0,4);\n            that.rightPart = that.value.substr(4) + that.checksum;\n            that.pattern = [];\n            that.baseUnit = width / (67 + that.quietZoneLength);\n        }\n    });\n\n    var Barcode = Widget.extend({\n        init: function(element, options) {\n             var that = this;\n             Widget.fn.init.call(that, element, options);\n             that.element = $(element);\n             that.wrapper = that.element;\n             that.element.addClass(\"k-barcode\").css(\"display\", \"block\");\n             that.surfaceWrap = $(\"<div />\").css(\"position\", \"relative\").appendTo(this.element);\n             that.surface = draw.Surface.create(that.surfaceWrap, {\n                 type: that.options.renderAs\n             });\n             that._setOptions(options);\n             if (options && defined(options.value)) {\n                 that.redraw();\n             }\n        },\n\n        setOptions: function(options) {\n            this._setOptions(options);\n            this.redraw();\n        },\n\n        redraw: function() {\n            var size = this._getSize();\n\n            this.surface.clear();\n            this.surface.setSize({\n                width: size.width,\n                height: size.height\n            });\n\n            this.createVisual();\n            this.surface.draw(this.visual);\n        },\n\n        getSize: function() {\n            return kendo.dimensions(this.element);\n        },\n\n        _resize: function() {\n            this.redraw();\n        },\n\n        createVisual: function() {\n            this.visual = this._render();\n        },\n\n        _render: function() {\n            var that = this,\n                options = that.options,\n                value = options.value,\n                textOptions = options.text,\n                textMargin = dataviz.getSpacing(textOptions.margin),\n                size = that._getSize(),\n                border = options.border || {},\n                encoding = that.encoding,\n                contentBox = new Box2D(0, 0, size.width, size.height).unpad(border.width).unpad(options.padding),\n                barHeight = contentBox.height(),\n                result, textToDisplay,\n                textHeight;\n\n            var visual = new draw.Group();\n\n            that.contentBox = contentBox;\n            visual.append(that._getBackground(size));\n\n            if (textOptions.visible) {\n                textHeight = draw.util.measureText(value, { font: textOptions.font }).height;\n                barHeight -= textHeight + textMargin.top + textMargin.bottom;\n            }\n\n            result = encoding.encode(value, contentBox.width(), barHeight);\n\n            if (textOptions.visible) {\n                textToDisplay = value;\n                if (options.checksum && defined(encoding.checksum)) {\n                    textToDisplay += \" \" + encoding.checksum;\n                }\n\n                visual.append(that._getText(textToDisplay));\n            }\n\n            that.barHeight = barHeight;\n            this._bandsGroup = this._getBands(result.pattern, result.baseUnit);\n            visual.append(this._bandsGroup);\n\n            return visual;\n        },\n\n        exportVisual: function() {\n            return this._render();\n        },\n\n        _getSize: function() {\n            var that = this,\n                element = that.element,\n                size = new geom.Size(DEFAULT_WIDTH, DEFAULT_HEIGHT);\n\n            if (element.width() > 0) {\n                size.width = element.width();\n            }\n            if (element.height() > 0) {\n                size.height = element.height();\n            }\n            if (that.options.width) {\n               size.width = that.options.width;\n            }\n            if (that.options.height) {\n               size.height = that.options.height;\n            }\n\n            return size;\n        },\n\n        value: function(value) {\n            var that = this;\n            if (!defined(value)) {\n                return that.options.value;\n            }\n            that.options.value = value + '';\n            that.redraw();\n        },\n\n        _getBands: function(pattern, baseUnit) {\n            var that = this,\n                contentBox = that.contentBox,\n                position = contentBox.x1,\n                step,\n                item;\n\n            var group = new draw.Group();\n            for (var i = 0; i < pattern.length; i++) {\n                item = isPlainObject(pattern[i]) ? pattern[i] : {\n                    width: pattern[i],\n                    y1: 0,\n                    y2: that.barHeight\n                };\n\n                step = item.width * baseUnit;\n\n                if (i % 2) {\n                    var rect = geom.Rect.fromPoints(\n                        new geom.Point(position, item.y1 + contentBox.y1),\n                        new geom.Point(position + step, item.y2 + contentBox.y1)\n                    );\n\n                    var path = draw.Path.fromRect(rect, {\n                        fill: {\n                            color: that.options.color\n                        },\n                        stroke: null\n                    });\n\n                    group.append(path);\n                }\n\n                position += step;\n            }\n\n            return group;\n        },\n\n        _getBackground: function(size) {\n            var that = this,\n                options = that.options,\n                border = options.border || {};\n\n            var box = new Box2D(0,0, size.width, size.height).unpad(border.width / 2);\n            var path = draw.Path.fromRect(box.toRect(), {\n                fill: {\n                    color: options.background\n                },\n                stroke: {\n                    color: border.width ? border.color : \"\",\n                    width: border.width,\n                    dashType: border.dashType\n                }\n            });\n\n            return path;\n        },\n\n        _getText: function(value) {\n            var that = this,\n                textOptions = that.options.text,\n                text = that._textbox = new TextBox(value, {\n                    font: textOptions.font,\n                    color: textOptions.color,\n                    align: \"center\",\n                    vAlign: \"bottom\",\n                    margin: textOptions.margin\n                });\n\n            text.reflow(that.contentBox);\n            text.renderVisual();\n\n            return text.visual;\n        },\n\n        _setOptions: function(options) {\n            var that = this;\n            that.type = (options.type || that.options.type).toLowerCase();\n\n            if (that.type == \"upca\") { //extend instead\n                that.type = \"ean13\";\n                options.value = '0' + options.value;\n            }\n\n            if (that.type == \"upce\") {\n                that.type = \"ean8\";\n                options.value = '0' + options.value;\n            }\n\n            if (!encodings[that.type]) {\n                throw new Error('Encoding ' + that.type + 'is not supported.');\n            }\n\n            that.encoding = new encodings[that.type]();\n\n            that.options = extend(true, that.options, options);\n        },\n\n        options: {\n            name: \"Barcode\",\n            renderAs: \"svg\",\n            value: \"\",\n            type: \"code39\",\n            checksum: false,\n            width: 0,\n            height: 0,\n            color: \"black\",\n            background: \"white\",\n            text: {\n                visible: true,\n                font: \"16px Consolas, Monaco, Sans Mono, monospace, sans-serif\",\n                color: \"black\",\n                margin: {\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0\n                }\n            },\n            border: {\n                width: 0,\n                dashType: \"solid\",\n                color: \"black\"\n            },\n            padding: {\n                top: 0,\n                bottom: 0,\n                left: 0,\n                right: 0\n            }\n        }\n    });\n    dataviz.ExportMixin.extend(Barcode.fn);\n\n    dataviz.ui.plugin(Barcode);\n\n    kendo.deepExtend(dataviz, {\n        encodings: encodings,\n        Encoding: Encoding\n    });\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n\n"],"names":["define","__meta__","id","name","category","description","depends","$","window","kendo","jQuery","undefined","Widget","ui","extend","deepExtend","inArray","isPlainObject","draw","drawing","geom","geometry","util","defined","dataviz","Box2D","TextBox","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_QUIETZONE_LENGTH","numberRegex","alphanumericRegex","InvalidCharacterErrorTemplate","getNext","value","index","count","substring","Encoding","Class","init","options","this","setOptions","that","quietZoneLength","addQuietZone","encode","width","height","initValue","addData","baseUnit","pattern","addCheckSum","push","invalidCharacterError","character","Error","format","encodings","code39Base","minBaseUnitLength","addStart","idx","length","addCharacter","charAt","pushCheckSum","addStop","prepareValues","charData","characterMap","addBase","code39ExtendedBase","charCodeAt","addExtended","code","patterns","i","extendedMappings","call","j","dataLength","shiftCharacters","String","fromCharCode","result","dataCharacter","specialAsciiCodes","Math","floor","0","64","96","127","shiftValuesAsciiCodes","39","40","41","42","+","/","%","state128","code39","checkSumMod","minRatio","maxRatio","gapWidth","splitCharacter","patternString","minBaseUnit","ratio","minHeight","max","getBaseUnit","parseFloat","toFixed","minWidth","ceil","getBaseWidth","concat","replace","split","characterLength","addPattern","START","addCharacterGap","patternMappings","b","w","B","W","1","2","3","4","5","6","7","8","9","A","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","X","Y","Z","-","."," ","code39extended","SHIFT0","SHIFT1","SHIFT2","SHIFT3","code93","cCheckSumTotal","kCheckSumTotal","values","setBaseUnit","checkSumLength","TERMINATION_BAR","checkValues","_getCheckValues","checksum","join","_findCharacterByValue","wightedSum","cValue","kValue","weightedValue","total","parseInt","code93extended","encoding","is","move","pushState","state128AB","FNC4","states","_initMoves","isCode","encodingState","_moves","maxLength","numberMatch","substr","match","indexOf","getValue","_moveFNC","shiftKey","_shiftState","_moveState","fnc","previousState","key","SHIFT","shifted","MOVE","states128","code128Base","next4","test","dependentStates","_initSubStates","subState","_getSubState","_initSubState","state","_pushStart","pushData","subStates","_getAll","FNC1","startState","startAI","endAI","regexSeparators","RegExp","current","nextStart","separatorLength","getBySeparator","getByLength","ai","validate","type","min","getAI","unsupportedAIError","start","end","applicationIdentifiers","multiKey","ids","ranges","22","402","7004","242","8020","703","8008","253","8003","fn","_initStates","checkSum","totalUnits","position","getNextState","temp","STOP","toString","msiBase","code128a","code128b","code128c","code128","startStopLength","checkSumFunction","checkSums","checkSumType","Modulo10","odd","evenSum","oddSum","Modulo11","weightedSum","mod","weight","checkValue","Modulo11Modulo10","mod11Value","Modulo10Modulo10","mod10Value","Barcode","msimod10","msimod11","msimod1110","msimod1010","code11","kCheckSumMinLength","DASH_VALUE","DASH","getWeightedSum","isNaN","postnet","VALID_CODE_LENGTHS","DIGIT_SEPARATOR","baseHeight","pop","y1","y2","ean13","calculateChecksum","leftKey","leftPart","rightPart","addPieces","addSide","middle","keyTable","Array","prototype","slice","digits","reverse","arrToAdd","limitedHeight","even","ean8","element","wrapper","addClass","css","surfaceWrap","appendTo","surface","Surface","create","renderAs","_setOptions","redraw","size","_getSize","clear","setSize","createVisual","visual","getSize","dimensions","_resize","_render","textOptions","text","textMargin","getSpacing","margin","border","contentBox","unpad","padding","barHeight","textToDisplay","textHeight","Group","append","_getBackground","visible","measureText","font","top","bottom","_getText","_bandsGroup","_getBands","exportVisual","Size","x1","step","item","group","rect","Rect","fromPoints","Point","path","Path","fromRect","fill","color","stroke","box","toRect","background","dashType","_textbox","align","vAlign","reflow","renderVisual","toLowerCase","left","right","ExportMixin","plugin","amd","a1","a2","a3"],"mappings":"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"}