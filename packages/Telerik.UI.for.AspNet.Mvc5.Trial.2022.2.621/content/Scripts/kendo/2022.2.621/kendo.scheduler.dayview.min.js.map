{"version":3,"file":"kendo.scheduler.dayview.min.js","sources":["kendo.scheduler.dayview.js"],"sourcesContent":["(function(f, define) {\n    define('kendo.scheduler.dayview',[ \"kendo.scheduler.view\" ], f);\n})(function() {\n\nvar __meta__ = { // jshint ignore:line\n    id: \"scheduler.dayview\",\n    name: \"Scheduler Day View\",\n    category: \"web\",\n    description: \"The Scheduler Day View\",\n    depends: [ \"scheduler.view\" ],\n    hidden: true\n};\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        setTime = kendo.date.setTime,\n        SchedulerView = ui.SchedulerView,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        extend = $.extend,\n        getDate = kendo.date.getDate,\n        MS_PER_MINUTE = kendo.date.MS_PER_MINUTE,\n        MS_PER_DAY = kendo.date.MS_PER_DAY,\n        CURRENT_TIME_MARKER_CLASS = \"k-current-time\",\n        CURRENT_TIME_MARKER_ARROW_CLASS = \"k-current-time-arrow\",\n        INVERSE_COLOR_CLASS = \"k-event-inverse\",\n        BORDER_SIZE_COEFF = 0.8666,\n        getMilliseconds = kendo.date.getMilliseconds,\n        NS = \".kendoMultiDayView\";\n\n    var DAY_VIEW_EVENT_TEMPLATE = kendo.template('<div title=\"(#=kendo.format(\"{0:t} - {1:t}\", start, end)#): #=title.replace(/\"/g,\"&\\\\#34;\")#\">' +\n                    '<div class=\"k-event-template k-event-time\">#:kendo.format(\"{0:t} - {1:t}\", start, end)#</div>' +\n                    '<div class=\"k-event-template\">${title}</div>' +\n                '</div>'),\n        DAY_VIEW_ALL_DAY_EVENT_TEMPLATE = kendo.template('<div title=\"(#=kendo.format(\"{0:t}\", start)#): #=title.replace(/\"/g,\"&\\\\#34;\")#\">' +\n                    '<div class=\"k-event-template\">${title}</div>' +\n                '</div>'),\n        DATA_HEADER_TEMPLATE = kendo.template(\"#var dateString = isMobile ? kendo.toString(date,'ddd')[0] : kendo.toString(date,'ddd M/dd'); #\" +\n                \"<span class='k-link k-nav-day'>#=dateString#</span>\"),\n        ALLDAY_EVENT_WRAPPER_STRING = '<div role=\"button\" ' +\n                'aria-label=\"#: ariaLabel #\" ' +\n                'data-#=ns#uid=\"#=uid#\"' +\n                '#if (resources[0]) { #' +\n                    'style=\"background-color:#=resources[0].color#; border-color: #=resources[0].color#\"' +\n                    'class=\"k-event\"' +\n                '#} else {#' +\n                    'class=\"k-event\"' +\n                '#}#' +\n                '>' +\n                '<span class=\"k-event-actions\">' +\n                    '# if(data.tail || data.middle) {#' +\n                        '<span class=\"k-icon k-i-arrow-60-left\"></span>' +\n                    '#}#' +\n                    '# if(data.isException()) {#' +\n                        '<span class=\"k-icon k-i-non-recurrence\"></span>' +\n                    '# } else if(data.isRecurring()) {#' +\n                        '<span class=\"k-icon k-i-reload\"></span>' +\n                    '# } #' +\n                '</span>' +\n                '{0}' +\n                '<span class=\"k-event-actions\">' +\n                    '#if (showDelete) {#' +\n                        '<a href=\"\\\\#\" class=\"k-link k-event-delete\" title=\"${data.messages.destroy}\" aria-label=\"${data.messages.destroy}\"><span class=\"k-icon k-i-close\"></span></a>' +\n                    '#}#' +\n                    '# if(data.head || data.middle) {#' +\n                        '<span class=\"k-icon k-i-arrow-60-right\"></span>' +\n                    '#}#' +\n                '</span>' +\n                '#if(resizable && !singleDay && !data.tail && !data.middle){#' +\n                '<span class=\"k-resize-handle k-resize-w\"></span>' +\n                '#}#' +\n                '#if(resizable && !singleDay && !data.head && !data.middle){#' +\n                '<span class=\"k-resize-handle k-resize-e\"></span>' +\n                '#}#' +\n                '</div>',\n        EVENT_WRAPPER_STRING = '<div role=\"button\" ' +\n                'aria-label=\"#: ariaLabel #\" ' +\n                'data-#=ns#uid=\"#=uid#\" ' +\n                '#if (resources[0]) { #' +\n                    'style=\"background-color:#=resources[0].color #; border-color: #=resources[0].color#\"' +\n                    'class=\"k-event\"' +\n                '#} else {#' +\n                    'class=\"k-event\"' +\n                '#}#' +\n                '>' +\n                 '<span class=\"k-event-actions\">' +\n                    '# if(data.isException()) {#' +\n                        '<span class=\"k-icon k-i-non-recurrence\"></span>' +\n                    '# } else if(data.isRecurring()) {#' +\n                        '<span class=\"k-icon k-i-reload\"></span>' +\n                    '# } #' +\n                '</span>' +\n                '{0}' +\n                '<span class=\"k-event-actions\">' +\n                    '#if (showDelete) {#' +\n                        '<a href=\"\\\\#\" class=\"k-link k-event-delete\" title=\"${data.messages.destroy}\" aria-label=\"${data.messages.destroy}\"><span class=\"k-icon k-i-close\"></span></a>' +\n                    '#}#' +\n                '</span>' +\n                '<span class=\"k-event-top-actions\">' +\n                    '# if(data.tail || data.middle) {#' +\n                    '<span class=\"k-icon k-i-arrow-60-up\"></span>' +\n                    '# } #' +\n                '</span>' +\n                '<span class=\"k-event-bottom-actions\">' +\n                    '# if(data.head || data.middle) {#' +\n                        '<span class=\"k-icon k-i-arrow-60-down\"></span>' +\n                    '# } #' +\n                '</span>' +\n                '# if(resizable && !data.tail && !data.middle) {#' +\n                '<span class=\"k-resize-handle k-resize-n\"></span>' +\n                '# } #' +\n                '# if(resizable && !data.head && !data.middle) {#' +\n                    '<span class=\"k-resize-handle k-resize-s\"></span>' +\n                '# } #' +\n                '</div>';\n\n    function toInvariantTime(date) {\n        var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n        setTime(staticDate, getMilliseconds(date));\n        return staticDate;\n    }\n\n    function isInDateRange(value, min, max) {\n        return value >= min && value <= max;\n    }\n\n    function isInTimeRange(value, min, max, overlaps) {\n        overlaps = overlaps ? value <= max : value < max;\n        return value > min && overlaps;\n    }\n\n    function addContinuousEvent(group, range, element, isAllDay) {\n        var events = group._continuousEvents;\n        var lastEvent = events[events.length - 1];\n        var startDate = getDate(range.start.startDate()).getTime();\n\n        //this handles all day event which is over multiple slots but starts\n        //after one of the time events\n        if (isAllDay && lastEvent &&\n            getDate(lastEvent.start.startDate()).getTime() == startDate) {\n\n                var idx = events.length - 1;\n                for ( ; idx > -1; idx --) {\n                    if (events[idx].isAllDay ||\n                        getDate(events[idx].start.startDate()).getTime() < startDate) {\n                            break;\n                        }\n                }\n\n                events.splice(idx + 1, 0, {\n                    element: element,\n                    isAllDay: true,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    start: range.start,\n                    end: range.end\n                });\n            } else {\n                events.push({\n                    element: element,\n                    isAllDay: isAllDay,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    start: range.start,\n                    end: range.end\n                });\n            }\n    }\n\n    function getWorkDays(options) {\n        if (options.workDays && options.workDays.length) {\n            return options.workDays;\n        }\n\n        var workDays = [];\n        var dayIndex = options.workWeekStart % 7;\n        var workWeekEnd = Math.abs(options.workWeekEnd % 7);\n\n        workDays.push(dayIndex);\n\n        while (workWeekEnd != dayIndex) {\n            if (dayIndex > 6 ) {\n                dayIndex -= 7;\n            } else {\n                dayIndex++;\n            }\n            workDays.push(dayIndex);\n        }\n        return workDays;\n    }\n\n    var MultiDayView = SchedulerView.extend({\n        init: function(element, options) {\n            var that = this;\n\n            SchedulerView.fn.init.call(that, element, options);\n\n            that.title = that.options.title || that.options.name;\n\n            that._workDays = getWorkDays(that.options);\n\n            that._templates();\n\n            that._editable();\n\n            that.calculateDateRange();\n\n            that._groups();\n\n            that._currentTime(true);\n        },\n\n        _currentTimeMarkerUpdater: function() {\n            this._updateCurrentTimeMarker(new Date());\n        },\n\n        _updateCurrentTimeMarker: function(currentTime) {\n            var options = this.options,\n                currentTimeMarkers, currentContentMarkers, timesTableMarkerWidth, position,\n                elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n\n            if (options.currentTimeMarker.useLocalTimezone === false) {\n                var timezone = options.dataSource.options.schema.timezone;\n\n                if (options.dataSource && timezone) {\n                   var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                   currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                }\n            }\n\n            currentTimeMarkers = this.times.find(\".\" + CURRENT_TIME_MARKER_CLASS);\n            currentContentMarkers = this.content.find(\".\" + CURRENT_TIME_MARKER_CLASS);\n\n            var groupsCount = !options.group || options.group.orientation == \"horizontal\" ? 1 : this.groups.length;\n            var firstTimesCell = this.times.find(\"tr\").first().find(\"th\").first();\n            var lastTimesCell = this.times.find(\"tr\").first().find(\"th\").last();\n\n            if (firstTimesCell.length > 0 && lastTimesCell.length > 0) {\n                if (this._isRtl) {\n                    position = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                } else {\n                    position = lastTimesCell.position().left;\n                }\n            }\n\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                var currentGroup = this.groups[groupIndex];\n\n                if (!currentGroup) {\n                    return;\n                }\n\n                var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n\n                if (ranges.length === 0) {\n                    return;\n                }\n\n                var collection = ranges[0].collection;\n                var slotElement = collection.slotByStartDate(currentTime);\n\n                if (slotElement) {\n                    var timesTableMarker = currentTimeMarkers[groupIndex] ? currentTimeMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.times);\n                    var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n\n                    var timesTableMarkerCss = {};\n\n                    if (this._isRtl) {\n                        timesTableMarkerCss.right = position;\n                        timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-left\");\n                    } else {\n                        timesTableMarkerCss.left = position;\n                        timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-right\");\n                    }\n\n                    if (!timesTableMarkerWidth) {\n                        timesTableMarkerWidth = (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2);\n                    }\n\n                    timesTableMarkerCss.top = markerTopPosition - timesTableMarkerWidth;\n\n                    timesTableMarker.css(timesTableMarkerCss);\n\n                    var contentMarker = currentContentMarkers[groupIndex] ? currentContentMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.content);\n\n                    contentMarker.css({\n                        top: markerTopPosition,\n                        height: \"1px\",\n                        right: 0,\n                        left: 0\n                    });\n                }\n            }\n        },\n\n        _currentTime: function(setUpdateTimer) {\n            var that = this;\n            var markerOptions = that.options.currentTimeMarker;\n\n            if (markerOptions !== false && markerOptions.updateInterval !== undefined) {\n                that._currentTimeMarkerUpdater();\n\n                if (setUpdateTimer) {\n                    that._currentTimeUpdateTimer = setInterval(this._currentTimeMarkerUpdater.bind(that), markerOptions.updateInterval);\n                }\n            }\n        },\n\n        _updateResizeHint: function(event, groupIndex, startTime, endTime) {\n            var multiday;\n\n            if (this.options.enforceAllDaySlot) {\n                multiday = event.isMultiDay();\n            } else {\n                multiday = event.isAllDay;\n            }\n\n            var group = this.groups[groupIndex];\n\n            var ranges = group.ranges(startTime, endTime, multiday, event.isAllDay);\n            var width, height, top, hint;\n\n            this._removeResizeHint();\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                var range = ranges[rangeIndex];\n                var start = range.startSlot();\n\n                if (this._isGroupedByDate() && multiday) {\n                    for (var slotIdx = start.index; slotIdx <= range.end.index; slotIdx++) {\n                        var slot = range.collection._slots[slotIdx];\n                        width = slot.offsetWidth;\n                        height = slot.clientHeight;\n                        top = slot.offsetTop;\n\n                        hint = SchedulerView.fn._createResizeHint.call(this,\n                            slot.offsetLeft,\n                            top,\n                            width,\n                            height\n                        );\n\n                        this._resizeHint = this._resizeHint.add(hint);\n                    }\n                } else {\n                    width = start.offsetWidth;\n                    height = start.clientHeight;\n                    top = start.offsetTop;\n\n                    if (multiday) {\n                        width = range.innerWidth();\n                    } else {\n                        var rect = range.outerRect(startTime, endTime, this.options.snap);\n                        top = rect.top;\n                        height = rect.bottom - rect.top;\n                    }\n\n                    hint = SchedulerView.fn._createResizeHint.call(this,\n                        start.offsetLeft,\n                        top,\n                        width,\n                        height\n                    );\n\n                   this._resizeHint = this._resizeHint.add(hint);\n                }\n            }\n\n            var format = \"t\";\n            var container = this.content;\n\n            if (multiday) {\n                format = \"M/dd\";\n                container = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div\");\n                if (!container.length) {\n                    container = this.content;\n                }\n            }\n\n            this._resizeHint.appendTo(container);\n\n            this._resizeHint.find(\".k-label-top,.k-label-bottom\").text(\"\");\n\n            this._resizeHint.first().addClass(\"k-first\").find(\".k-label-top\").text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n\n            this._resizeHint.last().addClass(\"k-last\").find(\".k-label-bottom\").text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n        },\n\n        _updateMoveHint: function(event, groupIndex, distance) {\n            var multiday;\n\n            if (this.options.enforceAllDaySlot) {\n                multiday = event.isMultiDay();\n            } else {\n                multiday = event.isAllDay;\n            }\n\n            var group = this.groups[groupIndex];\n\n            var start = kendo.date.toUtcTime(event.start) + distance;\n\n            var end = start + event.duration();\n\n            var ranges = group.ranges(start, end, multiday, event.isAllDay);\n\n            start = kendo.timezone.toLocalDate(start);\n\n            end = kendo.timezone.toLocalDate(end);\n\n            this._removeMoveHint(event.uid);\n\n            if (!multiday &&\n                getMilliseconds(end) < getMilliseconds(this.startTime()) &&\n                (end < this._end().getTime()) &&\n                getMilliseconds(end) !== 0 &&\n                ranges.length > 1) {\n                    ranges.pop();\n            }\n\n            var eventHint = $();\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                var range = ranges[rangeIndex];\n                var startSlot = range.start;\n                var hint;\n                var css = {\n                    left: startSlot.offsetLeft + 2,\n                    top: startSlot.offsetTop\n                };\n\n                if (this._isGroupedByDate() && multiday) {\n                    for (var slotIdx = startSlot.index; slotIdx <= range.end.index; slotIdx++) {\n                        var slot = range.collection._slots[slotIdx];\n\n                        css.left = this._isRtl ? slot.clientWidth * 0.1 + slot.offsetLeft + 2 : slot.offsetLeft + 2;\n                        css.height = slot.offsetHeight;\n                        css.width = slot.clientWidth * 0.9 - 2;\n\n                        hint = this._createEventElement(event.clone({ start: start, end: end }), !multiday);\n\n                        if (event.inverseColor) {\n                            hint.addClass(INVERSE_COLOR_CLASS);\n                        }\n\n                        this._appendMoveHint(hint, css);\n                        eventHint = eventHint.add(hint);\n                    }\n                } else {\n                    if (this._isRtl) {\n                       css.left = startSlot.clientWidth * 0.1 + startSlot.offsetLeft + 2;\n                    }\n\n                    if (multiday) {\n                        css.width = range.innerWidth() - 2;\n                    } else {\n                        var rect = range.outerRect(start, end, this.options.snap);\n                        css.top = rect.top;\n                        css.height = rect.bottom - rect.top;\n                        css.width = startSlot.clientWidth * 0.9 - 2;\n                    }\n\n                    hint = this._createEventElement(event.clone({ start: start, end: end }), !multiday);\n\n                    if (event.inverseColor) {\n                        hint.addClass(INVERSE_COLOR_CLASS);\n                    }\n\n                    this._appendMoveHint(hint, css);\n                    eventHint = eventHint.add(hint);\n                }\n            }\n\n            var content = this.content;\n\n            if (multiday) {\n                content = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div\");\n                if (!content.length) {\n                    content = this.content;\n                }\n            }\n\n            eventHint.appendTo(content);\n        },\n\n        _appendMoveHint: function(hint, css) {\n            hint.addClass(\"k-event-drag-hint\");\n\n            hint.css(css);\n\n            this._moveHint = this._moveHint.add(hint);\n       },\n\n       _slotByPosition: function(x, y) {\n           var slot, offset;\n\n           if (this._isVerticallyGrouped()) {\n               offset = this.content.offset();\n               y += this.content[0].scrollTop;\n               x += this.content[0].scrollLeft;\n           } else {\n               offset = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day)\").find(\">div\").offset();\n           }\n\n           if (offset) {\n               x -= offset.left;\n               y -= offset.top;\n           }\n\n           x = Math.ceil(x);\n           y = Math.ceil(y);\n\n           var group;\n           var groupIndex;\n\n           for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                group = this.groups[groupIndex];\n\n                slot = group.daySlotByPosition(x, y, this._isGroupedByDate());\n\n                if (slot) {\n                    return slot;\n                }\n           }\n\n           if (offset) {\n               x += offset.left;\n               y += offset.top;\n           }\n\n           offset = this.content.offset();\n\n           x -= offset.left;\n           y -= offset.top;\n\n           if (!this._isVerticallyGrouped()) {\n               y += this.content[0].scrollTop;\n               x += this.content[0].scrollLeft;\n           }\n\n           x = Math.ceil(x);\n           y = Math.ceil(y);\n\n           for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                group = this.groups[groupIndex];\n\n                slot = group.timeSlotByPosition(x, y);\n\n                if (slot) {\n                    return slot;\n                }\n           }\n\n           return null;\n       },\n\n       _groupCount: function() {\n            var resources = this.groupedResources;\n            var byDate = this._isGroupedByDate();\n\n            if (resources.length) {\n                if (this._groupOrientation() === \"vertical\") {\n                    if (byDate) {\n                        return this._columnCountForLevel(resources.length - 1);\n                    } else {\n                        return this._rowCountForLevel(resources.length - 1);\n                    }\n                } else {\n                    if (byDate) {\n                        return this._columnCountForLevel(resources.length) / this._columnCountForLevel(0);\n                    } else {\n                          return this._columnCountForLevel(resources.length) / this._columnOffsetForResource(resources.length);\n                    }\n                }\n            }\n            return 1;\n        },\n\n        _columnCountInResourceView: function() {\n            var resources = this.groupedResources;\n            var byDate = this._isGroupedByDate();\n\n            if (!resources.length || this._isVerticallyGrouped()) {\n                if (byDate) {\n                     return this._rowCountForLevel(0);\n                } else {\n                     return this._columnCountForLevel(0);\n                }\n            }\n\n            if (byDate) {\n                return this._columnCountForLevel(0);\n            } else {\n                return this._columnOffsetForResource(resources.length);\n            }\n        },\n\n        _timeSlotGroups: function(groupCount, columnCount) {\n            var interval = this._timeSlotInterval();\n            var verticalViews = groupCount;\n            var byDate = this._isGroupedByDate();\n            var tableRows = this.content.find(\"tr:not(.k-scheduler-header-all-day)\");\n            var group, time, rowIndex, cellIndex;\n            var rowCount = tableRows.length;\n\n            if (this._isVerticallyGrouped()) {\n                if (byDate) {\n                    verticalViews = columnCount;\n                }\n                rowCount = Math.floor(rowCount / verticalViews);\n            }\n\n            for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                var rowMultiplier = 0;\n                var cellMultiplier = 0;\n\n                if (this._isVerticallyGrouped()) {\n                    rowMultiplier = groupIndex;\n                } else {\n                    cellMultiplier = groupIndex;\n                }\n\n                rowIndex = rowMultiplier * rowCount;\n\n              while (rowIndex < (rowMultiplier + 1) * rowCount) {\n                    var cells = tableRows[rowIndex].children;\n\n                    if (rowIndex % rowCount === 0) {\n                        time = getMilliseconds(new Date(+this.startTime()));\n                    }\n\n                    var timeIndex = 0;\n                    if (byDate) {\n                        if (this._isVerticallyGrouped()) {\n                            for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                group = this.groups[cellIndex];\n                                this._addTimeSlotGroup(group, cells, cellIndex, time, interval, groupIndex);\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                timeIndex++;\n                            }\n                        }\n                    } else {\n                        group = this.groups[groupIndex];\n                        for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n\n                            this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                             timeIndex++;\n                        }\n                    }\n\n                    time += interval;\n                    rowIndex ++;\n                }\n            }\n        },\n\n        _addTimeSlotGroup: function(group, cells, cellIndex, time, interval, timeIndex) {\n              var cell = cells[cellIndex];\n              var collection = group.getTimeSlotCollection(timeIndex);\n              var currentDate = this._dates[timeIndex];\n              if (!currentDate || !cell) {\n                  return;\n              }\n              var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n              var start = currentTime + time;\n              var end = start + interval;\n\n              collection.addTimeSlot(cell, start, end);\n        },\n\n         _addDaySlotGroup: function(collection, cells, cellIndex, columnCount, cellCount) {\n                var cell = cells[cellIndex];\n                var start = this._dates[cellCount];\n                if (!start) {\n                    return;\n                }\n                var currentTime = Date.UTC(start.getFullYear(), start.getMonth(), start.getDate());\n\n                collection.addDaySlot(cell, currentTime, currentTime + kendo.date.MS_PER_DAY);\n        },\n\n        _daySlotGroups: function(groupCount, columnCount) {\n            var tableRows, cellIndex;\n            var verticalViews = groupCount;\n            var byDate = this._isGroupedByDate();\n\n            if (this._isVerticallyGrouped()) {\n                if (byDate) {\n                    verticalViews = columnCount;\n                }\n                tableRows = this.element.find(\".k-scheduler-header-all-day\");\n            } else {\n                tableRows = this.element.find(\".k-scheduler-header-all-day tr\");\n            }\n\n            for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                var rowMultiplier = 0;\n                var group, collection;\n\n                if (this._isVerticallyGrouped()) {\n                    rowMultiplier = groupIndex;\n                }\n\n                var cells = tableRows[rowMultiplier].children;\n                var cellMultiplier = 0;\n\n                if (!this._isVerticallyGrouped()) {\n                    cellMultiplier = groupIndex;\n                }\n\n                var cellCount = 0;\n                if (byDate) {\n                    if (this._isVerticallyGrouped()) {\n                        for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                            group = this.groups[cellIndex];\n                            collection = group.getDaySlotCollection(0);\n                            this._addDaySlotGroup(collection, cells, cellIndex, columnCount, groupIndex);\n                        }\n                    } else {\n                        group = this.groups[groupIndex];\n                        collection = group.getDaySlotCollection(0);\n                        for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                            this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                            cellCount++;\n                        }\n                    }\n                } else {\n                    group = this.groups[groupIndex];\n                    collection = group.getDaySlotCollection(0);\n                    for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n\n                        this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                        cellCount++;\n                    }\n                }\n            }\n        },\n\n        _groups: function() {\n            var groupCount = this._groupCount();\n            var columnCount = this._columnCountInResourceView();\n\n            this.groups = [];\n\n            for (var idx = 0; idx < groupCount; idx++) {\n                var view = this._addResourceView(idx);\n\n                for (var columnIndex = 0; columnIndex < columnCount; columnIndex++) {\n                    if (this._dates[columnIndex]) {\n                        view.addTimeSlotCollection(this._dates[columnIndex], kendo.date.addDays(this._dates[columnIndex], 1));\n                    }\n                }\n\n                if (this.options.allDaySlot) {\n                    view.addDaySlotCollection(this._dates[0], kendo.date.addDays(this._dates[this._dates.length - 1], 1));\n                }\n            }\n\n            this._timeSlotGroups(groupCount, columnCount);\n\n            if (this.options.allDaySlot) {\n                this._daySlotGroups(groupCount, columnCount);\n            }\n        },\n\n        options: {\n            name: \"MultiDayView\",\n            selectedDateFormat: \"{0:D}\",\n            selectedShortDateFormat: \"{0:d}\",\n            selectedMobileDateFormat: \"{0:MMM} {0:dd} - {1:dd}\",\n            allDaySlot: true,\n            showWorkHours: false,\n            title: \"\",\n            startTime: kendo.date.today(),\n            endTime: kendo.date.today(),\n            minorTickCount: 2,\n            majorTick: 60,\n            majorTimeHeaderTemplate: \"<span>#=kendo.toString(date, 't')#</span>\",\n            minorTimeHeaderTemplate: \"&\\\\#8203;\",\n            groupHeaderTemplate: \"#=text#\",\n            slotTemplate: \"&nbsp;\",\n            allDaySlotTemplate: \"&nbsp;\",\n            eventTemplate: DAY_VIEW_EVENT_TEMPLATE,\n            allDayEventTemplate: DAY_VIEW_ALL_DAY_EVENT_TEMPLATE,\n            dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n            editable: true,\n            workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n            workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n            workWeekStart: 1,\n            workWeekEnd: 5,\n            footer: {\n                command: \"workDay\"\n            },\n            messages: {\n                allDay: \"all day\",\n                showFullDay: \"Show full day\",\n                showWorkDay: \"Show business hours\"\n            },\n            currentTimeMarker: {\n                 updateInterval: 10000,\n                 useLocalTimezone: true\n            },\n            // a hidden option that provides us a fallback to the previous behaviour\n            // e.g. all events of 24 hours or more will be rendered in the allDaySlot\n            enforceAllDaySlot: false\n        },\n\n        events: [\"remove\", \"add\", \"edit\"],\n\n        _templates: function() {\n            var options = this.options,\n                settings = extend({}, kendo.Template, options.templateSettings);\n\n            this.eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_STRING);\n            this.allDayEventTemplate = this._eventTmpl(options.allDayEventTemplate, ALLDAY_EVENT_WRAPPER_STRING);\n\n            this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n            this.minorTimeHeaderTemplate = kendo.template(options.minorTimeHeaderTemplate, settings);\n            this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n            this.slotTemplate = kendo.template(options.slotTemplate, settings);\n            this.allDaySlotTemplate = kendo.template(options.allDaySlotTemplate, settings);\n            this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n        },\n\n        _editable: function() {\n            if (this.options.editable) {\n                if (this._isMobile()) {\n                    this._touchEditable();\n                } else {\n                    this._mouseEditable();\n                }\n            }\n        },\n\n        _mouseEditable: function() {\n            var that = this;\n            that.element.on(\"click\" + NS, \".k-event a:has(.k-i-close)\", function(e) {\n                that.trigger(\"remove\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                e.preventDefault();\n            });\n\n            if (that.options.editable.create !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-scheduler-content > table td\", function(e) {\n                    if (!$(this).parent().hasClass(\"k-scheduler-header-all-day\")) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                        }\n\n                        e.preventDefault();\n                    }\n                }).on(\"dblclick\" + NS, \".k-scheduler-header-all-day td\", function(e) {\n                    var slot = that._slotByPosition(e.pageX, e.pageY);\n                    if (slot) {\n                        var resourceInfo = that._resourceBySlot(slot);\n                        that.trigger(\"add\", { eventInfo: extend({}, { isAllDay: true, start: kendo.date.getDate(slot.startDate()), end: kendo.date.getDate(slot.startDate()) }, resourceInfo) });\n                    }\n                    e.preventDefault();\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-event\", function(e) {\n                    that.trigger(\"edit\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                    e.preventDefault();\n                });\n            }\n        },\n\n        _touchEditable: function() {\n            var that = this;\n            var threshold = 0;\n\n            if (kendo.support.mobileOS.android) {\n                threshold = 5;\n            }\n\n            if (that.options.editable.create !== false) {\n                that._addUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    filter: \".k-scheduler-content td\",\n                    useClickAsTap: !kendo.support.browser.edge,\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        if (!$(e.target).parent().hasClass(\"k-scheduler-header-all-day\")) {\n                            var x = e.x.location !== undefined ? e.x.location : e.x;\n                            var y = e.y.location !== undefined ? e.y.location : e.y;\n                            var slot = that._slotByPosition(x, y);\n\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    }\n                });\n\n                that._allDayUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-scheduler-header-all-day td\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var x = e.x.location !== undefined ? e.x.location : e.x;\n                        var y = e.y.location !== undefined ? e.y.location : e.y;\n                        var slot = that._slotByPosition(x, y);\n\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({}, { isAllDay: true, start: kendo.date.getDate(slot.startDate()), end: kendo.date.getDate(slot.startDate()) }, resourceInfo) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that._editUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-event\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var eventElement = $(e.target).closest(\".k-event\");\n                        var touchElement = $(e.touch.initialTouch);\n\n                        if (touchElement.hasClass(\"k-i-close\")) {\n                            that.trigger(\"remove\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                        } else if (!eventElement.hasClass(\"k-event-active\")) {\n                            that.trigger(\"edit\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n        },\n\n        _layout: function(dates) {\n            var columns = [];\n            var rows = [];\n            var options = this.options;\n            var that = this;\n            var byDate = that._isGroupedByDate();\n\n            for (var idx = 0; idx < dates.length; idx++) {\n                var column = {};\n\n                column.text = that.dateHeaderTemplate({ date: dates[idx], isMobile: that._isMobile() });\n\n                if (kendo.date.isToday(dates[idx])) {\n                    column.className = \"k-today\";\n                }\n\n                columns.push(column);\n            }\n\n            var resources = this.groupedResources;\n\n            if (options.allDaySlot) {\n                rows.push({\n                    text: options.messages.allDay, allDay: true,\n                    cellContent: function(idx) {\n                        var groupIndex = idx;\n\n                        idx = resources.length && that._groupOrientation() !== \"vertical\" ? idx % dates.length : idx;\n\n                        return that.allDaySlotTemplate({ date: dates[idx], resources: function() {\n                                return that._resourceBySlot({ groupIndex: groupIndex });\n                            }\n                        });\n                    }\n                });\n            }\n\n            this._forTimeRange(this.startTime(), this.endTime(), function(date, majorTick, middleRow, lastSlotRow) {\n                var template = majorTick ? that.majorTimeHeaderTemplate : that.minorTimeHeaderTemplate;\n\n                var row = {\n                    text: template({ date: date }),\n                    className: lastSlotRow ? \"k-slot-cell\" : \"\"\n                };\n\n                rows.push(row);\n            });\n\n\n            if (resources.length) {\n                if (this._groupOrientation() === \"vertical\") {\n                    if (byDate) {\n                        rows = this._createDateLayout(columns, rows);\n                        columns = this._createColumnsLayout(resources, null, this.groupHeaderTemplate);\n                    } else {\n                        rows = this._createRowsLayout(resources, rows, this.groupHeaderTemplate);\n                    }\n                } else {\n                      if (byDate) {\n                         columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                      } else {\n                         columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate);\n                      }\n                }\n            }\n\n            return {\n                columns: columns,\n                rows: rows\n            };\n        },\n\n        toggleFullDay: function() {\n            var options = this.options;\n\n            this.trigger(\"navigate\", { view: this.name || options.name, date: options.date, isWorkDay: !options.showWorkHours });\n        },\n\n        _footer: function() {\n            var options = this.options;\n\n            if (options.footer !== false) {\n                var html = '<div class=\"k-scheduler-footer k-toolbar\">';\n\n                var command = options.footer.command;\n\n                if (this._isMobile()) {\n                    html += '<span class=\"k-scheduler-today\"><a href=\"#\" tabindex=\"-1\" class=\"k-link\">';\n                    html += options.messages.today + '</a></span>';\n                }\n                if (command && command === \"workDay\") {\n                    if (this._isMobile()) {\n                        html += '<span class=\"k-scheduler-fullday\"><a href=\"#\" tabindex=\"-1\" class=\"k-link\">';\n                        html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></span>';\n                    } else {\n                        html += '<button type=\"button\" tabindex=\"-1\" class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-scheduler-fullday\">';\n                            html += '<span class=\"k-button-icon k-icon k-i-clock\"></span>';\n                            html += '<span class=\"k-button-text\">';\n                                html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay);\n                            html += '</span>';\n                        html += '</button>';\n                    }\n                }\n\n                html += \"</div>\";\n\n                this.footer = $(html).appendTo(this.element);\n\n                var that = this;\n\n                this.footer.on(\"click\" + NS, \".k-scheduler-fullday\", function(e) {\n                    e.preventDefault();\n                    that.toggleFullDay();\n                });\n\n                this.footer.on(\"click\" + NS, \".k-scheduler-today\", function(e) {\n                    e.preventDefault();\n                    var timezone = that.options.timezone;\n                    var action = \"today\";\n                    var currentDate = new Date();\n                    var date;\n\n                    if (timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentDate, timezone);\n                        date = kendo.timezone.convert(currentDate, currentDate.getTimezoneOffset(), timezoneOffset);\n                    } else {\n                        date = currentDate;\n                    }\n\n                    that.trigger(\"navigate\", { view: that.name || options.name, action: action, date: date });\n                });\n            }\n        },\n\n        _forTimeRange: function(min, max, action, after) {\n            min = toInvariantTime(min); //convert the date to 1/2/1980 and sets the time\n            max = toInvariantTime(max);\n\n            var that = this,\n                msMin = getMilliseconds(min),\n                msMax = getMilliseconds(max),\n                minorTickCount = that.options.minorTickCount,\n                msMajorInterval = that.options.majorTick * MS_PER_MINUTE,\n                msInterval = msMajorInterval / minorTickCount || 1,\n                start = new Date(+min),\n                startDay = start.getDate(),\n                msStart,\n                idx = 0, length,\n                html = \"\";\n\n            length = MS_PER_DAY / msInterval;\n\n            if (msMin != msMax) {\n                if (msMin > msMax) {\n                    msMax += MS_PER_DAY;\n                }\n\n                length = ((msMax - msMin) / msInterval);\n            }\n\n            length = Math.round(length);\n\n            for (; idx < length; idx++) {\n                var majorTickDivider = idx % (msMajorInterval / msInterval),\n                    isMajorTickRow = majorTickDivider === 0,\n                    isMiddleRow = majorTickDivider < minorTickCount - 1,\n                    isLastSlotRow = majorTickDivider === minorTickCount - 1;\n\n                html += action(start, isMajorTickRow, isMiddleRow, isLastSlotRow);\n\n                setTime(start, msInterval, false);\n            }\n\n            if (msMax) {\n                msStart = getMilliseconds(start);\n                if (startDay < start.getDate()) {\n                    msStart += MS_PER_DAY;\n                }\n\n                if (msStart > msMax) {\n                    start = new Date(+max);\n                }\n            }\n\n            if (after) {\n                html += after(start);\n            }\n\n            return html;\n        },\n\n        _content: function(dates) {\n            var that = this;\n            var html = '';\n\n            html += '<tbody>';\n\n            html += that._renderRows(dates, that.rowLevels, that.columnLevels);\n\n            html += '</tbody>';\n\n            this.content.find(\"table\").append(html);\n        },\n\n        _virtualContent: function(rowLevels, columnLevels) {\n            var that = this;\n            var html = '';\n            var dates = that._dates;\n\n            html += that._renderRows(dates, rowLevels, columnLevels);\n\n            that.content.find(\"table tbody\").append(html);\n        },\n\n        _renderRows: function(dates, rowLevels, columnLevels) {\n            var that = this;\n            var isVerticalGroupped = that._groupOrientation() === \"vertical\";\n            var byDate = that._isGroupedByDate();\n            var dateID = 0;\n            var columnCount = dates.length;\n            var options = that.options;\n            var start = that.startTime();\n            var end = this.endTime();\n            var groupsCount = 1;\n            var rowCount = 1;\n            var resources = this.groupedResources;\n            var html = '';\n\n            if (resources.length) {\n                var levels = that._recalculateLevels(rowLevels, columnLevels);\n\n                rowCount = levels.rowCount;\n                groupsCount = levels.groupsCount;\n            }\n\n            var appendRow = function(date, majorTick, middleRow) {\n                var content = \"\";\n                var groupIdx = 0;\n                var idx, length;\n\n                content = '<tr' + (middleRow ? ' class=\"k-middle-row\"' : \"\") + '>';\n\n                if (byDate) {\n                    for (idx = 0, length = columnCount; idx < length; idx++) {\n                        for (groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                            var dateIndex = idx;\n                            if (isVerticalGroupped) {\n                                dateIndex = dateID;\n                            }\n                            content = that._addCellsToContent(content, dates, date, dateIndex, groupIdx, rowIdx);\n\n                        }\n                        if (isVerticalGroupped) {\n\n                            break;\n                        }\n                    }\n                } else {\n                     for (; groupIdx < groupsCount; groupIdx++) {\n                        for (idx = 0, length = columnCount; idx < length; idx++) {\n                            content = that._addCellsToContent(content, dates, date, idx, groupIdx, rowIdx);\n                        }\n                     }\n                }\n\n                content += \"</tr>\";\n\n                return content;\n            };\n\n            for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                html += options.allDaySlot && isVerticalGroupped ? this._allDayVerticalGroupRow(dates, rowIdx, groupsCount, dateID) : \"\";\n\n                html += this._forTimeRange(start, end, appendRow);\n                if (isVerticalGroupped) {\n                        dateID++;\n                }\n            }\n\n            return html;\n        },\n\n        _recalculateLevels: function(rowLevels, columnLevels) {\n            var that = this;\n            var byDate = that._isGroupedByDate();\n            var isVerticalGroupped = that._groupOrientation() === \"vertical\";\n            var groupsCount = 1;\n            var rowCount = 1;\n\n            if (isVerticalGroupped) {\n                rowCount = that._rowCountForLevel(rowLevels.length - 2, rowLevels);\n\n                if (byDate) {\n                     groupsCount = that._columnCountForLevel(columnLevels.length - 1);\n                }\n            } else {\n                if (byDate) {\n                     groupsCount = that._columnCountForLevel(columnLevels.length - 1) / this._columnCountForLevel(0);\n                } else {\n                     groupsCount = that._columnCountForLevel(columnLevels.length - 2);\n                }\n            }\n\n            return {\n                rowCount: rowCount,\n                groupsCount: groupsCount\n            };\n        },\n\n        _allDayVerticalGroupRow: function(dates, groupIndex, groupsCount, dateID) {\n            var that = this;\n            var result = '<tr class=\"k-scheduler-header-all-day\">';\n            var byDate = that._isGroupedByDate();\n            var dateGroupIndex = byDate ? 0 : groupIndex;\n            var allDaySlotTemplate = that.allDaySlotTemplate;\n\n            var resources = function() {\n                return that._resourceBySlot({ groupIndex: dateGroupIndex });\n            };\n\n            if (byDate) {\n                for (; dateGroupIndex < groupsCount; dateGroupIndex++) {\n                    result += \"<td>\" + allDaySlotTemplate({ date: dates[dateID], resources: resources }) + \"</td>\";\n                }\n            } else {\n                for (var idx = 0; idx < dates.length; idx++) {\n                    result += \"<td>\" + allDaySlotTemplate({ date: dates[idx], resources: resources }) + \"</td>\";\n                }\n            }\n\n            return result + \"</tr>\";\n        },\n\n        _addCellsToContent: function(content, dates, date, idx, groupIdx, rowIdx) {\n            var that = this;\n            var classes = \"\";\n            var tmplDate;\n            var slotTemplate = this.slotTemplate;\n            var isVerticalGroupped = this._groupOrientation() === \"vertical\";\n            var resources = function(groupIndex) {\n                return function() {\n                    return that._resourceBySlot({ groupIndex: groupIndex });\n                };\n            };\n\n            if (kendo.date.isToday(dates[idx])) {\n                classes += \"k-today\";\n            }\n\n            if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(this.options.workDayStart) ||\n                kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(this.options.workDayEnd) ||\n                !this._isWorkDay(dates[idx])) {\n                classes += \" k-nonwork-hour\";\n            }\n\n            content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n            tmplDate = kendo.date.getDate(dates[idx]);\n            kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n            content += slotTemplate({ date: tmplDate, resources: resources(isVerticalGroupped && !that._isGroupedByDate() ? rowIdx : groupIdx) });\n            content += \"</td>\";\n            return content;\n        },\n\n        _isWorkDay: function(date) {\n            var day = date.getDay();\n            var workDays = this._workDays;\n\n            for (var i = 0; i < workDays.length; i++) {\n                if (workDays[i] === day) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _render: function(dates) {\n            var that = this;\n\n            dates = dates || [];\n\n            this._dates = dates;\n\n            this._startDate = dates[0];\n\n            this._endDate = dates[(dates.length - 1) || 0];\n\n            this.createLayout(this._layout(dates));\n\n            this._content(dates);\n\n            this._footer();\n\n            this.refreshLayout();\n\n            if (this._isVirtualized()) {\n                this._tryRenderContent();\n            }\n\n            var allDayHeader = this.element.find(\".k-scheduler-header-all-day td\");\n\n            if (allDayHeader.length) {\n                this._allDayHeaderHeight = allDayHeader.first()[0].clientHeight;\n            }\n\n            that.element.on(\"click\" + NS, \".k-nav-day\", function(e) {\n                var th = $(e.currentTarget).closest(\"th\");\n                var offset = th.offset();\n                var additioanlWidth = 0;\n                var additionalHeight = outerHeight(th);\n\n                if (that._isGroupedByDate()) {\n                    if (that._isVerticallyGrouped()) {\n                        additioanlWidth = outerWidth(that.times);\n                        additionalHeight = 0;\n                    } else {\n                        additionalHeight = outerHeight(that.datesHeader);\n                    }\n                }\n\n                var slot = that._slotByPosition(offset.left + additioanlWidth, offset.top + additionalHeight);\n\n                that.trigger(\"navigate\", { view: \"day\", date: slot.startDate() });\n            });\n        },\n\n        startTime: function() {\n            var options = this.options;\n            return options.showWorkHours ? options.workDayStart : options.startTime;\n        },\n\n        endTime: function() {\n            var options = this.options;\n            return options.showWorkHours ? options.workDayEnd : options.endTime;\n        },\n\n        startDate: function() {\n            return this._startDate;\n        },\n\n        endDate: function() {\n            return this._endDate;\n        },\n\n        _end: function(isAllDay) {\n            var time = getMilliseconds(this.endTime()) || MS_PER_DAY;\n\n            if (isAllDay) {\n                time = 0;\n            }\n\n            return new Date(this._endDate.getTime() + time);\n        },\n\n        nextDate: function() {\n            return kendo.date.nextDay(this.endDate());\n        },\n\n        previousDate: function() {\n            return kendo.date.previousDay(this.startDate());\n        },\n\n        calculateDateRange: function() {\n            this._render([this.options.date]);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that._currentTimeUpdateTimer) {\n                clearInterval(that._currentTimeUpdateTimer);\n            }\n\n            if (that.datesHeader) {\n                that.datesHeader.off(NS);\n            }\n\n            if (that.element) {\n                that.element.off(NS);\n            }\n\n            if (that.footer) {\n                that.footer.remove();\n            }\n\n            SchedulerView.fn.destroy.call(this);\n\n            if (this._isMobile() && that.options.editable) {\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents.destroy();\n                    that._allDayUserEvents.destroy();\n                }\n\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents.destroy();\n                }\n            }\n        },\n\n        inRange: function(options) {\n            var inRange = SchedulerView.fn.inRange.call(this, options);\n\n            if (options.isAllDay) {\n                return inRange;\n            }\n\n            var startTime = getMilliseconds(this.startTime());\n            var endTime = getMilliseconds(this.endTime()) || kendo.date.MS_PER_DAY;\n\n            var start = getMilliseconds(options.start);\n            var end = getMilliseconds(options.end) || kendo.date.MS_PER_DAY;\n\n            return inRange && startTime <= start && end <= endTime;\n        },\n\n        selectionByElement: function(cell) {\n            var offset = cell.offset();\n            // The magical number 5 is to buffer properly the height of the cell for all browsers\n            var height = Math.round(cell.innerHeight()) - 5;\n\n            return this._slotByPosition(offset.left, offset.top + height);\n        },\n\n        _timeSlotInterval: function() {\n            var options = this.options;\n            return (options.majorTick / options.minorTickCount) * MS_PER_MINUTE;\n        },\n\n        _timeSlotIndex: function(date) {\n            var options = this.options;\n            var eventStartTime = getMilliseconds(date);\n            var startTime = getMilliseconds(this.startTime());\n            var timeSlotInterval = ((options.majorTick / options.minorTickCount) * MS_PER_MINUTE);\n\n            return (eventStartTime - startTime) / (timeSlotInterval);\n        },\n\n        _slotIndex: function(date, multiday) {\n            if (multiday) {\n                return this._dateSlotIndex(date);\n            }\n\n            return this._timeSlotIndex(date);\n        },\n\n        _dateSlotIndex: function(date, overlaps) {\n            var idx;\n            var length;\n            var slots = this._dates || [];\n            var slotStart;\n            var slotEnd;\n            var offset = 1;\n\n            for (idx = 0, length = slots.length; idx < length; idx++) {\n                slotStart = kendo.date.getDate(slots[idx]);\n                slotEnd = new Date(kendo.date.getDate(slots[idx]).getTime() + MS_PER_DAY - (overlaps ? 0 : 1));\n\n                if (isInDateRange(date, slotStart, slotEnd)) {\n                    return idx * offset;\n                }\n            }\n            return -1;\n        },\n\n        _positionAllDayEvent: function(element, slotRange) {\n            var slotWidth = slotRange.innerWidth();\n            var startIndex = slotRange.start.index;\n            var endIndex = slotRange.end.index;\n\n            var allDayEvents = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n\n            var currentColumnCount = this._headerColumnCount || 0;\n\n            var leftOffset = 2;\n\n            var rightOffset = startIndex !== endIndex ? 3 : 2;\n\n            var eventHeight = this._allDayHeaderHeight;\n\n            var start = slotRange.startSlot();\n\n            element\n                .css({\n                    left: start.offsetLeft + leftOffset,\n                    width: slotWidth - rightOffset\n                });\n\n            slotRange.addEvent({ slotIndex: startIndex, start: startIndex, end: endIndex, element: element });\n\n            allDayEvents.push({ slotIndex: startIndex, start: startIndex, end: endIndex, element: element });\n\n            var rows = SchedulerView.createRows(allDayEvents);\n\n            if (rows.length && rows.length > currentColumnCount) {\n                this._headerColumnCount = rows.length;\n            }\n\n            var top = slotRange.start.offsetTop;\n\n            for (var idx = 0, length = rows.length; idx < length; idx++) {\n                var rowEvents = rows[idx].events;\n\n                for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                    $(rowEvents[j].element).css({\n                        top: top + idx * eventHeight,\n                        // apply calculated height.\n                        // -2 is to match normal events\n                        height: eventHeight - 2\n                    });\n                }\n            }\n        },\n\n        _arrangeColumns: function(element, top, height, slotRange) {\n            var startSlot = slotRange.start;\n\n            element = { element: element, slotIndex: startSlot.index, start: top, end: top + height };\n\n            var columns,\n                slotWidth = startSlot.clientWidth,\n                eventRightOffset = slotWidth * 0.10,\n                columnEvents,\n                eventElements = slotRange.events(),\n                slotEvents = SchedulerView.collidingEvents(eventElements, element.start, element.end),\n                tableEl = this.table.find(\".k-scheduler-content .k-scheduler-table\")[0],\n                contentEl = this.table.find(\".k-scheduler-content\")[0];\n\n            slotRange.addEvent(element);\n\n            slotEvents.push(element);\n\n            columns = SchedulerView.createColumns(slotEvents);\n\n            var columnWidth = (slotWidth - eventRightOffset) / columns.length;\n\n            for (var idx = 0, length = columns.length; idx < length; idx++) {\n                columnEvents = columns[idx].events;\n\n                for (var j = 0, eventLength = columnEvents.length; j < eventLength; j++) {\n                    var calculatedWidth = columnWidth - 2;\n                    columnEvents[j].element[0].style.width = (calculatedWidth > 0 ? calculatedWidth : columnWidth) + \"px\";\n\n                    if (this._isRtl && contentEl.clientWidth < contentEl.scrollWidth) {\n                        // RTL mobile rendering with horizontal scroll\n                        columnEvents[j].element[0].style.left = eventRightOffset +\n                            startSlot.offsetLeft +\n                            idx * columnWidth -\n                            (tableEl.clientWidth - contentEl.clientWidth) +\n                            \"px\";\n                    } else {\n                        columnEvents[j].element[0].style.left = (this._isRtl ? eventRightOffset : 0) + startSlot.offsetLeft + idx * columnWidth + 2 + \"px\";\n                    }\n                }\n            }\n        },\n\n        _positionEvent: function(event, element, slotRange) {\n            var start = event._startTime || event.start;\n            var end = event._endTime || event.end;\n            var borderWidths = kendo.getComputedStyles(slotRange.start.element, [\"border-top-width\", \"border-bottom-width\"]);\n\n            var rect = slotRange.innerRect(start, end, false);\n\n            var height = rect.bottom - rect.top -\n                            parseFloat(borderWidths[\"border-top-width\"]) -\n                            parseFloat(borderWidths[\"border-bottom-width\"]);\n\n            if (height < 0) {\n                height = 0;\n            }\n\n            element.css( {\n                top: rect.top,\n                height: height\n            } );\n\n            this._arrangeColumns(element, rect.top, element[0].clientHeight, slotRange);\n       },\n\n       _createEventElement: function(event, isOneDayEvent, head, tail) {\n            var template = isOneDayEvent ? this.eventTemplate : this.allDayEventTemplate;\n            var options = this.options;\n            var editable = options.editable;\n            var isMobile = this._isMobile();\n            var showDelete = editable && editable.destroy !== false && !isMobile;\n            var resizable = editable && editable.resize !== false;\n            var startDate = getDate(this.startDate());\n            var endDate = getDate(this.endDate());\n            var startTime = getMilliseconds(this.startTime());\n            var endTime = getMilliseconds(this.endTime());\n            var eventStartTime = event._time(\"start\");\n            var eventEndTime = event._time(\"end\");\n            var middle;\n\n            if (startTime >= endTime) {\n                endTime = getMilliseconds(new Date(this.endTime().getTime() + MS_PER_DAY - 1));\n            }\n\n            if (!isOneDayEvent && !event.isAllDay) {\n                endDate = new Date(endDate.getTime() + MS_PER_DAY);\n            }\n\n            var eventStartDate = event.start;\n            var eventEndDate = event.end;\n\n            if (event.isAllDay) {\n                eventEndDate = getDate(event.end);\n            }\n            if ((!isInDateRange(getDate(eventStartDate), startDate, endDate) &&\n                !isInDateRange(eventEndDate, startDate, endDate)) ||\n                (isOneDayEvent &&\n                    event.start.getTime() !== event.end.getTime() &&\n                    (eventStartTime < startTime || eventStartTime >= endTime) &&\n                    (eventEndTime > endTime || eventEndTime <= startTime ))) {\n\n                middle = true;\n            } else if (getDate(eventStartDate) < startDate ||\n                (isOneDayEvent &&\n                    eventStartTime !== 0 &&\n                    event.start.getTime() !== event.end.getTime() &&\n                    (eventStartTime < startTime || eventStartTime >= endTime))) {\n\n                tail = true;\n            } else if ((eventEndDate > endDate && !isOneDayEvent) ||\n                (isOneDayEvent &&\n                    eventEndTime !== 0 &&\n                    event.start.getTime() !== event.end.getTime() &&\n                    (eventEndTime > endTime || eventEndTime <= startTime))) {\n\n                head = true;\n            }\n\n            var resources = this.eventResources(event);\n\n           if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                eventStartDate = new Date(eventStartTime);\n                eventStartDate = kendo.timezone.apply(eventStartDate, \"Etc/UTC\");\n            }\n\n           if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                eventEndDate = new Date(eventEndTime);\n                eventEndDate = kendo.timezone.apply(eventEndDate, \"Etc/UTC\");\n            }\n\n            var data = extend({}, {\n                ns: kendo.ns,\n                resizable: resizable,\n                showDelete: showDelete,\n                middle: middle,\n                head: head,\n                tail: tail,\n                singleDay: this._dates.length == 1,\n                resources: resources,\n                inverseColor: false,\n                messages: options.messages,\n                ariaLabel: this._formatEventAriaLabel(event.title, eventStartDate, eventEndDate, event.isAllDay)\n            }, event, {\n                start: eventStartDate,\n                end: eventEndDate\n            });\n\n            var element = $(template(data));\n\n            this.angular(\"compile\", function() {\n                return {\n                    elements: element,\n                    data: [ { dataItem: data } ]\n                };\n            });\n\n            return element;\n        },\n\n        _isInTimeSlot: function(event) {\n            var slotStartTime = this.startTime(),\n                slotEndTime = this.endTime(),\n                startTime = event._startTime || event.start,\n                endTime = event._endTime || event.end;\n\n            if (getMilliseconds(slotEndTime) === getMilliseconds(kendo.date.getDate(slotEndTime))) {\n                slotEndTime = kendo.date.getDate(slotEndTime);\n                setTime(slotEndTime, MS_PER_DAY - 1);\n            }\n\n            if (event._date(\"end\") > event._date(\"start\")) {\n               endTime = +event._date(\"end\") + (MS_PER_DAY - 1);\n            }\n\n            endTime = event._endTime ? endTime - event._date(\"end\") : getMilliseconds(new Date(endTime));\n            startTime = event._startTime ? startTime - event._date(\"start\") : getMilliseconds(new Date(startTime));\n\n            slotEndTime = getMilliseconds(slotEndTime);\n            slotStartTime = getMilliseconds(slotStartTime);\n\n            if (slotStartTime === startTime && startTime === endTime) {\n                return true;\n            }\n\n            var overlaps = startTime !== slotEndTime;\n\n            return isInTimeRange(startTime, slotStartTime, slotEndTime, overlaps) ||\n                isInTimeRange(endTime, slotStartTime, slotEndTime, overlaps) ||\n                isInTimeRange(slotStartTime, startTime, endTime) ||\n                isInTimeRange(slotEndTime, startTime, endTime) ||\n                (event.end.getDate() > event.start.getDate() && endTime > slotStartTime);\n        },\n\n        _isInDateSlot: function(event) {\n            var groups = this.groups[0];\n            var slotStart = groups.firstSlot().start;\n            var slotEnd = groups.lastSlot().end - 1;\n\n            var startTime = kendo.date.toUtcTime(event.start);\n            var endTime = kendo.date.toUtcTime(event.end);\n\n            return (isInDateRange(startTime, slotStart, slotEnd) ||\n                isInDateRange(endTime, slotStart, slotEnd) ||\n                isInDateRange(slotStart, startTime, endTime) ||\n                isInDateRange(slotEnd, startTime, endTime)) &&\n                (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay );\n        },\n\n        _updateAllDayHeaderHeight: function(height) {\n            if (this._height !== height) {\n                this._height = height;\n\n                var allDaySlots = this.element.find(\".k-scheduler-header-all-day td\");\n\n                if (allDaySlots.length) {\n                    allDaySlots.parent()\n                        .add(this.element.find(\".k-scheduler-times-all-day\").parent())\n                        .height(height);\n\n                    for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                        this.groups[groupIndex].refresh();\n                    }\n                }\n            }\n        },\n\n        _renderEvents: function(events, groupIndex) {\n            var allDayEventContainer = this.datesHeader.find(\".k-scheduler-header-wrap > div\");\n            var byDate = this._isGroupedByDate();\n            var event;\n\n            var idx;\n            var length;\n\n            for (idx = 0, length = events.length; idx < length; idx++) {\n                event = events[idx];\n\n                if (this._isInDateSlot(event)) {\n                    var isMultiDayEvent, container, element, ranges, range, start, end, group;\n\n                    if (this.options.enforceAllDaySlot) {\n                        isMultiDayEvent = event.isAllDay || event.duration() >= MS_PER_DAY;\n                    } else {\n                        isMultiDayEvent = event.isAllDay;\n                    }\n\n                    container = isMultiDayEvent && !this._isVerticallyGrouped() ? allDayEventContainer : this.content;\n\n                    if (!isMultiDayEvent) {\n                        if (this._isInTimeSlot(event)) {\n                            group = this.groups[groupIndex];\n\n                            if (!group) {\n                                continue;\n                            }\n\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n\n                            ranges = group.slotRanges(event);\n\n                            var rangeCount = ranges.length;\n\n                            for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                                range = ranges[rangeIndex];\n                                start = event.start;\n                                end = event.end;\n\n                                if (rangeCount > 1) {\n                                    if (rangeIndex === 0) {\n                                        end = range.end.endDate();\n                                    } else if (rangeIndex == rangeCount - 1) {\n                                        start = range.start.startDate();\n                                    } else {\n                                        start = range.start.startDate();\n                                        end = range.end.endDate();\n                                    }\n                                }\n\n                                var occurrence = event.clone({ start: start, end: end, _startTime: event._startTime, _endTime: event.endTime });\n\n                                if (this._isInTimeSlot(occurrence)) {\n                                    var head = range.head;\n\n                                    element = this._createEventElement(event, !isMultiDayEvent, head, range.tail);\n\n                                    element.appendTo(container);\n\n                                    this._inverseEventColor(element);\n\n                                    this._positionEvent(occurrence, element, range);\n\n                                    addContinuousEvent(group, range, element, false);\n                                }\n                            }\n                        }\n\n                    } else if (this.options.allDaySlot) {\n                        group = this.groups[groupIndex];\n\n                        if (!group) {\n                            continue;\n                        }\n\n                        if (!group._continuousEvents) {\n                            group._continuousEvents = [];\n                        }\n\n                        ranges = group.slotRanges(event);\n\n                        if (ranges.length) {\n                            range = ranges[0];\n                            var startIndex = range.start.index;\n                            var endIndex = range.end.index;\n\n                            if (byDate && startIndex !== endIndex) {\n                                start = range.start.start;\n                                end = range.end.end;\n                                var newStart = start;\n                                var newEnd = start;\n\n                                for (var i = range.start.index; i <= range.end.index; i++) {\n                                    element = this._createEventElement(event, !isMultiDayEvent, i !== endIndex, i !== startIndex);\n\n                                    var dateRange = group.daySlotRanges(newStart, newEnd, true)[0];\n                                    newStart = newEnd += kendo.date.MS_PER_DAY;\n\n                                    this._positionAllDayEvent(element, dateRange);\n\n                                    addContinuousEvent(group, dateRange, element, true);\n\n                                    element.appendTo(container);\n\n                                    this._inverseEventColor(element);\n                                }\n                            } else {\n                                element = this._createEventElement(event, !isMultiDayEvent);\n\n                                this._positionAllDayEvent(element, ranges[0]);\n\n                                addContinuousEvent(group, ranges[0], element, true);\n\n                                element.appendTo(container);\n\n                                this._inverseEventColor(element);\n                            }\n                        }\n                    }\n                }\n            }\n        },\n\n        render: function(events) {\n            var that = this;\n\n            this._headerColumnCount = 0;\n\n            this._cachedEvents = events;\n\n            this._groups();\n\n            this.element.find(\".k-event\").remove();\n\n            events = new kendo.data.Query(events)\n                .sort([{ field: \"start\", dir: \"asc\" },{ field: \"end\", dir: \"desc\" }])\n                .toArray();\n\n            var eventsByResource = [];\n\n            this._eventsByResource(events, this.groupedResources, eventsByResource);\n\n            var eventsPerDate = $.map(this._dates, function(date) {\n                return Math.max.apply(null,\n                    $.map(eventsByResource, function(events) {\n                        return $.grep(events, function(event) {\n                            if (that.options.enforceAllDaySlot) {\n                                return event.isMultiDay() && isInDateRange(date, getDate(event.start), getDate(event.end));\n                            } else {\n                                return event.isAllDay && isInDateRange(date, getDate(event.start), getDate(event.end));\n                            }\n                        }).length;\n                    })\n                );\n            });\n\n            var height = Math.max.apply(null, eventsPerDate);\n\n            this._updateAllDayHeaderHeight((height + 1) * this._allDayHeaderHeight);\n\n            for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                this._renderEvents(eventsByResource[groupIndex], groupIndex);\n            }\n\n            this.refreshLayout();\n\n            this._currentTime(false);\n\n            this.trigger(\"activate\");\n        },\n\n        _eventsByResource: function(events, resources, result, parentValue) {\n            var resource = resources[0];\n\n            if (resource) {\n                var view = resource.dataSource.view();\n\n                view = view.filter(function(item) {\n                    var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                    return itemParentValue === null || itemParentValue === undefined || itemParentValue === parentValue;\n                });\n\n                for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                    var value = this._resourceValue(resource, view[itemIdx]);\n\n                    var eventsFilteredByResource = new kendo.data.Query(events).filter({ field: resource.field, operator: SchedulerView.groupEqFilter(value) }).toArray();\n\n                    if (resources.length > 1) {\n                        this._eventsByResource(eventsFilteredByResource, resources.slice(1), result, value);\n                    } else {\n                        result.push(eventsFilteredByResource);\n                    }\n                }\n            } else {\n                result.push(events);\n            }\n        },\n\n        _columnOffsetForResource: function(index) {\n            return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n        },\n\n        _columnCountForLevel: function(level) {\n            var columnLevel = this.columnLevels[level];\n            return columnLevel ? columnLevel.length : 0;\n        },\n\n        _rowCountForLevel: function(level, rowLevels) {\n            rowLevels = rowLevels || this.rowLevels;\n            var rowLevel = rowLevels[level];\n            return rowLevel ? rowLevel.length : 0;\n        },\n\n        clearSelection: function() {\n\n            this.content.add(this.datesHeader)\n                .find(\".k-state-selected\")\n                .removeAttr(\"id\")\n                .removeClass(\"k-state-selected\");\n        },\n\n        _updateDirection: function(selection, ranges, multiple, reverse, vertical) {\n            var isDaySlot = selection.isAllDay;\n            var startSlot = ranges[0].start;\n            var endSlot = ranges[ranges.length - 1].end;\n\n            if (multiple) {\n                if (vertical) {\n                    if (!isDaySlot &&\n                        startSlot.index === endSlot.index &&\n                        startSlot.collectionIndex === endSlot.collectionIndex) {\n                            selection.backward = reverse;\n                    }\n                } else {\n                    if ((isDaySlot && startSlot.index === endSlot.index) ||\n                        (!isDaySlot && startSlot.collectionIndex === endSlot.collectionIndex)) {\n                            selection.backward = reverse;\n                    }\n                }\n            }\n        },\n\n        _changeViewPeriod: function(selection, reverse, vertical) {\n            if (!vertical) {\n                var date = reverse ? this.previousDate() : this.nextDate();\n                var start = selection.start;\n                var end = selection.end;\n                var verticalByDate = this._isGroupedByDate() && this._isVerticallyGrouped();\n                var group = this.groups[selection.groupIndex];\n                var collection = reverse ? group._timeSlotCollections : group._getCollections(group.daySlotCollectionCount());\n                var slots = collection[collection.length - 1]._slots;\n                var slotIndex = (!reverse && !group.daySlotCollectionCount()) ? 0 : slots.length - 1;\n                var endMilliseconds;\n                var newDateStart, newDateEnd;\n\n                newDateStart = new Date(date);\n                newDateEnd = new Date(date);\n\n                if (this._isInRange(newDateStart, newDateEnd)) {\n                    return false;\n                }\n\n                selection.start = newDateStart;\n                selection.end = newDateEnd;\n\n                if (verticalByDate) {\n                    var newStart = new Date(slots[slotIndex].startDate());\n                    var newEnd = new Date(slots[slotIndex].endDate());\n                    endMilliseconds = getMilliseconds(newEnd) ? getMilliseconds(newEnd) : MS_PER_DAY;\n\n                        setTime(selection.start, getMilliseconds(newStart));\n                        setTime(selection.end, endMilliseconds);\n                        if (group.daySlotCollectionCount()) {\n                            selection.isAllDay = !selection.isAllDay;\n                        }\n                } else {\n                    endMilliseconds = (selection.isAllDay || !getMilliseconds(end)) ? MS_PER_DAY : getMilliseconds(end);\n\n                    setTime(selection.start, getMilliseconds(start));\n                    setTime(selection.end, endMilliseconds);\n                }\n\n                if (!this._isVerticallyGrouped()) {\n                    selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                }\n\n                selection.events = [];\n\n                return true;\n            }\n        }\n    });\n\n    extend(true, ui, {\n        MultiDayView: MultiDayView,\n        DayView: MultiDayView.extend({\n            options: {\n                name: \"DayView\",\n                title: \"Day\",\n                selectedMobileDateFormat: \"{0:MMM d}\"\n            },\n            name: \"day\"\n        }),\n        WeekView: MultiDayView.extend({\n            options: {\n                name: \"WeekView\",\n                title: \"Week\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\"\n            },\n            name: \"week\",\n            calculateDateRange: function() {\n                var selectedDate = this.options.date,\n                    start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                    idx, length,\n                    dates = [];\n\n                for (idx = 0, length = 7; idx < length; idx++) {\n                    dates.push(start);\n                    start = kendo.date.nextDay(start);\n                }\n                this._render(dates);\n            }\n        }),\n        WorkWeekView: MultiDayView.extend({\n            options: {\n                name: \"WorkWeekView\",\n                title: \"Work Week\",\n                selectedDateFormat: \"{0:D} - {1:D}\",\n                selectedShortDateFormat: \"{0:d} - {1:d}\"\n            },\n            name: \"workWeek\",\n            nextDate: function() {\n                var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.startDate()), this.calendarInfo().firstDay, 1);\n                return kendo.date.addDays(weekStart, this._workDays[0]);\n            },\n            previousDate: function() {\n                var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                var workDays = this._workDays;\n\n                return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n            },\n            calculateDateRange: function() {\n                var options = this.options,\n                    selectedDate = options.date,\n                    dayOfWeek = kendo.date.dayOfWeek,\n                    weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                    start = dayOfWeek(weekStart, options.workWeekStart, 1),\n                    end = dayOfWeek(start, options.workWeekEnd, 1),\n                    dates = [],\n                    workDays = (options.workDays && options.workDays.length) ? options.workDays.map(function(day) {\n                        return dayOfWeek(weekStart, day, 1).getTime();\n                    }) : null;\n\n                if (workDays) {\n                    start = weekStart;\n                    end = dayOfWeek(start, this.calendarInfo().firstDay + 6, 1);\n                }\n\n                while (start <= end) {\n                    if (workDays && workDays.indexOf(start.getTime()) > -1) {\n                        dates.push(start);\n                    } else if (!workDays) {\n                        dates.push(start);\n                    }\n\n                    start = kendo.date.nextDay(start);\n                }\n\n                this._render(dates);\n            }\n        })\n    });\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n\n"],"names":["define","__meta__","id","name","category","description","depends","hidden","$","window","kendo","jQuery","undefined","ui","setTime","date","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","getDate","MS_PER_MINUTE","MS_PER_DAY","CURRENT_TIME_MARKER_CLASS","CURRENT_TIME_MARKER_ARROW_CLASS","INVERSE_COLOR_CLASS","BORDER_SIZE_COEFF","getMilliseconds","NS","DAY_VIEW_EVENT_TEMPLATE","template","DAY_VIEW_ALL_DAY_EVENT_TEMPLATE","DATA_HEADER_TEMPLATE","ALLDAY_EVENT_WRAPPER_STRING","EVENT_WRAPPER_STRING","toInvariantTime","staticDate","Date","isInDateRange","value","min","max","isInTimeRange","overlaps","addContinuousEvent","group","range","element","isAllDay","events","_continuousEvents","lastEvent","length","startDate","start","getTime","idx","splice","uid","attr","end","push","getWorkDays","options","workDays","dayIndex","workWeekStart","workWeekEnd","Math","abs","MultiDayView","init","that","this","fn","call","title","_workDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","currentTime","currentTimeMarkers","currentContentMarkers","timesTableMarkerWidth","position","elementHtml","currentTimeMarker","useLocalTimezone","timezone","dataSource","schema","timezoneOffset","offset","convert","getTimezoneOffset","times","find","content","groupsCount","orientation","groups","firstTimesCell","first","lastTimesCell","last","_isRtl","left","groupIndex","currentGroup","utcCurrentTime","toUtcTime","ranges","timeSlotRanges","collection","slotElement","slotByStartDate","timesTableMarker","eq","prependTo","markerTopPosition","round","innerRect","top","timesTableMarkerCss","right","addClass","css","contentMarker","height","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","bind","_updateResizeHint","event","startTime","endTime","multiday","enforceAllDaySlot","isMultiDay","width","hint","_removeResizeHint","rangeIndex","startSlot","_isGroupedByDate","slotIdx","index","slot","_slots","offsetWidth","clientHeight","offsetTop","_createResizeHint","offsetLeft","_resizeHint","add","innerWidth","rect","outerRect","snap","bottom","format","container","appendTo","text","toString","toLocalDate","_updateMoveHint","distance","duration","_removeMoveHint","_end","pop","eventHint","clientWidth","offsetHeight","_createEventElement","clone","inverseColor","_appendMoveHint","_moveHint","_slotByPosition","x","y","_isVerticallyGrouped","scrollTop","scrollLeft","ceil","daySlotByPosition","timeSlotByPosition","_groupCount","resources","groupedResources","byDate","_groupOrientation","_columnCountForLevel","_rowCountForLevel","_columnOffsetForResource","_columnCountInResourceView","_timeSlotGroups","groupCount","columnCount","interval","_timeSlotInterval","verticalViews","tableRows","time","rowIndex","cellIndex","rowCount","floor","rowMultiplier","cellMultiplier","cells","children","timeIndex","_addTimeSlotGroup","cell","getTimeSlotCollection","currentDate","_dates","UTC","getFullYear","getMonth","addTimeSlot","_addDaySlotGroup","cellCount","addDaySlot","_daySlotGroups","getDaySlotCollection","view","_addResourceView","columnIndex","addTimeSlotCollection","addDays","allDaySlot","addDaySlotCollection","selectedDateFormat","selectedShortDateFormat","selectedMobileDateFormat","showWorkHours","today","minorTickCount","majorTick","majorTimeHeaderTemplate","minorTimeHeaderTemplate","groupHeaderTemplate","slotTemplate","allDaySlotTemplate","eventTemplate","allDayEventTemplate","dateHeaderTemplate","editable","workDayStart","workDayEnd","footer","command","messages","allDay","showFullDay","showWorkDay","settings","Template","templateSettings","_eventTmpl","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","preventDefault","create","parent","hasClass","pageX","pageY","resourceInfo","_resourceBySlot","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","filter","useClickAsTap","browser","edge","tap","_scrolling","target","location","_allDayUserEvents","_editUserEvents","eventElement","touchElement","touch","initialTouch","_layout","dates","columns","rows","column","isMobile","isToday","className","cellContent","_forTimeRange","middleRow","lastSlotRow","row","_createDateLayout","_createColumnsLayout","_createRowsLayout","toggleFullDay","isWorkDay","_footer","html","action","after","msMin","msMax","msMajorInterval","msInterval","startDay","msStart","majorTickDivider","isMajorTickRow","isMiddleRow","isLastSlotRow","_content","_renderRows","rowLevels","columnLevels","append","_virtualContent","isVerticalGroupped","dateID","levels","_recalculateLevels","appendRow","groupIdx","dateIndex","_addCellsToContent","rowIdx","_allDayVerticalGroupRow","result","dateGroupIndex","classes","tmplDate","_isWorkDay","day","getDay","i","_render","_startDate","_endDate","createLayout","refreshLayout","_isVirtualized","_tryRenderContent","allDayHeader","_allDayHeaderHeight","th","currentTarget","additioanlWidth","additionalHeight","datesHeader","nextDate","nextDay","previousDate","previousDay","destroy","clearInterval","off","remove","inRange","selectionByElement","innerHeight","_timeSlotIndex","eventStartTime","timeSlotInterval","_slotIndex","_dateSlotIndex","slots","slotStart","slotEnd","_positionAllDayEvent","slotRange","slotWidth","startIndex","endIndex","allDayEvents","collidingEvents","currentColumnCount","_headerColumnCount","leftOffset","rightOffset","eventHeight","addEvent","slotIndex","createRows","rowEvents","j","eventLength","_arrangeColumns","eventRightOffset","columnEvents","eventElements","slotEvents","tableEl","table","contentEl","createColumns","columnWidth","calculatedWidth","style","scrollWidth","_positionEvent","_startTime","_endTime","borderWidths","getComputedStyles","parseFloat","isOneDayEvent","head","tail","showDelete","resizable","resize","_time","eventEndTime","middle","eventStartDate","eventEndDate","eventResources","apply","data","ns","singleDay","ariaLabel","_formatEventAriaLabel","angular","elements","dataItem","_isInTimeSlot","slotStartTime","slotEndTime","_date","_isInDateSlot","firstSlot","lastSlot","_updateAllDayHeaderHeight","_height","allDaySlots","refresh","_renderEvents","allDayEventContainer","isMultiDayEvent","slotRanges","rangeCount","occurrence","_inverseEventColor","newStart","newEnd","dateRange","daySlotRanges","render","_cachedEvents","Query","sort","field","dir","toArray","eventsByResource","_eventsByResource","eventsPerDate","map","grep","parentValue","resource","item","itemParentValue","getter","dataParentValueField","itemIdx","_resourceValue","eventsFilteredByResource","operator","groupEqFilter","slice","level","columnLevel","rowLevel","clearSelection","removeAttr","removeClass","_updateDirection","selection","multiple","reverse","vertical","isDaySlot","endSlot","collectionIndex","backward","_changeViewPeriod","verticalByDate","_timeSlotCollections","_getCollections","daySlotCollectionCount","endMilliseconds","newDateStart","newDateEnd","_isInRange","DayView","WeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","WorkWeekView","weekStart","indexOf","amd","a1","a2","a3"],"mappings":"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"}