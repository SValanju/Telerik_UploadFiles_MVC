{"version":3,"file":"kendo.dataviz.gauge.min.js","sources":["kendo.dataviz.gauge.js"],"sourcesContent":["/***********************************************************************\n * WARNING: this file is auto-generated.  If you change it directly,\n * your modifications will eventually be lost.  The source code is in\n * `kendo-charts` repository, you should make your changes there and\n * run `src-modules/sync.sh` in this repository.\n */\n(function(f, define) {\n    define('dataviz/gauge/kendo-gauges',[\n        \"kendo.core\",\n        \"kendo.color\",\n        \"kendo.drawing\",\n        \"kendo.dataviz.core\"\n    ], f);\n})(function() {\n\n(function($) {\n\nwindow.kendo.dataviz = window.kendo.dataviz || {};\nvar dataviz = kendo.dataviz;\nvar getSpacing = dataviz.getSpacing;\nvar defined = dataviz.defined;\nvar constants = dataviz.constants;\nvar BLACK = constants.BLACK;\nvar COORD_PRECISION = constants.COORD_PRECISION;\nvar services = dataviz.services;\nvar deepExtend = dataviz.deepExtend;\nvar isArray = dataviz.isArray;\nvar setDefaultOptions = dataviz.setDefaultOptions;\nvar NumericAxis = dataviz.NumericAxis;\nvar limitValue = dataviz.limitValue;\nvar Box = dataviz.Box;\nvar interpolateValue = dataviz.interpolateValue;\nvar round = dataviz.round;\nvar drawing = kendo.drawing;\nvar DrawingGroup = drawing.Group;\nvar DrawingPath = drawing.Path;\nvar Animation = drawing.Animation;\nvar AnimationFactory = drawing.AnimationFactory;\nvar geometry = kendo.geometry;\nvar Rect = geometry.Rect;\nvar GeometryPoint = geometry.Point;\nvar transform = geometry.transform;\n\nvar ANGULAR_SPEED = 150;\nvar LINEAR_SPEED = 250;\nvar ARROW = \"arrow\";\nvar ARROW_POINTER = \"arrowPointer\";\nvar BAR_POINTER = \"barPointer\";\nvar DEFAULT_HEIGHT = 200;\nvar DEFAULT_LINE_WIDTH = 0.5;\nvar DEFAULT_WIDTH = 200;\nvar DEGREE = Math.PI / 180;\nvar INSIDE = \"inside\";\nvar LINEAR = \"linear\";\nvar OUTSIDE = \"outside\";\nvar RADIAL_POINTER = \"radialPointer\";\nvar RADIAL_RANGE_POINTER = \"radialRangePointer\";\n\nfunction pad(bbox, value) {\n    var origin = bbox.getOrigin();\n    var size = bbox.getSize();\n    var spacing = getSpacing(value);\n\n    bbox.setOrigin([ origin.x - spacing.left, origin.y - spacing.top ]);\n    bbox.setSize([ size.width + (spacing.left + spacing.right), size.height + (spacing.top + spacing.bottom) ]);\n\n    return bbox;\n}\n\nvar Group = DrawingGroup;\nvar Path$1 = DrawingPath;\nvar Text = drawing.Text;\n\nfunction buildLabelElement(label, options) {\n    var labelBox = label.box;\n    var textBox = label.children[0].box;\n    var border = options.border || {};\n    var background = options.background || \"\";\n\n    var wrapper = Path$1.fromRect(new Rect([ labelBox.x1, labelBox.y1 ], [ labelBox.width(), labelBox.height() ]), {\n        stroke: {}\n    });\n\n    var text = new Text(label.text, new GeometryPoint(textBox.x1, textBox.y1), {\n        font: options.font,\n        fill: { color: options.color }\n    });\n\n    var styleGeometry = pad(text.bbox().clone(), options.padding);\n\n    var styleBox = Path$1.fromRect(styleGeometry, {\n        stroke: {\n            color: border.width ? border.color : \"\",\n            width: border.width,\n            opacity: border.opacity,\n            dashType: border.dashType,\n            lineJoin: \"round\",\n            lineCap: \"round\"\n        },\n        fill: {\n            color: background\n        }\n    });\n\n    var elements = new Group();\n    elements.append(wrapper);\n    elements.append(styleBox);\n    elements.append(text);\n\n    return elements;\n}\n\nfunction getRange(range, min, max) {\n    var from = defined(range.from) ? range.from : constants.MIN_VALUE;\n    var to = defined(range.to) ? range.to : constants.MAX_VALUE;\n\n    range.from = Math.max(Math.min(to, from), min);\n    range.to = Math.min(Math.max(to, from), max);\n\n    return range;\n}\n\nfunction unpad(bbox, value) {\n    var spacing = getSpacing(value);\n\n    spacing.left = -spacing.left; spacing.top = -spacing.top;\n    spacing.right = -spacing.right; spacing.bottom = -spacing.bottom;\n\n    return pad(bbox, spacing);\n}\n\nvar DEFAULT_MARGIN = 5;\nvar Path = DrawingPath;\nvar Surface = drawing.Surface;\n\nvar Gauge = dataviz.Class.extend({\n    init: function(element, userOptions, theme, context) {\n        if (context === void 0) { context = {}; }\n\n        this.element = element;\n        this.theme = theme;\n        this.contextService = new services.ChartService(this, context);\n        this._originalOptions = deepExtend({}, this.options, userOptions);\n        this.options = deepExtend({}, this._originalOptions);\n        this._initTheme(theme);\n\n        this.redraw();\n    },\n\n    destroy: function() {\n        if (this.surface) {\n            this.surface.destroy();\n            this.surface = null;\n        }\n\n        delete this.element;\n        delete this.surfaceElement;\n    },\n\n    value: function(pointerValue) {\n        var pointer = this.pointers[0];\n\n        if (arguments.length === 0) {\n            return pointer.value();\n        }\n\n        pointer.value(pointerValue);\n        this._setValueOptions(pointerValue);\n    },\n\n    _draw: function() {\n        var surface = this.surface;\n\n        surface.clear();\n        surface.draw(this._visuals);\n    },\n\n    exportVisual: function() {\n        return this._visuals;\n    },\n\n    allValues: function(values) {\n        var pointers = this.pointers;\n        var allValues = [];\n\n        if (arguments.length === 0) {\n            for (var i = 0; i < pointers.length; i++) {\n                allValues.push(pointers[i].value());\n            }\n\n            return allValues;\n        }\n\n        if (isArray(values)) {\n            for (var i$1 = 0; i$1 < values.length; i$1++) {\n                if (dataviz.isNumber(values[i$1])) {\n                    pointers[i$1].value(values[i$1]);\n                }\n            }\n        }\n\n        this._setValueOptions(values);\n    },\n\n    _setValueOptions: function(values) {\n        var pointers = [].concat(this.options.pointer);\n        var arrayValues = [].concat(values);\n\n        for (var i = 0; i < arrayValues.length; i++) {\n            pointers[i].value = arrayValues[i];\n        }\n    },\n\n    resize: function() {\n        this.noTransitionsRedraw();\n    },\n\n    noTransitionsRedraw: function() {\n        var transitions = this.options.transitions;\n\n        this._toggleTransitions(false);\n\n        this.redraw();\n\n        this._toggleTransitions(transitions);\n    },\n\n    redraw: function() {\n        var size = this._surfaceSize();\n        var wrapper = new Rect([ 0, 0 ], [ size.width, size.height ]);\n\n        this._initSurface();\n\n        this.gaugeArea = this._createGaugeArea();\n\n        this._createModel();\n\n        var bbox = unpad(wrapper.bbox(), this._gaugeAreaMargin);\n        this.reflow(bbox);\n    },\n\n    setOptions: function(options, theme) {\n        this._originalOptions = deepExtend(this._originalOptions, options);\n        this.options = deepExtend({}, this._originalOptions);\n\n        this._initTheme(theme);\n\n        this.redraw();\n    },\n\n    setDirection: function(rtl) {\n        this.contextService.rtl = Boolean(rtl);\n        if (this.surface && this.surface.type === 'svg') {\n            this.surface.destroy();\n            this.surface = null;\n        }\n    },\n\n    setIntlService: function(intl) {\n        this.contextService.intl = intl;\n    },\n\n    _initTheme: function(theme) {\n        var currentTheme = theme || this.theme || {};\n        this.theme = currentTheme;\n\n        this.options = deepExtend({}, currentTheme, this.options);\n        var options = this.options;\n        var pointer = options.pointer;\n\n        if (isArray(pointer)) {\n            var pointers = [];\n            for (var i = 0; i < pointer.length; i++) {\n                pointers.push(deepExtend({}, currentTheme.pointer, pointer[i]));\n            }\n            options.pointer = pointers;\n        }\n    },\n\n    _createGaugeArea: function() {\n        var options = this.options.gaugeArea;\n        var size = this.surface.size();\n        var border = options.border || {};\n        var areaGeometry = new Rect([ 0, 0 ], [ size.width, size.height ]);\n\n        this._gaugeAreaMargin = options.margin || DEFAULT_MARGIN;\n\n        if (border.width > 0) {\n            areaGeometry = unpad(areaGeometry, border.width);\n        }\n\n        var gaugeArea = Path.fromRect(areaGeometry, {\n            stroke: {\n                color: border.width ? border.color : \"\",\n                width: border.width,\n                dashType: border.dashType,\n                lineJoin: \"round\",\n                lineCap: \"round\"\n            },\n            fill: {\n                color: options.background\n            }\n        });\n\n        return gaugeArea;\n    },\n\n    _initSurface: function() {\n        var ref = this;\n        var options = ref.options;\n        var surface = ref.surface;\n        var element = this._surfaceElement();\n        var size = this._surfaceSize();\n\n        dataviz.elementSize(element, size);\n\n        if (!surface || surface.options.type !== options.renderAs) {\n            if (surface) {\n                surface.destroy();\n            }\n\n            this.surface = Surface.create(element, {\n                type: options.renderAs\n            });\n        } else {\n            this.surface.clear();\n            this.surface.resize();\n        }\n    },\n\n    _surfaceSize: function() {\n        var options = this.options;\n        var size = this._getSize();\n\n        if (options.gaugeArea) {\n            deepExtend(size, options.gaugeArea);\n        }\n\n        return size;\n    },\n\n    _surfaceElement: function() {\n        if (!this.surfaceElement) {\n            this.surfaceElement = document.createElement('div');\n            this.element.appendChild(this.surfaceElement);\n        }\n\n        return this.surfaceElement;\n    },\n\n    getSize: function() {\n        return this._getSize();\n    },\n\n    _getSize: function() {\n        var element = this.element;\n        var defaultSize = this._defaultSize();\n        var width = element.offsetWidth;\n        var height = element.offsetHeight;\n\n        if (!width) {\n            width = defaultSize.width;\n        }\n\n        if (!height) {\n            height = defaultSize.height;\n        }\n\n        return { width: width, height: height };\n    },\n\n    _defaultSize: function() {\n        return {\n            width: DEFAULT_WIDTH,\n            height: DEFAULT_HEIGHT\n        };\n    },\n\n    _toggleTransitions: function(value) {\n        var this$1 = this;\n\n        this.options.transitions = value;\n        for (var i = 0; i < this.pointers.length; i++) {\n            this$1.pointers[i].options.animation.transitions = value;\n        }\n    }\n});\n\nsetDefaultOptions(Gauge, {\n    plotArea: {},\n    theme: \"default\",\n    renderAs: \"\",\n    pointer: {},\n    scale: {},\n    gaugeArea: {}\n});\n\nvar Path$2 = DrawingPath;\nvar Group$2 = DrawingGroup;\nvar Point = GeometryPoint;\n\nfunction renderAxisTick(tickRenderOptions, tickOptions) {\n    var position = tickRenderOptions.position;\n    var tickX = tickRenderOptions.tickX;\n    var tickY = tickRenderOptions.tickY;\n    var start, end;\n\n    if (tickRenderOptions.vertical) {\n        start = new Point(tickX, position);\n        end = new Point(tickX + tickOptions.size, position);\n    } else {\n        start = new Point(position, tickY);\n        end = new Point(position, tickY + tickOptions.size);\n    }\n\n    var tickPath = new Path$2({\n        stroke: {\n            color: tickOptions.color,\n            width: tickOptions.width\n        }\n    }).moveTo(start).lineTo(end);\n\n    return tickPath;\n}\n\nfunction renderTicks(tickGroup, tickPositions, tickRenderOptions, tickOptions) {\n    var count = tickPositions.length;\n\n    if (tickOptions.visible) {\n        var mirror = tickRenderOptions.mirror;\n        var lineBox = tickRenderOptions.lineBox;\n        for (var i = tickOptions.skip; i < count; i += tickOptions.step) {\n            if (i % tickOptions.skipUnit === 0) {\n                continue;\n            }\n\n            tickRenderOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n            tickRenderOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n            tickRenderOptions.position = tickPositions[i];\n\n            tickGroup.append(renderAxisTick(tickRenderOptions, tickOptions));\n        }\n    }\n}\n\nvar LinearScale = NumericAxis.extend({\n    init: function(options, service) {\n        var scaleOptions = options || {};\n        if (!defined(scaleOptions.reverse) && scaleOptions.vertical === false && (service || {}).rtl) {\n            scaleOptions = $.extend({}, scaleOptions, {\n                reverse: true\n            });\n        }\n\n        NumericAxis.fn.init.call(this, 0, 1, scaleOptions, service);\n\n        this.options.minorUnit = this.options.minorUnit || this.options.majorUnit / 10;\n    },\n\n    initUserOptions: function(options) {\n        var scaleOptions = deepExtend({}, this.options, options);\n        scaleOptions = deepExtend({}, scaleOptions , { labels: { mirror: scaleOptions.mirror } });\n        scaleOptions.majorUnit = scaleOptions.majorUnit || dataviz.autoMajorUnit(scaleOptions.min, scaleOptions.max);\n\n        return scaleOptions;\n    },\n\n    initFields: function() {\n    },\n\n    render: function() {\n        var elements = this.elements = new Group$2();\n        var labels = this.renderLabels();\n        var scaleLine = this.renderLine();\n        var scaleTicks = this.renderTicks();\n        var ranges = this.renderRanges();\n\n        elements.append(scaleLine, labels, scaleTicks, ranges);\n\n        return elements;\n    },\n\n    renderRanges: function() {\n        var this$1 = this;\n\n        var options = this.options;\n        var min = options.min;\n        var max = options.max;\n        var vertical = options.vertical;\n        var mirror = options.labels.mirror;\n        var ranges = options.ranges || [];\n        var elements = new Group$2();\n        var count = ranges.length;\n        var rangeSize = options.rangeSize || options.minorTicks.size / 2;\n\n        for (var i = 0; i < count; i++) {\n            var range = getRange(ranges[i], min, max);\n            var slot = this$1.getSlot(range.from, range.to);\n            var slotX = vertical ? this$1.lineBox() : slot;\n            var slotY = vertical ? slot : this$1.lineBox();\n            if (vertical) {\n                slotX.x1 -= rangeSize * (mirror ? -1 : 1);\n            } else {\n                slotY.y2 += rangeSize * (mirror ? -1 : 1);\n            }\n\n            elements.append(Path$2.fromRect(new Rect([ slotX.x1, slotY.y1 ], [ slotX.x2 - slotX.x1, slotY.y2 - slotY.y1 ]), {\n                fill: { color: range.color, opacity: range.opacity },\n                stroke: { }\n            }));\n        }\n\n        return elements;\n    },\n\n    renderLabels: function() {\n        var ref = this;\n        var labels = ref.labels;\n        var options = ref.options;\n        var elements = new Group$2();\n\n        for (var i = 0; i < labels.length; i++) {\n            elements.append(buildLabelElement(labels[i], options.labels));\n        }\n\n        return elements;\n    },\n\n    renderLine: function() {\n        var line = this.options.line;\n        var lineBox = this.lineBox();\n        var elements = new Group$2();\n\n        if (line.width > 0 && line.visible) {\n            var linePath = new Path$2({\n                stroke: {\n                    color: line.color,\n                    dashType: line.dashType,\n                    width: line.width\n                }\n            });\n\n            linePath.moveTo(lineBox.x1, lineBox.y1).lineTo(lineBox.x2, lineBox.y2);\n            elements.append(linePath);\n        }\n\n        return elements;\n    },\n\n    renderTicks: function() {\n        var ticks = new Group$2();\n        var options = this.options;\n        var majorUnit = options.majorTicks.visible ? options.majorUnit : 0;\n        var tickRenderOptions = {\n            vertical: options.vertical,\n            mirror: options.labels.mirror,\n            lineBox: this.lineBox()\n        };\n\n        renderTicks(ticks, this.getMajorTickPositions(), tickRenderOptions, options.majorTicks);\n        renderTicks(ticks, this.getMinorTickPositions(), tickRenderOptions, deepExtend({}, {\n            skipUnit: majorUnit / options.minorUnit\n        }, options.minorTicks));\n\n        return ticks;\n    }\n});\n\nsetDefaultOptions(LinearScale, {\n    min: 0,\n    max: 50,\n\n    majorTicks: {\n        size: 15,\n        align: INSIDE,\n        color: BLACK,\n        width: DEFAULT_LINE_WIDTH,\n        visible: true\n    },\n\n    minorTicks: {\n        size: 10,\n        align: INSIDE,\n        color: BLACK,\n        width: DEFAULT_LINE_WIDTH,\n        visible: true\n    },\n\n    line: {\n        width: DEFAULT_LINE_WIDTH\n    },\n\n    labels: {\n        position: INSIDE,\n        padding: 2\n    },\n    mirror: false,\n    _alignLines: false\n});\n\nvar Pointer = dataviz.Class.extend({\n    init: function(scale, userOptions) {\n\n        var ref = scale.options;\n        var min = ref.min;\n        var max = ref.max;\n        var options = this.options = deepExtend({}, this.options, userOptions);\n\n        options.fill = options.color;\n\n        this.scale = scale;\n\n        if (defined(options.value)) {\n            options.value = limitValue(options.value, min, max);\n        } else {\n            options.value = min;\n        }\n    },\n\n    value: function(newValue) {\n        var options = this.options;\n        var value = options.value;\n\n        if (arguments.length === 0) {\n            return value;\n        }\n\n        var ref = this.scale.options;\n        var min = ref.min;\n        var max = ref.max;\n\n        options._oldValue = defined(options._oldValue) ? options.value : min;\n        options.value = limitValue(newValue, min, max);\n\n        if (this.elements) {\n            this.repaint();\n        }\n    }\n});\n\nsetDefaultOptions(Pointer, {\n    color: BLACK\n});\n\nvar LinearPointer = Pointer.extend({\n    init: function(scale, options) {\n        Pointer.fn.init.call(this, scale, options);\n\n        this.options = deepExtend({\n            track: {\n                visible: defined(options.track)\n            }\n        }, this.options);\n    },\n\n    reflow: function() {\n        var ref = this;\n        var options = ref.options;\n        var scale = ref.scale;\n        var ref$1 = scale.options;\n        var mirror = ref$1.mirror;\n        var vertical = ref$1.vertical;\n        var scaleLine = scale.lineBox();\n        var trackSize = options.track.size || options.size;\n        var pointerHalfSize = options.size / 2;\n        var margin = getSpacing(options.margin);\n        var space = vertical ?\n                 margin[mirror ? \"left\" : \"right\"] :\n                 margin[mirror ? \"bottom\" : \"top\"];\n        var pointerBox, pointerRangeBox, trackBox;\n\n        space = mirror ? -space : space;\n\n        if (vertical) {\n            trackBox = new Box(\n                scaleLine.x1 + space, scaleLine.y1,\n                scaleLine.x1 + space, scaleLine.y2);\n\n            if (mirror) {\n                trackBox.x1 -= trackSize;\n            } else {\n                trackBox.x2 += trackSize;\n            }\n\n            if (options.shape !== BAR_POINTER) {\n                pointerRangeBox = new Box(\n                    scaleLine.x2 + space, scaleLine.y1 - pointerHalfSize,\n                    scaleLine.x2 + space, scaleLine.y2 + pointerHalfSize\n                );\n                pointerBox = pointerRangeBox;\n            }\n        } else {\n            trackBox = new Box(\n                scaleLine.x1, scaleLine.y1 - space,\n                scaleLine.x2, scaleLine.y1 - space);\n\n            if (mirror) {\n                trackBox.y2 += trackSize;\n            } else {\n                trackBox.y1 -= trackSize;\n            }\n\n            if (options.shape !== BAR_POINTER) {\n                pointerRangeBox = new Box(\n                    scaleLine.x1 - pointerHalfSize, scaleLine.y1 - space,\n                    scaleLine.x2 + pointerHalfSize, scaleLine.y1 - space\n                );\n                pointerBox = pointerRangeBox;\n            }\n        }\n\n        this.trackBox = trackBox;\n        this.pointerRangeBox = pointerRangeBox;\n        this.box = pointerBox || trackBox.clone().pad(options.border.width);\n    },\n\n    getElementOptions: function() {\n        var options = this.options;\n\n        return {\n            fill: {\n                color: options.color,\n                opacity: options.opacity\n            },\n            stroke: defined(options.border) ? {\n                color: options.border.width ? options.border.color || options.color : \"\",\n                width: options.border.width,\n                dashType: options.border.dashType,\n                opacity: options.opacity\n            } : null\n        };\n    },\n\n    _margin: function() {\n        var ref = this;\n        var scale = ref.scale;\n        var options = ref.options;\n        var ref$1 = scale.options;\n        var mirror = ref$1.mirror;\n        var vertical = ref$1.vertical;\n        var margin = getSpacing(options.margin);\n\n        var space = vertical ?\n            margin[mirror ? \"left\" : \"right\"] :\n            margin[mirror ? \"bottom\" : \"top\"];\n\n        return space;\n    }\n});\n\nsetDefaultOptions(LinearPointer, {\n    shape: BAR_POINTER,\n\n    track: {\n        border: {\n            width: 1\n        }\n    },\n\n    color: BLACK,\n    border: {\n        width: 1\n    },\n    opacity: 1,\n\n    margin: getSpacing(3),\n    animation: {\n        type: BAR_POINTER\n    },\n    visible: true\n});\n\nvar ArrowLinearPointerAnimation = Animation.extend({\n    setup: function() {\n        var options = this.options;\n        var margin = options.margin;\n        var from = options.from;\n        var to = options.to;\n        var vertical = options.vertical;\n        var axis = vertical ? \"x1\" : \"y1\";\n\n        if (options.mirror === vertical) {\n            from[axis] -= margin; to[axis] -= margin;\n        } else {\n            from[axis] += margin; to[axis] += margin;\n        }\n\n        var fromScale = this.fromScale = new GeometryPoint(from.x1, from.y1);\n        var toScale = this.toScale = new GeometryPoint(to.x1, to.y1);\n\n        if (options.duration !== 0) {\n            options.duration = Math.max((fromScale.distanceTo(toScale) / options.duration) * 1000, 1);\n        }\n    },\n\n    step: function(pos) {\n        var translateX = interpolateValue(this.fromScale.x, this.toScale.x, pos);\n        var translateY = interpolateValue(this.fromScale.y, this.toScale.y, pos);\n\n        this.element.transform(transform().translate(translateX, translateY));\n    }\n});\n\nsetDefaultOptions(ArrowLinearPointerAnimation, {\n    easing: LINEAR,\n    duration: LINEAR_SPEED\n});\n\nAnimationFactory.current.register(ARROW_POINTER, ArrowLinearPointerAnimation);\n\nvar Point$1 = GeometryPoint;\nvar Path$3 = DrawingPath;\n\nvar ArrowLinearPointer = LinearPointer.extend({\n    init: function(scale, options) {\n        LinearPointer.fn.init.call(this, scale, options);\n\n        if (!defined(this.options.size)) {\n            this.options.size = this.scale.options.majorTicks.size * 0.6;\n        }\n    },\n\n    pointerShape: function() {\n        var ref = this;\n        var scale = ref.scale;\n        var size = ref.options.size;\n        var halfSize = size / 2;\n        var sign = (scale.options.mirror ? -1 : 1);\n        var shape;\n\n        if (scale.options.vertical) {\n            shape = [\n                new Point$1(0, 0 - halfSize), new Point$1(0 - sign * size, 0), new Point$1(0, 0 + halfSize)\n            ];\n        } else {\n            shape = [\n                new Point$1(0 - halfSize, 0), new Point$1(0, 0 + sign * size), new Point$1(0 + halfSize, 0)\n            ];\n        }\n\n        return shape;\n    },\n\n    repaint: function() {\n        var ref = this;\n        var scale = ref.scale;\n        var options = ref.options;\n        var animation = new ArrowLinearPointerAnimation(this.elements, deepExtend(options.animation, {\n            vertical: scale.options.vertical,\n            mirror: scale.options.mirror,\n            margin: this._margin(options.margin),\n            from: scale.getSlot(options._oldValue),\n            to: scale.getSlot(options.value)\n        }));\n\n        if (options.animation.transitions === false) {\n            animation.options.duration = 0;\n        }\n\n        animation.setup();\n        animation.play();\n    },\n\n    render: function() {\n        var ref = this;\n        var scale = ref.scale;\n        var options = ref.options;\n        var elementOptions = this.getElementOptions();\n        var shape = this.pointerShape(options.value);\n\n        options.animation.type = ARROW_POINTER;\n\n        var elements = new Path$3({\n            stroke: elementOptions.stroke,\n            fill: elementOptions.fill\n        }).moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).close();\n\n        var slot = scale.getSlot(options.value);\n        elements.transform(transform().translate(slot.x1, slot.y1));\n\n        this.elements = elements;\n\n        return elements;\n    }\n});\n\nvar BarLinearPointerAnimation = Animation.extend({\n    setup: function() {\n        var options = this.options;\n        var axis = this.axis = options.vertical ? constants.Y : constants.X;\n        var to = this.to = options.newPoints[0][axis];\n        var from = this.from = options.oldPoints[0][axis];\n\n        if (options.duration !== 0) {\n            options.duration = Math.max((Math.abs(to - from) / options.speed) * 1000, 1);\n        }\n\n        this._set(from);\n    },\n\n    step: function(pos) {\n        var value = interpolateValue(this.from, this.to, pos);\n        this._set(value);\n    },\n\n    _set: function(value) {\n        var setter = \"set\" + this.axis.toUpperCase();\n        var points = this.options.newPoints;\n\n        points[0][setter](value);\n        points[1][setter](value);\n    }\n});\n\nsetDefaultOptions(BarLinearPointerAnimation, {\n    easing: LINEAR,\n    speed: LINEAR_SPEED\n});\n\nAnimationFactory.current.register(BAR_POINTER, BarLinearPointerAnimation);\n\nvar Group$3 = DrawingGroup;\nvar Path$4 = DrawingPath;\n\nvar BarLinearPointer = LinearPointer.extend({\n    init: function(scale, options) {\n        LinearPointer.fn.init.call(this, scale, options);\n\n        if (!defined(this.options.size)) {\n            this.options.size = this.scale.options.majorTicks.size * 0.3;\n        }\n    },\n\n    pointerShape: function(value) {\n        var ref = this;\n        var scale = ref.scale;\n        var options = ref.options;\n        var ref$1 = scale.options;\n        var mirror = ref$1.mirror;\n        var vertical = ref$1.vertical;\n        var dir = mirror === vertical ? -1 : 1;\n        var size = options.size * dir;\n        var minSlot = scale.getSlot(scale.options.min);\n        var slot = scale.getSlot(value);\n        var axis = vertical ? constants.Y : constants.X;\n        var sizeAxis = vertical ? constants.X : constants.Y;\n        var margin = this._margin() * dir;\n\n        var p1 = new GeometryPoint();\n        p1[axis] = minSlot[axis + \"1\"];\n        p1[sizeAxis] = minSlot[sizeAxis + \"1\"];\n\n        var p2 = new GeometryPoint();\n        p2[axis] = slot[axis + \"1\"];\n        p2[sizeAxis] = slot[sizeAxis + \"1\"];\n\n        if (vertical) {\n            p1.translate(margin, 0);\n            p2.translate(margin, 0);\n        } else {\n            p1.translate(0, margin);\n            p2.translate(0, margin);\n        }\n\n        var p3 = p2.clone();\n        var p4 = p1.clone();\n\n        if (vertical) {\n            p3.translate(size, 0);\n            p4.translate(size, 0);\n        } else {\n            p3.translate(0, size);\n            p4.translate(0, size);\n        }\n\n        return [ p1, p2, p3, p4 ];\n    },\n\n    repaint: function() {\n        var ref = this;\n        var scale = ref.scale;\n        var options = ref.options;\n        var shape = this.pointerShape(options.value);\n        var pointerPath = this.pointerPath;\n        var oldShape = this.pointerShape(options._oldValue);\n\n        pointerPath.moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).lineTo(shape[3]).close();\n\n        var animation = new BarLinearPointerAnimation(pointerPath, deepExtend(options.animation, {\n            reverse: scale.options.reverse,\n            vertical: scale.options.vertical,\n            oldPoints: [ oldShape[1], oldShape[2] ],\n            newPoints: [ shape[1], shape[2] ]\n        }));\n\n        if (options.animation.transitions === false) {\n            animation.options.duration = 0;\n        }\n\n        animation.setup();\n        animation.play();\n    },\n\n    render: function() {\n        var group = new Group$3();\n        var elementOptions = this.getElementOptions();\n\n        if (this.options.track.visible) {\n            group.append(this.renderTrack());\n        }\n\n        var pointer = this.pointerPath = new Path$4({\n            stroke: elementOptions.stroke,\n            fill: elementOptions.fill\n        });\n\n        group.append(pointer);\n\n        this.elements = group;\n\n        return group;\n    },\n\n    renderTrack: function() {\n        var trackOptions = this.options.track;\n        var border = trackOptions.border || {};\n        var trackBox = this.trackBox.clone().pad(border.width || 0);\n\n        return new Path$4.fromRect(trackBox.toRect(), {\n            fill: {\n                color: trackOptions.color,\n                opacity: trackOptions.opacity\n            },\n            stroke: {\n                color: border.width ? border.color || trackOptions.color : \"\",\n                width: border.width,\n                dashType: border.dashType\n            }\n        });\n    }\n});\n\nvar DEFAULT_MIN_WIDTH = 60;\nvar DEFAULT_MIN_HEIGHT = 60;\n\nvar Group$1 = DrawingGroup;\n\nvar LinearGauge = Gauge.extend({\n    reflow: function(bbox) {\n        var pointers = this.pointers;\n        var bboxX = bbox.origin.x;\n        var bboxY = bbox.origin.y;\n\n        var box = new Box(bboxX, bboxY, bboxX + bbox.width(), bboxY + bbox.height());\n\n        this.scale.reflow(box);\n        this._shrinkScaleWidth(box);\n\n        for (var i = 0; i < pointers.length; i++) {\n            pointers[i].reflow();\n        }\n\n        this.bbox = this._getBox(box);\n        this._alignElements();\n        this._shrinkElements();\n        this._buildVisual();\n        this._draw();\n    },\n\n    _buildVisual: function() {\n        var visuals = new Group$1();\n        var scaleElements = this.scale.render();\n        var pointers = this.pointers;\n\n        visuals.append(this.gaugeArea);\n        visuals.append(scaleElements);\n\n        for (var i = 0; i < pointers.length; i++) {\n            var current = pointers[i];\n            visuals.append(current.render());\n            current.value(current.options.value);\n        }\n\n        this._visuals = visuals;\n    },\n\n    _createModel: function() {\n        var this$1 = this;\n\n        var options = this.options;\n        var scale = this.scale = new LinearScale(options.scale, this.contextService);\n\n        this.pointers = [];\n\n        var pointers = options.pointer;\n        pointers = isArray(pointers) ? pointers : [ pointers ];\n\n        for (var i = 0; i < pointers.length; i++) {\n            var currentOptions = deepExtend({}, pointers[i], {\n                animation: {\n                    transitions: options.transitions\n                }\n            });\n            var pointerType = currentOptions.shape === ARROW ? ArrowLinearPointer : BarLinearPointer;\n\n            this$1.pointers.push(new pointerType(scale, currentOptions));\n        }\n    },\n\n    _defaultSize: function() {\n        var vertical = this.options.scale.vertical;\n\n        return {\n            width: vertical ? DEFAULT_MIN_WIDTH : DEFAULT_WIDTH,\n            height: vertical ? DEFAULT_HEIGHT : DEFAULT_MIN_HEIGHT\n        };\n    },\n\n    _getBox: function(box) {\n        var ref = this;\n        var scale = ref.scale;\n        var pointers = ref.pointers;\n        var boxCenter = box.center();\n        var plotAreaBox = pointers[0].box.clone().wrap(scale.box);\n\n        for (var i = 0; i < pointers.length; i++) {\n            plotAreaBox.wrap(pointers[i].box.clone());\n        }\n\n        var size;\n        if (scale.options.vertical) {\n            size = plotAreaBox.width() / 2;\n            plotAreaBox = new Box(\n                boxCenter.x - size, box.y1,\n                boxCenter.x + size, box.y2\n            );\n        } else {\n            size = plotAreaBox.height() / 2;\n            plotAreaBox = new Box(\n                box.x1, boxCenter.y - size,\n                box.x2, boxCenter.y + size\n            );\n        }\n\n        return plotAreaBox;\n    },\n\n    _alignElements: function() {\n        var this$1 = this;\n\n        var ref = this;\n        var scale = ref.scale;\n        var pointers = ref.pointers;\n        var scaleBox = scale.box;\n        var box = pointers[0].box.clone().wrap(scale.box);\n        var plotAreaBox = this.bbox;\n\n        for (var i = 0; i < pointers.length; i++) {\n            box.wrap(pointers[i].box.clone());\n        }\n\n        var diff;\n        if (scale.options.vertical) {\n            diff = plotAreaBox.center().x - box.center().x;\n            scale.reflow(new Box(\n                scaleBox.x1 + diff, plotAreaBox.y1,\n                scaleBox.x2 + diff, plotAreaBox.y2\n            ));\n        } else {\n            diff = plotAreaBox.center().y - box.center().y;\n            scale.reflow(new Box(\n                scaleBox.x1, scaleBox.y1 + diff,\n                scaleBox.x2, scaleBox.y2 + diff\n            ));\n        }\n\n        for (var i$1 = 0; i$1 < pointers.length; i$1++) {\n            pointers[i$1].reflow(this$1.bbox);\n        }\n    },\n\n    _shrinkScaleWidth: function(bbox) {\n        var ref = this;\n        var scale = ref.scale;\n        if (!scale.options.vertical) {\n            var overflow = scale.contentBox().width() - bbox.width();\n            if (overflow > 0) {\n                scale.box.shrink(overflow, 0);\n                scale.box.alignTo(bbox, 'center');\n                scale.reflow(scale.box);\n            }\n        }\n    },\n\n    _shrinkElements: function() {\n        var this$1 = this;\n\n        var ref = this;\n        var scale = ref.scale;\n        var pointers = ref.pointers;\n        var scaleBox = scale.box.clone();\n        var pos = scale.options.vertical ? \"y\" : \"x\";\n        var pointerBox = pointers[0].box;\n\n        for (var i = 0; i < pointers.length; i++) {\n            pointerBox.wrap(pointers[i].box.clone());\n        }\n\n        scaleBox[pos + 1] += Math.max(scaleBox[pos + 1] - pointerBox[pos + 1], 0);\n        scaleBox[pos + 2] -= Math.max(pointerBox[pos + 2] - scaleBox[pos + 2], 0);\n\n        scale.reflow(scaleBox);\n\n        for (var i$1 = 0; i$1 < pointers.length; i$1++) {\n            pointers[i$1].reflow(this$1.bbox);\n        }\n    }\n});\n\nsetDefaultOptions(LinearGauge, {\n    transitions: true,\n    gaugeArea: {\n        background: \"\"\n    },\n    scale: {\n        vertical: true\n    }\n});\n\nvar GEO_ARC_ADJUST_ANGLE = 180;\n\nvar Arc = drawing.Arc;\nvar Path$5 = DrawingPath;\nvar Group$5 = DrawingGroup;\n\nfunction drawTicks(arc, tickAngles, unit, tickOptions) {\n    var ticks = new Group$5();\n    var center = arc.center;\n    var radius = arc.getRadiusX();\n\n    if (tickOptions.visible) {\n        for (var i = 0; i < tickAngles.length; i++) {\n            var tickStart = arc.pointAt(tickAngles[i]);\n            var tickEnd = new GeometryPoint(center.x + radius - tickOptions.size, center.y).rotate(tickAngles[i], center);\n\n            ticks.append(new Path$5({\n                stroke: {\n                    color: tickOptions.color,\n                    width: tickOptions.width\n                }\n            }).moveTo(tickStart).lineTo(tickEnd));\n        }\n    }\n\n    return ticks;\n}\n\nfunction rangeSegment(from, to, color, opacity) {\n    return { from: from, to: to, color: color, opacity: opacity };\n}\n\nvar RadialScale = NumericAxis.extend({\n    init: function(options, service) {\n        NumericAxis.fn.init.call(this, 0, 1, options, service);\n    },\n\n    initUserOptions: function(options) {\n        var scaleOptions = deepExtend({}, this.options, options);\n        scaleOptions.majorUnit = scaleOptions.majorUnit || dataviz.autoMajorUnit(scaleOptions.min, scaleOptions.max);\n        scaleOptions.minorUnit = scaleOptions.minorUnit || scaleOptions.majorUnit / 10;\n\n        return scaleOptions;\n    },\n\n    initFields: function() {\n    },\n\n    render: function(center, radius) {\n        var arc = this.renderArc(center, radius);\n\n        this.bbox = arc.bbox();\n        this.labelElements = this.renderLabels();\n        this.ticks = this.renderTicks();\n        this.ranges = this.renderRanges();\n    },\n\n    reflow: function(bbox) {\n        var center = bbox.center();\n        var radius = Math.min(bbox.height(), bbox.width()) / 2;\n\n        if (defined(this.bbox)) {\n            this.bbox = this.arc.bbox();\n            this.radius(this.arc.getRadiusX());\n            this.repositionRanges();\n            this.renderLabels();\n        } else {\n            return this.render(center, radius);\n        }\n    },\n\n    slotAngle: function(value) {\n        var ref = this.options;\n        var min = ref.min;\n        var max = ref.max;\n        var reverse = ref.reverse;\n        var startAngle = ref.startAngle;\n        var endAngle = ref.endAngle;\n        var angle = endAngle - startAngle;\n        var result;\n\n        if (reverse) {\n            result = endAngle - (value - min) / (max - min) * angle;\n        } else {\n            result = ((value - min) / (max - min) * angle) + startAngle;\n        }\n\n        return result + GEO_ARC_ADJUST_ANGLE;\n    },\n\n    hasRanges: function() {\n        var ranges = this.options.ranges;\n\n        return ranges && ranges.length;\n    },\n\n    ticksSize: function() {\n        var ref = this.options;\n        var majorTicks = ref.majorTicks;\n        var minorTicks = ref.minorTicks;\n        var size = 0;\n        if (majorTicks.visible) {\n            size = majorTicks.size;\n        }\n\n        if (minorTicks.visible) {\n            size = Math.max(minorTicks.size, size);\n        }\n\n        return size;\n    },\n\n    labelsCount: function() {\n        var count = NumericAxis.fn.labelsCount.call(this);\n        var options = this.options;\n        var angle = options.endAngle - options.startAngle;\n\n        if (angle >= 360 && (options.max % options.majorUnit === 0)) {\n            count -= 1;\n        }\n\n        return count;\n    },\n\n    renderLabels: function() {\n        var this$1 = this;\n\n        var options = this.options;\n        var arc = this.arc.clone();\n        var radius = arc.getRadiusX();\n        var tickAngles = this.tickAngles(arc, options.majorUnit);\n        var rangeSize = options.rangeSize = options.rangeSize || radius * 0.1;\n        var labelsGroup = new Group$5();\n\n        var rangeDistance = radius * 0.05;\n        if (defined(options.rangeDistance)) {\n            rangeDistance = options.rangeDistance;\n        } else {\n            options.rangeDistance = rangeDistance;\n        }\n\n        var labelsOptions = options.labels;\n        var isInside = labelsOptions.position === INSIDE;\n        var hasLabelElements = defined(this.labelElements);\n\n        if (isInside) {\n            radius -= this.ticksSize();\n\n            if (this.hasRanges() && !hasLabelElements) {\n                radius -= rangeSize + rangeDistance;\n            }\n            arc.setRadiusX(radius).setRadiusY(radius);\n        }\n\n        var labels = this.labels;\n        var count = labels.length;\n        var padding = getSpacing(labelsOptions.padding);\n        var paddingWidth = (padding.left + padding.right) / 2;\n        var paddingHeight = (padding.top + padding.bottom) / 2;\n\n        for (var i = 0; i < count; i++) {\n            var label = labels[i];\n            var halfWidth = label.box.width() / 2;\n            var halfHeight = label.box.height() / 2;\n            var angle = tickAngles[i];\n            var labelAngle = (angle - GEO_ARC_ADJUST_ANGLE) * DEGREE;\n\n            var lp = arc.pointAt(angle);\n            var cx = lp.x + (Math.cos(labelAngle) * (halfWidth + paddingWidth) * (isInside ? 1 : -1));\n            var cy = lp.y + (Math.sin(labelAngle) * (halfHeight + paddingHeight) * (isInside ? 1 : -1));\n\n            label.reflow(new Box(cx - halfWidth, cy - halfHeight, cx + halfWidth, cy + halfHeight));\n            var labelPos = new GeometryPoint(label.box.x1, label.box.y1);\n\n            var labelElement = (void 0);\n            if (!hasLabelElements) {\n                labelElement = buildLabelElement(label, options.labels);\n                labelsGroup.append(labelElement);\n            } else {\n                labelElement = this$1.labelElements.children[i];\n                var prevLabelPos = labelElement.bbox().origin;\n\n                var labelTransform = labelElement.transform() || transform();\n                labelTransform.translate(labelPos.x - prevLabelPos.x, labelPos.y - prevLabelPos.y);\n                labelElement.transform(labelTransform);\n            }\n\n            this$1.bbox = Rect.union(this$1.bbox, labelElement.bbox());\n        }\n\n        return labelsGroup;\n    },\n\n    repositionRanges: function() {\n        var ranges = this.ranges.children;\n\n        if (ranges.length > 0) {\n            var ref = this.options;\n            var rangeDistance = ref.rangeDistance;\n            var rangeSize = ref.rangeSize;\n            var rangeRadius = this.getRangeRadius();\n\n            if (this.options.labels.position === INSIDE) {\n                rangeRadius += rangeSize + rangeDistance;\n            }\n\n            var newRadius = rangeRadius + (rangeSize / 2);\n\n            for (var i = 0; i < ranges.length; i++) {\n                ranges[i]._geometry.setRadiusX(newRadius).setRadiusY(newRadius);\n            }\n\n            this.bbox = Rect.union(this.bbox, this.ranges.bbox());\n        }\n    },\n\n    renderRanges: function() {\n        var this$1 = this;\n\n        var segments = this.rangeSegments();\n        var segmentsCount = segments.length;\n        var result = new Group$5();\n\n        if (segmentsCount) {\n            var ref = this.options;\n            var rangeSize = ref.rangeSize;\n            var reverse = ref.reverse;\n            var rangeDistance = ref.rangeDistance;\n            var rangeRadius = this.getRangeRadius();\n\n            // move the ticks with a range distance and a range size\n            this.radius(this.radius() - rangeSize - rangeDistance);\n\n            for (var i = 0; i < segmentsCount; i++) {\n                var segment = segments[i];\n                var from = this$1.slotAngle(segment[reverse ? \"to\" : \"from\"]);\n                var to = this$1.slotAngle(segment[!reverse ? \"to\" : \"from\"]);\n\n                if (to - from !== 0) {\n                    result.append(this$1.createRange(from, to, rangeRadius, segment));\n                }\n            }\n        }\n\n        return result;\n    },\n\n    createRange: function(startAngle, endAngle, rangeRadius, options) {\n        var rangeSize = this.options.rangeSize;\n        var rangeGeom = new geometry.Arc(this.arc.center, {\n            radiusX: rangeRadius + (rangeSize / 2),\n            radiusY: rangeRadius + (rangeSize / 2),\n            startAngle: startAngle,\n            endAngle: endAngle\n        });\n\n        return new Arc(rangeGeom, {\n            stroke: {\n                width: rangeSize,\n                color: options.color,\n                opacity: options.opacity,\n                lineCap: options.lineCap\n            }\n        });\n    },\n\n    rangeSegments: function() {\n        var options = this.options;\n        var ranges = options.ranges || [];\n        var count = ranges.length;\n        var segments = [];\n\n        if (count) {\n            var min = options.min;\n            var max = options.max;\n            var defaultColor = options.rangePlaceholderColor;\n            segments.push(rangeSegment(min, max, defaultColor));\n\n            for (var i = 0; i < count; i++) {\n                var range = getRange(ranges[i], min, max);\n                var segmentsCount = segments.length;\n\n                for (var j = 0; j < segmentsCount; j++) {\n                    var segment = segments[j];\n\n                    if (segment.from <= range.from && range.from <= segment.to) {\n                        segments.push(rangeSegment(range.from, range.to, range.color, range.opacity));\n\n                        if (segment.from <= range.to && range.to <= segment.to) {\n                            segments.push(rangeSegment(range.to, segment.to, defaultColor, range.opacity));\n                        }\n\n                        segment.to = range.from;\n\n                        break;\n                    }\n                }\n            }\n        }\n\n        return segments;\n    },\n\n    getRangeRadius: function() {\n        var ref = this;\n        var arc = ref.arc;\n        var options = ref.options;\n        var rangeSize = options.rangeSize;\n        var rangeDistance = options.rangeDistance;\n        var majorTickSize = options.majorTicks.size;\n        var radius;\n\n        if (options.labels.position === OUTSIDE) {\n            radius = arc.getRadiusX() - majorTickSize - rangeDistance - rangeSize;\n        } else {\n            radius = arc.getRadiusX() - rangeSize;\n        }\n\n        return radius;\n    },\n\n    renderArc: function(center, radius) {\n        var options = this.options;\n\n        var arc = this.arc = new geometry.Arc(center, {\n            radiusX: radius,\n            radiusY: radius,\n            startAngle: options.startAngle + GEO_ARC_ADJUST_ANGLE,\n            endAngle: options.endAngle + GEO_ARC_ADJUST_ANGLE\n        });\n\n        return arc;\n    },\n\n    renderTicks: function() {\n        var ref = this;\n        var arc = ref.arc;\n        var options = ref.options;\n        var tickArc = arc.clone();\n\n        this.majorTickAngles = this.tickAngles(arc, options.majorUnit);\n        this.majorTicks = drawTicks(tickArc, this.majorTickAngles, options.majorUnit, options.majorTicks);\n\n        var allTicks = new Group$5();\n        allTicks.append(this.majorTicks);\n\n        var majorTickSize = options.majorTicks.size;\n        var minorTickSize = options.minorTicks.size;\n\n        this._tickDifference = majorTickSize - minorTickSize;\n\n        if (options.labels.position === OUTSIDE) {\n            var radius = tickArc.getRadiusX();\n            tickArc.setRadiusX(radius - majorTickSize + minorTickSize)\n                   .setRadiusY(radius - majorTickSize + minorTickSize);\n        }\n\n        this.minorTickAngles = this.normalizeTickAngles(this.tickAngles(arc, options.minorUnit));\n        this.minorTicks = drawTicks(tickArc, this.minorTickAngles, options.minorUnit, options.minorTicks);\n        allTicks.append(this.minorTicks);\n\n        return allTicks;\n    },\n\n    normalizeTickAngles: function(angles) {\n        var options = this.options;\n        var skip = options.majorUnit / options.minorUnit;\n\n        for (var i = angles.length - 1; i >= 0; i--) {\n            if (i % skip === 0) {\n                angles.splice(i, 1);\n            }\n        }\n\n        return angles;\n    },\n\n    tickAngles: function(ring, stepValue) {\n        var options = this.options;\n        var reverse = options.reverse;\n        var range = options.max - options.min;\n        var angle = ring.endAngle - ring.startAngle;\n        var tickCount = range / stepValue;\n        var pos = ring.startAngle;\n        var step = angle / tickCount;\n\n        if (reverse) {\n            pos += angle;\n            step = -step;\n        }\n\n        if (angle >= 360 && (options.max % stepValue === 0)) {\n            tickCount -= 1;\n        }\n\n        var positions = [];\n        for (var i = 0; i < tickCount; i++) {\n            positions.push(round(pos, COORD_PRECISION));\n            pos += step;\n        }\n\n        if (round(pos) <= ring.endAngle) {\n            positions.push(pos);\n        }\n\n        return positions;\n    },\n\n    radius: function(value) {\n        if (value) {\n            this.arc.setRadiusX(value).setRadiusY(value);\n            this.repositionTicks(this.majorTicks.children, this.majorTickAngles);\n            this.repositionTicks(this.minorTicks.children, this.minorTickAngles, true);\n        } else {\n            return this.arc.getRadiusX();\n        }\n    },\n\n    repositionTicks: function(ticks, tickAngles, minor) {\n        var diff = minor ? (this._tickDifference || 0) : 0;\n        var tickArc = this.arc;\n        var radius = tickArc.getRadiusX();\n\n        if (minor && this.options.labels.position === OUTSIDE && diff !== 0) {\n            tickArc = this.arc.clone();\n            tickArc.setRadiusX(radius - diff).setRadiusY(radius - diff);\n        }\n\n        for (var i = 0; i < ticks.length; i++) {\n            var newPoint = tickArc.pointAt(tickAngles[i]);\n            var segments = ticks[i].segments;\n            var xDiff = newPoint.x - segments[0].anchor().x;\n            var yDiff = newPoint.y - segments[0].anchor().y;\n\n            ticks[i].transform(new transform().translate(xDiff, yDiff));\n        }\n    }\n});\n\nsetDefaultOptions(RadialScale, {\n    min: 0,\n    max: 100,\n\n    majorTicks: {\n        size: 15,\n        align: INSIDE,\n        color: BLACK,\n        width: DEFAULT_LINE_WIDTH,\n        visible: true\n    },\n\n    minorTicks: {\n        size: 10,\n        align: INSIDE,\n        color: BLACK,\n        width: DEFAULT_LINE_WIDTH,\n        visible: true\n    },\n\n    startAngle: -30,\n    endAngle: 210,\n\n    labels: {\n        position: INSIDE,\n        padding: 2\n    }\n});\n\nvar RadialPointerAnimation = Animation.extend({\n    init: function(element, options) {\n        Animation.fn.init.call(this, element, options);\n\n        var animationOptions = this.options;\n\n        animationOptions.duration = Math.max((Math.abs(animationOptions.newAngle - animationOptions.oldAngle) / animationOptions.duration) * 1000, 1);\n    },\n\n    step: function(pos) {\n        var options = this.options;\n        var angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n\n        this.element.transform(transform().rotate(angle, options.center));\n    }\n});\n\nsetDefaultOptions(RadialPointerAnimation, {\n    easing: LINEAR,\n    duration: ANGULAR_SPEED\n});\n\nAnimationFactory.current.register(RADIAL_POINTER, RadialPointerAnimation);\n\nvar CAP_SIZE = 0.05;\nvar Circle = drawing.Circle;\nvar Group$6 = DrawingGroup;\nvar Path$6 = DrawingPath;\n\nvar RadialPointer = Pointer.extend({\n    setAngle: function(angle) {\n        this.elements.transform(transform().rotate(angle, this.center));\n    },\n\n    repaint: function() {\n        var ref = this;\n        var scale = ref.scale;\n        var options = ref.options;\n        var oldAngle = scale.slotAngle(options._oldValue);\n        var newAngle = scale.slotAngle(options.value);\n\n        if (options.animation.transitions === false) {\n            this.setAngle(newAngle);\n        } else {\n            new RadialPointerAnimation(this.elements, deepExtend(options.animation, {\n                oldAngle: oldAngle,\n                newAngle: newAngle\n            })).play();\n        }\n    },\n\n    render: function() {\n        var ref = this;\n        var scale = ref.scale;\n        var options = ref.options;\n        var elements = new Group$6();\n\n        if (options.animation !== false) {\n            deepExtend(options.animation, {\n                startAngle: 0,\n                center: scale.arc.center,\n                reverse: scale.options.reverse\n            });\n        }\n\n        elements.append(this._renderNeedle(), this._renderCap());\n\n        this.elements = elements;\n        this.setAngle(DEGREE);\n\n        return elements;\n    },\n\n    reflow: function(arc) {\n        var center = this.center = arc.center;\n        var length = limitValue(this.options.length || 1, 0.1, 1.5);\n        var radius = this.radius = arc.getRadiusX() * length;\n        var capSize = this.capSize = Math.round(radius * this.options.cap.size);\n\n        this.bbox = Rect.fromPoints(new GeometryPoint(center.x - capSize, center.y - capSize),\n                                    new GeometryPoint(center.x + capSize, center.y + capSize));\n    },\n\n    _renderNeedle: function() {\n        var minorTickSize = this.scale.options.minorTicks.size;\n        var center = this.center;\n        var needleColor = this.options.color;\n\n        var needlePath = new Path$6({\n            fill: { color: needleColor },\n            stroke: { color: needleColor, width: DEFAULT_LINE_WIDTH }\n        });\n\n        needlePath.moveTo(center.x + this.radius - minorTickSize, center.y)\n                  .lineTo(center.x, center.y - (this.capSize / 2))\n                  .lineTo(center.x, center.y + (this.capSize / 2))\n                  .close();\n\n        return needlePath;\n    },\n\n    _renderCap: function() {\n        var options = this.options;\n        var capColor = options.cap.color || options.color;\n        var circle = new geometry.Circle(this.center, this.capSize);\n\n        var cap = new Circle(circle, {\n            fill: { color: capColor },\n            stroke: { color: capColor }\n        });\n\n        return cap;\n    }\n});\n\nsetDefaultOptions(RadialPointer, {\n    cap: {\n        size: CAP_SIZE\n    },\n    arrow: {\n        width: 16,\n        height: 14\n    },\n    animation: {\n        type: RADIAL_POINTER,\n        duration: ANGULAR_SPEED\n    }\n});\n\nvar Group$4 = DrawingGroup;\n\nvar RadialGauge = Gauge.extend({\n    reflow: function(bbox) {\n        var this$1 = this;\n\n        var pointers = this.pointers;\n        this.scale.reflow(bbox);\n        this._initialPlotArea = this.scale.bbox;\n\n        for (var i = 0; i < pointers.length; i++) {\n            pointers[i].reflow(this$1.scale.arc);\n            this$1._initialPlotArea = Rect.union(this$1._initialPlotArea, pointers[i].bbox);\n        }\n\n        this.fitScale(bbox);\n        this.alignScale(bbox);\n        this._buildVisual(this.gaugeArea, pointers, this.scale);\n        this._draw();\n    },\n\n    _buildVisual: function(gaugeArea, pointers, scale) {\n        var visuals = this._visuals = new Group$4();\n\n        visuals.append(gaugeArea);\n        visuals.append(scale.ticks);\n        visuals.append(scale.ranges);\n        this._buildPointers(pointers);\n        visuals.append(scale.labelElements);\n    },\n\n    _buildPointers: function(pointers) {\n        var this$1 = this;\n\n        for (var i = 0; i < pointers.length; i++) {\n            var current = pointers[i];\n            current.render();\n            this$1._visuals.append(current.elements);\n\n            current.value(current.options.value);\n        }\n    },\n\n    fitScale: function(bbox) {\n        var this$1 = this;\n\n        var arc = this.scale.arc;\n        var plotAreaBox = this._initialPlotArea;\n        var step = Math.abs(this.getDiff(plotAreaBox, bbox));\n        var min = round(step, COORD_PRECISION);\n        var max = round(-step, COORD_PRECISION);\n        var minDiff, midDiff, maxDiff, mid, oldDiff;\n        var staleFlag = 0;\n        var i = 0;\n\n        while (i++ < 100) {\n            staleFlag = (oldDiff === maxDiff) ? (staleFlag + 1) : 0;\n\n            if (staleFlag > 5) {\n                break;\n            }\n\n            if (min !== mid) {\n                minDiff = this$1.getPlotBox(min, bbox, arc);\n                if (0 <= minDiff && minDiff <= 2) {\n                    break;\n                }\n            }\n\n            if (max !== mid) {\n                maxDiff = this$1.getPlotBox(max, bbox, arc);\n                if (0 <= maxDiff && maxDiff <= 2) {\n                    break;\n                }\n            }\n\n            if (minDiff > 0 && maxDiff > 0) {\n                mid = min * 2;\n            } else if (minDiff < 0 && maxDiff < 0) {\n                mid = max * 2;\n            } else {\n                mid = round(((min + max) / 2) || 1, COORD_PRECISION);\n            }\n\n            midDiff = this$1.getPlotBox(mid, bbox, arc);\n            if (0 <= midDiff && midDiff <= 2) {\n                break;\n            }\n\n            oldDiff = maxDiff;\n\n            if (midDiff > 0) {\n                max = mid;\n                maxDiff = midDiff;\n            } else {\n                min = mid;\n                minDiff = midDiff;\n            }\n        }\n    },\n\n    getPlotBox: function(step, bbox, arc) {\n        var this$1 = this;\n\n        var scale = this.scale;\n        var pointers = this.pointers;\n        var radius = arc.getRadiusX();\n        var scaleArc = arc.clone();\n\n        scaleArc.setRadiusX(radius + step).setRadiusY(radius + step);\n\n        scale.arc = scaleArc;\n        scale.reflow(bbox);\n        this.plotBbox = scale.bbox;\n\n        for (var i = 0; i < pointers.length; i++) {\n            pointers[i].reflow(scaleArc);\n            this$1.plotBbox = Rect.union(this$1.plotBbox, pointers[i].bbox);\n        }\n\n        return this.getDiff(this.plotBbox, bbox);\n    },\n\n    getDiff: function(plotBox, box) {\n        return Math.min(box.width() - plotBox.width(), box.height() - plotBox.height());\n    },\n\n    alignScale: function(bbox) {\n        var this$1 = this;\n\n        var plotBoxCenter = this.plotBbox.center();\n        var boxCenter = bbox.center();\n        var paddingX = plotBoxCenter.x - boxCenter.x;\n        var paddingY = plotBoxCenter.y - boxCenter.y;\n        var ref = this;\n        var scale = ref.scale;\n        var pointers = ref.pointers;\n\n        scale.arc.center.x -= paddingX;\n        scale.arc.center.y -= paddingY;\n\n        scale.reflow(bbox);\n\n        for (var i = 0; i < pointers.length; i++) {\n            pointers[i].reflow(scale.arc);\n            this$1.plotBbox = Rect.union(scale.bbox, pointers[i].bbox);\n        }\n    },\n\n    _createModel: function() {\n        var this$1 = this;\n\n        var options = this.options;\n        var pointers = options.pointer;\n        var scale = this.scale = new RadialScale(options.scale, this.contextService);\n\n        this.pointers = [];\n\n        var pointersArr = isArray(pointers) ? pointers : [ pointers ];\n        for (var i = 0; i < pointersArr.length; i++) {\n            var current = new RadialPointer(scale, deepExtend({}, pointersArr[i], {\n                animation: {\n                    transitions: options.transitions\n                }\n            }));\n\n            this$1.pointers.push(current);\n        }\n    }\n});\n\nsetDefaultOptions(RadialGauge, {\n    transitions: true,\n    gaugeArea: {\n        background: \"\"\n    }\n});\n\nvar ArcScale = RadialScale.extend({\n    rangeSegments: function() {\n        var ref = this.options;\n        var min = ref.min;\n        var max = ref.max;\n        var rangePlaceholderColor = ref.rangePlaceholderColor;\n        var rangeLineCap = ref.rangeLineCap;\n\n        return [ { from: min, to: max, color: rangePlaceholderColor, lineCap: rangeLineCap } ];\n    },\n\n    hasRanges: function() {\n        return true;\n    },\n\n    placeholderRangeAngle: function(angle) {\n        var geometry$$1 = this.ranges.children[0].geometry();\n\n        if (this.options.reverse) {\n            geometry$$1.setEndAngle(angle);\n        } else {\n            geometry$$1.setStartAngle(angle);\n        }\n    },\n\n    addRange: function(from, to, options) {\n        var reverse = this.options.reverse;\n\n        var startAngle = this.slotAngle(reverse ? to : from);\n        var endAngle = this.slotAngle(reverse ? from : to);\n\n        var range = this.createRange(startAngle, endAngle, this.getRangeRadius(), options);\n\n        this.ranges.append(range);\n\n        return range;\n    }\n});\n\nsetDefaultOptions(ArcScale, {\n    min: 0,\n    max: 100,\n\n    majorTicks: {\n        visible: false\n    },\n\n    minorTicks: {\n        visible: false\n    },\n\n    labels: {\n        visible: false\n    },\n\n    startAngle: 0,\n    endAngle: 180,\n    rangeLineCap: 'round'\n});\n\nvar MAX_DURATION = 800;\n\nvar RangePointerAnimation = Animation.extend({\n    init: function(element, options) {\n        Animation.fn.init.call(this, element, options);\n\n        var animationOptions = this.options;\n        var duration = (Math.abs(animationOptions.newAngle - animationOptions.oldAngle) / animationOptions.duration) * 1000;\n        animationOptions.duration = limitValue(duration, ANGULAR_SPEED, MAX_DURATION);\n\n        var startColor = element.elements.options.get(\"stroke.color\");\n        var color = element.currentColor();\n        if (startColor !== color) {\n            this.startColor = new kendo.Color(startColor);\n            this.color = new kendo.Color(color);\n        }\n    },\n\n    step: function(pos) {\n        var ref = this;\n        var options = ref.options;\n        var startColor = ref.startColor;\n        var color = ref.color;\n        var angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n        this.element.angle(angle);\n\n        if (color) {\n            var r = round(interpolateValue(startColor.r, color.r, pos));\n            var g = round(interpolateValue(startColor.g, color.g, pos));\n            var b = round(interpolateValue(startColor.b, color.b, pos));\n\n            this.element.stroke(new kendo.Color(r, g, b).toHex());\n        }\n    }\n});\n\nsetDefaultOptions(RangePointerAnimation, {\n    easing: LINEAR,\n    duration: ANGULAR_SPEED\n});\n\nAnimationFactory.current.register(RADIAL_RANGE_POINTER, RangePointerAnimation);\n\nvar RangePointer = Pointer.extend({\n    repaint: function() {\n        var ref = this;\n        var scale = ref.scale;\n        var options = ref.options;\n        var oldAngle = scale.slotAngle(options._oldValue);\n        var newAngle = scale.slotAngle(options.value);\n\n        if (this.animation) {\n            this.animation.abort();\n        }\n\n        if (options.animation.transitions === false) {\n            this.angle(newAngle);\n            this.stroke(this.currentColor());\n        } else {\n            this.animation = new RangePointerAnimation(this, deepExtend(options.animation, {\n                oldAngle: oldAngle,\n                newAngle: newAngle\n            }));\n\n            this.animation.play();\n        }\n    },\n\n    angle: function(value) {\n        var geometry$$1 = this.elements.geometry();\n        if (this.scale.options.reverse) {\n            geometry$$1.setStartAngle(value);\n        } else {\n            geometry$$1.setEndAngle(value);\n        }\n        this.scale.placeholderRangeAngle(value);\n    },\n\n    stroke: function(value) {\n        this.elements.stroke(value);\n    },\n\n    render: function() {\n        if (this.elements) {\n            return;\n        }\n\n        var ref = this;\n        var scale = ref.scale;\n        var options = ref.options;\n\n        if (options.animation !== false) {\n            deepExtend(options.animation, {\n                startAngle: 0,\n                center: scale.arc.center,\n                reverse: scale.options.reverse\n            });\n        }\n\n        this.elements = scale.addRange(scale.options.min, this.options.value, {\n            color: this.currentColor(),\n            opacity: options.opacity,\n            lineCap: scale.options.rangeLineCap\n        });\n    },\n\n    currentColor: function() {\n        var ref = this.scale.options;\n        var min = ref.min;\n        var max = ref.max;\n        var ref$1 = this.options;\n        var colors = ref$1.colors;\n        var color = ref$1.color;\n        var value = ref$1.value;\n        var currentValue = dataviz.isNumber(value) ? value : min;\n\n        if (colors) {\n            for (var idx = 0; idx < colors.length; idx++) {\n                var ref$2 = colors[idx];\n                var rangeColor = ref$2.color;\n                var from = ref$2.from; if (from === void 0) { from = min; }\n                var to = ref$2.to; if (to === void 0) { to = max; }\n\n                if (from <= currentValue && currentValue <= to) {\n                    return rangeColor;\n                }\n            }\n        }\n\n        return color;\n    },\n\n    reflow: function() {\n        this.render();\n\n        this.bbox = this.elements.bbox();\n    }\n});\n\nsetDefaultOptions(RangePointer, {\n    animation: {\n        type: RADIAL_RANGE_POINTER,\n        duration: ANGULAR_SPEED\n    }\n});\n\nvar ArcGauge = RadialGauge.extend({\n    _initTheme: function(theme) {\n        RadialGauge.fn._initTheme.call(this, theme);\n\n        this.options.color = this.options.color || (this.theme.pointer || {}).color;\n    },\n\n    _createModel: function() {\n        var options = this.options;\n        var scale = this.scale = new ArcScale(options.scale, this.contextService);\n\n        var pointer = new RangePointer(scale, deepExtend({}, {\n            colors: options.colors,\n            color: options.color,\n            value: options.value,\n            opacity: options.opacity,\n            animation: {\n                transitions: options.transitions\n            }\n        }));\n\n        this.pointers = [ pointer ];\n    },\n\n    _buildPointers: function(pointers) {\n        for (var i = 0; i < pointers.length; i++) {\n            var current = pointers[i];\n            current.render();\n\n            current.value(current.options.value);\n        }\n    },\n\n    _setValueOptions: function(value) {\n        this.options.value = value;\n    },\n\n    currentColor: function() {\n        var pointer = this.pointers[0];\n        if (pointer) {\n            return pointer.currentColor();\n        }\n    },\n\n    centerLabelPosition: function(width, height) {\n        var size = this.getSize();\n        var center = this.scale.arc.center;\n\n        var left = center.x - width / 2;\n        var top = center.y - height / 2;\n\n        if (width < size.width) {\n            var right = left + width;\n\n            left = Math.max(left, 0);\n\n            if (right > size.width) {\n                left -= right - size.width;\n            }\n        }\n\n        if (height < size.height) {\n            var bbox = this.scale.bbox;\n            var yLimit = bbox.bottomRight().y;\n            var bottom = top + height;\n\n            top = Math.max(top, bbox.origin.y);\n\n            if (bottom > yLimit) {\n                top -= bottom - yLimit;\n            }\n        }\n\n        return {\n            left: left,\n            top: top\n        };\n    }\n});\n\nvar defaultStartAngle = 90;\n\nvar CircularGauge = ArcGauge.extend({\n    _createModel: function() {\n        var scaleOptions = this.options.scale;\n        if (typeof scaleOptions.startAngle !== 'number') {\n            scaleOptions.startAngle = defaultStartAngle;\n        }\n\n        scaleOptions.endAngle = scaleOptions.startAngle + 360;\n\n        ArcGauge.fn._createModel.call(this);\n    }\n});\n\nkendo.deepExtend(kendo.dataviz, {\n    Gauge: Gauge,\n    LinearGauge: LinearGauge,\n    LinearPointer: LinearPointer,\n    ArrowLinearPointer: ArrowLinearPointer,\n    BarLinearPointer: BarLinearPointer,\n    LinearScale: LinearScale,\n    RadialGauge: RadialGauge,\n    RadialPointer: RadialPointer,\n    RadialScale: RadialScale,\n    ArcGauge: ArcGauge,\n    RangePointer: RangePointer,\n    ArcScale: ArcScale,\n    CircularGauge: CircularGauge\n});\n\n})(window.kendo.jQuery);\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n(function(f, define) {\n    define('dataviz/gauge/main',[\n        \"./kendo-gauges\"\n    ], f);\n})(function() {\n\n(function($) {\n    var kendo = window.kendo;\n    var Widget = kendo.ui.Widget;\n    var dataviz = kendo.dataviz;\n    var LinearGauge = dataviz.LinearGauge;\n    var RadialGauge = dataviz.RadialGauge;\n    var ArcGauge = dataviz.ArcGauge;\n    var CircularGauge = dataviz.CircularGauge;\n    var draw = kendo.drawing;\n\n    function themeOptions(options) {\n        var themes = dataviz.ui.themes || {};\n        var themeName = options.theme || \"\";\n        var lowerName = themeName.toLowerCase();\n\n        if (dataviz.SASS_THEMES.indexOf(lowerName) != -1) {\n            return dataviz.autoTheme().gauge;\n        }\n\n        return (themes[themeName] || themes[lowerName] || {}).gauge;\n    }\n\n    var Gauge = Widget.extend({\n        init: function(element, userOptions) {\n            kendo.destroy(element);\n            $(element).empty();\n\n            Widget.fn.init.call(this, element);\n\n            this.options = kendo.deepExtend(this.options, userOptions);\n\n            this.wrapper = this.element;\n            this._createInstance();\n\n            this.element.addClass('k-gauge');\n\n            kendo.notify(this, dataviz.ui);\n        },\n\n        options: {\n            theme: \"default\",\n            renderAs: \"\",\n            pointer: {},\n            scale: {},\n            gaugeArea: {\n                background: \"\"\n            },\n            transitions: true\n        },\n\n        setOptions: function(options) {\n            this._instance.setOptions(options, themeOptions(options));\n\n            this._copyFields();\n        },\n\n        redraw: function() {\n            this._instance.redraw();\n            this._copyFields();\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n            this._instance.destroy();\n        },\n\n        _createInstance: function() {\n            var gaugeType = this._gaugeType();\n            this._instance = new gaugeType(this.element[0], this.options, themeOptions(this.options));\n            this._copyFields();\n        },\n\n        _copyFields: function() {\n            this._originalOptions = this._instance._originalOptions;\n            this.options = this._instance.options;\n            this.surface = this._instance.surface;\n            this.bbox = this._instance.bbox;\n            this.gaugeArea = this._instance.gaugeArea;\n            this.pointers = this._instance.pointers;\n            this.scale = this._instance.scale;\n        },\n\n        _resize: function() {\n            this._instance.resize();\n        }\n    });\n\n    var proxyMembers = [\"getSize\", \"value\", \"allValues\", \"exportVisual\"];\n\n    function createProxyMember(name) {\n        Gauge.fn[name] = function() {\n            return this._instance[name].apply(this._instance, arguments);\n        };\n    }\n\n    for (var idx = 0; idx < proxyMembers.length; idx++) {\n        createProxyMember(proxyMembers[idx]);\n    }\n\n    dataviz.ExportMixin.extend(Gauge.fn);\n\n    var RadialGaugeWidget = Gauge.extend({\n\n        options: {\n            name: \"RadialGauge\"\n        },\n\n        _gaugeType: function() {\n            return RadialGauge;\n        }\n    });\n\n    var LinearGaugeWidget = Gauge.extend({\n\n        options: {\n            name: \"LinearGauge\",\n            scale: {\n                vertical: true\n            }\n        },\n\n        _gaugeType: function() {\n            return LinearGauge;\n        }\n    });\n\n    var ArcGaugeWidget = Gauge.extend({\n        init: function(element, userOptions) {\n            Gauge.fn.init.call(this, element, userOptions);\n\n            this.element.css('position', 'relative');\n            this.element.addClass('k-arcgauge');\n\n            this._centerTemplate();\n        },\n\n        options: {\n            name: \"ArcGauge\"\n        },\n\n        setOptions: function(options) {\n            Gauge.fn.setOptions.call(this, options);\n            this._centerTemplate();\n        },\n\n        redraw: function() {\n            Gauge.fn.redraw.call(this);\n            this._centerTemplate();\n        },\n\n        value: function(value) {\n            var instance = this._instance;\n            if (arguments.length === 0) {\n                return instance.value();\n            }\n\n            instance.value(value);\n\n            this._centerTemplate();\n        },\n\n        destroy: function() {\n            Gauge.fn.destroy.call(this);\n            delete this._centerElement;\n        },\n\n        exportVisual: function() {\n            if (this._centerElement) {\n                return false;\n            }\n\n            return Gauge.fn.exportVisual.call(this);\n        },\n\n        _resize: function() {\n            this._instance.resize();\n\n            this._centerTemplate();\n        },\n\n        _centerTemplate: function() {\n            if (this.options.centerTemplate) {\n                var template = kendo.template(this.options.centerTemplate);\n\n                var instance = this._instance;\n                var centerElement = this._getCenterElement();\n\n                centerElement.html(template({ color: instance.currentColor(), value: instance.value() }));\n\n                var position = instance.centerLabelPosition(centerElement.width(), centerElement.height());\n\n                centerElement.css(position);\n            } else if (this._centerElement) {\n                this._centerElement.remove();\n                this._centerElement = null;\n            }\n        },\n\n        _getCenterElement: function() {\n            var centerElement = this._centerElement;\n            if (!centerElement) {\n                centerElement = this._centerElement = $('<div></div>').addClass('k-arcgauge-label');\n                this.element.append(centerElement);\n            }\n\n            return centerElement;\n        },\n\n        _gaugeType: function() {\n            return ArcGauge;\n        }\n    });\n\n    var CircularGaugeWidget = ArcGaugeWidget.extend({\n        options: {\n            name: \"CircularGauge\"\n        },\n\n        _gaugeType: function() {\n            return CircularGauge;\n        }\n    });\n\n    function createExportMethod(name) {\n        ArcGaugeWidget.fn[name] = function(options) {\n            var gauge = this;\n            var method = draw[name];\n\n            if (!gauge._centerElement) {\n                return method(gauge.exportVisual(), options);\n            }\n\n            return draw.drawDOM(gauge.element).then(function(visual) {\n                return method(visual, options);\n            });\n        };\n    }\n\n    var exportMethods = ['exportSVG', 'exportImage', 'exportPDF'];\n\n    for (idx = 0; idx < exportMethods.length; idx++) {\n        createExportMethod(exportMethods[idx]);\n    }\n\n    dataviz.ui.plugin(LinearGaugeWidget);\n    dataviz.ui.plugin(RadialGaugeWidget);\n    dataviz.ui.plugin(ArcGaugeWidget);\n    dataviz.ui.plugin(CircularGaugeWidget);\n\n    kendo.deepExtend(dataviz, {\n        Gauge: Gauge,\n        LinearGauge: LinearGaugeWidget,\n        RadialGauge: RadialGaugeWidget,\n        ArcGauge: ArcGaugeWidget,\n        CircularGauge: CircularGaugeWidget\n    });\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n\n(function(f, define) {\n    define('kendo.dataviz.gauge',[ \"./dataviz/gauge/main\", \"kendo.dataviz.themes\" ], f);\n})(function() {\n\nvar __meta__ = { // jshint ignore:line\n    id: \"dataviz.gauge\",\n    name: \"Gauge\",\n    category: \"dataviz\",\n    description: \"Linear, Radial and Arc gauges.\",\n    depends: [ \"dataviz.core\", \"dataviz.themes\" ]\n};\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n\n"],"names":["define","$","window","kendo","jQuery","dataviz","getSpacing","defined","constants","BLACK","COORD_PRECISION","services","deepExtend","isArray","setDefaultOptions","NumericAxis","limitValue","Box","interpolateValue","round","drawing","DrawingGroup","Group","DrawingPath","Path","Animation","AnimationFactory","geometry","Rect","GeometryPoint","Point","transform","ANGULAR_SPEED","LINEAR_SPEED","ARROW","ARROW_POINTER","BAR_POINTER","DEFAULT_HEIGHT","DEFAULT_LINE_WIDTH","DEFAULT_WIDTH","DEGREE","Math","PI","INSIDE","LINEAR","OUTSIDE","RADIAL_POINTER","RADIAL_RANGE_POINTER","pad","bbox","value","origin","getOrigin","size","getSize","spacing","setOrigin","x","left","y","top","setSize","width","right","height","bottom","Path$1","Text","buildLabelElement","label","options","labelBox","box","textBox","children","border","background","wrapper","fromRect","x1","y1","stroke","text","font","fill","color","styleGeometry","clone","padding","styleBox","opacity","dashType","lineJoin","lineCap","elements","append","getRange","range","min","max","from","MIN_VALUE","to","MAX_VALUE","unpad","DEFAULT_MARGIN","Surface","Gauge","Class","extend","init","element","userOptions","theme","context","this","contextService","ChartService","_originalOptions","_initTheme","redraw","destroy","surface","surfaceElement","pointerValue","pointer","pointers","arguments","length","_setValueOptions","_draw","clear","draw","_visuals","exportVisual","allValues","values","i","push","i$1","isNumber","concat","arrayValues","resize","noTransitionsRedraw","transitions","_toggleTransitions","_surfaceSize","_initSurface","gaugeArea","_createGaugeArea","_createModel","_gaugeAreaMargin","reflow","setOptions","setDirection","rtl","Boolean","type","setIntlService","intl","currentTheme","areaGeometry","margin","ref","_surfaceElement","elementSize","renderAs","create","_getSize","document","createElement","appendChild","defaultSize","_defaultSize","offsetWidth","offsetHeight","this$1","animation","Path$2","plotArea","scale","Group$2","renderAxisTick","tickRenderOptions","tickOptions","position","tickX","tickY","start","end","vertical","tickPath","moveTo","lineTo","renderTicks","tickGroup","tickPositions","count","visible","mirror","lineBox","skip","step","skipUnit","x2","LinearScale","service","scaleOptions","reverse","fn","call","minorUnit","majorUnit","initUserOptions","labels","autoMajorUnit","initFields","render","renderLabels","scaleLine","renderLine","scaleTicks","ranges","renderRanges","rangeSize","minorTicks","slot","getSlot","slotX","slotY","y2","line","linePath","ticks","majorTicks","getMajorTickPositions","getMinorTickPositions","Pointer","align","_alignLines","newValue","_oldValue","repaint","LinearPointer","track","ref$1","trackSize","pointerHalfSize","space","pointerBox","pointerRangeBox","trackBox","shape","getElementOptions","_margin","ArrowLinearPointerAnimation","setup","axis","fromScale","toScale","duration","distanceTo","pos","translateX","translateY","translate","Point$1","easing","current","register","Path$3","ArrowLinearPointer","pointerShape","halfSize","sign","play","elementOptions","close","BarLinearPointerAnimation","Y","X","newPoints","oldPoints","abs","speed","_set","setter","toUpperCase","points","Group$3","Path$4","BarLinearPointer","dir","minSlot","sizeAxis","p1","p2","p3","p4","pointerPath","oldShape","group","renderTrack","trackOptions","toRect","DEFAULT_MIN_WIDTH","DEFAULT_MIN_HEIGHT","Group$1","LinearGauge","bboxX","bboxY","_shrinkScaleWidth","_getBox","_alignElements","_shrinkElements","_buildVisual","visuals","scaleElements","currentOptions","pointerType","boxCenter","center","plotAreaBox","wrap","scaleBox","diff","overflow","contentBox","shrink","alignTo","GEO_ARC_ADJUST_ANGLE","Arc","Path$5","Group$5","drawTicks","arc","tickAngles","unit","radius","getRadiusX","tickStart","pointAt","tickEnd","rotate","rangeSegment","RadialScale","renderArc","labelElements","repositionRanges","slotAngle","startAngle","endAngle","angle","result","hasRanges","ticksSize","labelsCount","labelsGroup","rangeDistance","labelsOptions","isInside","hasLabelElements","setRadiusX","setRadiusY","paddingWidth","paddingHeight","halfWidth","halfHeight","labelAngle","lp","cx","cos","cy","sin","labelPos","labelElement","prevLabelPos","labelTransform","union","rangeRadius","getRangeRadius","newRadius","_geometry","segments","rangeSegments","segmentsCount","segment","createRange","rangeGeom","radiusX","radiusY","defaultColor","rangePlaceholderColor","j","majorTickSize","tickArc","majorTickAngles","allTicks","minorTickSize","_tickDifference","minorTickAngles","normalizeTickAngles","angles","splice","ring","stepValue","tickCount","positions","repositionTicks","minor","newPoint","xDiff","anchor","yDiff","RadialPointerAnimation","animationOptions","newAngle","oldAngle","CAP_SIZE","Circle","Group$6","Path$6","RadialPointer","setAngle","_renderNeedle","_renderCap","capSize","cap","fromPoints","needleColor","needlePath","capColor","circle","Group$4","arrow","RadialGauge","_initialPlotArea","fitScale","alignScale","_buildPointers","getDiff","minDiff","midDiff","maxDiff","mid","oldDiff","staleFlag","getPlotBox","scaleArc","plotBbox","plotBox","plotBoxCenter","paddingX","paddingY","pointersArr","ArcScale","rangeLineCap","placeholderRangeAngle","geometry$$1","setEndAngle","setStartAngle","addRange","MAX_DURATION","RangePointerAnimation","startColor","get","currentColor","Color","r","g","b","toHex","RangePointer","abort","colors","currentValue","idx","ref$2","rangeColor","ArcGauge","centerLabelPosition","yLimit","bottomRight","defaultStartAngle","CircularGauge","amd","a1","a2","a3","Widget","ui","themeOptions","themes","themeName","lowerName","toLowerCase","SASS_THEMES","indexOf","autoTheme","gauge","empty","_createInstance","addClass","notify","_instance","_copyFields","gaugeType","_gaugeType","_resize","proxyMembers","createProxyMember","name","apply","ExportMixin","RadialGaugeWidget","LinearGaugeWidget","ArcGaugeWidget","css","_centerTemplate","instance","_centerElement","centerTemplate","template","centerElement","_getCenterElement","html","remove","CircularGaugeWidget","createExportMethod","method","drawDOM","then","visual","exportMethods","plugin","__meta__","id","category","description","depends"],"mappings":"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"}