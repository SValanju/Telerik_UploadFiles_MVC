{"version":3,"file":"kendo.avatar.min.js","sources":["kendo.avatar.js"],"sourcesContent":["(function(f, define) {\n    define('kendo.avatar',[ \"kendo.core\" ], f);\n})(function() {\n\nvar __meta__ = { // jshint ignore:line\n    id: \"avatar\",\n    name: \"Avatar\",\n    category: \"web\",\n    description: \"The Avatar component represents an icon, text, or image rendered in a styled container.\",\n    depends: [ \"core\" ]\n};\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n\n        DASH = \"-\";\n\n    var AVATAR_STYLES = {\n        widget: \"k-widget\",\n        avatar: \"k-avatar\",\n        bordered: \"k-avatar-bordered\"\n    };\n\n    var AVATAR_TYPE = {\n        icon: \"icon\",\n        image: \"image\",\n        text: \"text\"\n    };\n\n    var Avatar = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            options = options || {};\n\n            Widget.fn.init.call(that, element, options);\n\n            this._fromMarkup();\n            this._wrapper();\n\n            if (this._markupContent && this._markupContent.length > 0) {\n                this._contentFromMarkup();\n            } else {\n                this._content();\n            }\n        },\n\n        options: {\n            name: \"Avatar\",\n            alt: null,\n            border: false,\n            className: null,\n            fillMode: \"solid\",\n            icon: null,\n            image: null,\n            rounded: \"full\",\n            size: \"medium\",\n            style: null,\n            text: null,\n            themeColor: \"primary\",\n            type: AVATAR_TYPE.text\n        },\n\n        events: [ ],\n\n        setOptions: function(options) {\n            var currentOptions = this.options,\n                wrapper = this.wrapper,\n                updatedOptions = $.extend({}, currentOptions, options);\n\n            Widget.fn.setOptions.call(this, options);\n\n            if (!updatedOptions[updatedOptions.type]) {\n                currentOptions = this._optionsFromWrapper(currentOptions);\n            }\n            if (updatedOptions.border === false) {\n                wrapper.removeClass(AVATAR_STYLES.bordered);\n            }\n\n            wrapper.empty();\n\n            this.options = currentOptions;\n            this._wrapper();\n            this._content();\n        },\n\n        _content: function() {\n            var span = this.wrapper.find(\"> span\"),\n                options = this.options,\n                type = options.type,\n                content;\n\n            if (type === AVATAR_TYPE.icon) {\n                content = $(\"<span class='k-icon k-i-\" + options.icon + \"'>\");\n            } else if (type === AVATAR_TYPE.image) {\n                content = $(\"<img src='\" + options.image + \"'>\");\n\n                if (options.alt) {\n                    content.attr(\"alt\", options.alt);\n                }\n            } else if (type === AVATAR_TYPE.text) {\n                content = $(\"<span>\" + options.text + \"</span>\");\n            }\n\n            span.append(content);\n        },\n\n        _contentFromMarkup: function() {\n            var span = this.wrapper.find(\"> span\").first();\n\n            span.append(this._markupContent);\n        },\n\n        _fromMarkup: function() {\n            var element = this.element,\n                options = this.options,\n                image, icon;\n\n            element.children().slice(1).remove();\n\n            image = element.children(\"img\");\n            icon = element.children(\".k-icon\");\n\n            if (image.length > 0 ) {\n                options.type = AVATAR_TYPE.image;\n                this._markupContent = image.first();\n            } else if (icon.length > 0) {\n                options.type = AVATAR_TYPE.icon;\n                this._markupContent = icon.first();\n            } else if (element.children().length > 0) {\n                options.type = AVATAR_TYPE.text;\n                this._markupContent = element.children();\n            }\n        },\n\n        _optionsFromWrapper: function(updatedOptions) {\n            var wrapper = this.wrapper,\n                classes, image;\n\n            if (updatedOptions.type === AVATAR_TYPE.text) {\n                updatedOptions.text = wrapper.text().trim();\n            } else if (updatedOptions.type === AVATAR_TYPE.icon) {\n                classes = wrapper.find(\".k-icon\").attr(\"class\").split(/\\s+/);\n\n                classes.forEach(function(name) {\n                    if (name.indexOf(\"k-i-\") === 0) {\n                        updatedOptions.icon = name.substring(4);\n                    }\n                });\n            } else if (updatedOptions.type === AVATAR_TYPE.image) {\n                image = wrapper.find(\"img\");\n                updatedOptions.image = image.attr(\"src\");\n\n                if (image.attr(\"alt\")) {\n                    updatedOptions.alt = image.attr(\"alt\");\n                }\n            }\n\n            return updatedOptions;\n        },\n\n        _wrapper: function() {\n            var wrapper = this.element,\n                options = this.options,\n                span = $(\"<span>\");\n\n            this.wrapper = wrapper;\n            wrapper.addClass(AVATAR_STYLES.avatar);\n\n            this._applyCssClasses();\n\n            if (options.border) {\n                wrapper.addClass(AVATAR_STYLES.bordered);\n            }\n            if (options.style) {\n                wrapper.css(options.style);\n            }\n            if (options.className) {\n                wrapper.addClass(options.className);\n            }\n\n            span.addClass(AVATAR_STYLES.avatar + DASH + options.type);\n            wrapper.prepend(span);\n        }\n    });\n\n    kendo.cssProperties.registerPrefix(\"Avatar\", \"k-avatar-\");\n\n    kendo.cssProperties.registerValues(\"Avatar\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    kendo.ui.plugin(Avatar);\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n"],"names":["define","__meta__","id","name","category","description","depends","$","window","kendo","jQuery","undefined","Widget","ui","DASH","AVATAR_STYLES","widget","avatar","bordered","AVATAR_TYPE","icon","image","text","Avatar","extend","init","element","options","that","this","fn","call","_fromMarkup","_wrapper","_markupContent","length","_contentFromMarkup","_content","alt","border","className","fillMode","rounded","size","style","themeColor","type","events","setOptions","currentOptions","wrapper","updatedOptions","_optionsFromWrapper","removeClass","empty","span","find","content","attr","append","first","children","slice","remove","classes","trim","split","forEach","indexOf","substring","addClass","_applyCssClasses","css","prepend","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","concat","plugin","amd","a1","a2","a3"],"mappings":"CAAA,SAAaA,QACTA,OAAO,eAAe,CAAE,cACzB,WAEH,IAAIC,EAAW,CACXC,GAAI,SACJC,KAAM,SACNC,SAAU,MACVC,YAAa,0FACbC,QAAS,CAAE,SAGLC,EAwLPC,OAAOC,MAAMC,OAxLHC,OAAb,EACQF,EAAQD,OAAOC,MACfG,EAASH,EAAMI,GAAGD,OAElBE,EAAO,IAEPC,EAAgB,CAChBC,OAAQ,WACRC,OAAQ,WACRC,SAAU,qBAGVC,EAAc,CACdC,KAAM,OACNC,MAAO,QACPC,KAAM,QAGNC,EAASX,EAAOY,OAAO,CACvBC,KAAM,SAASC,EAASC,GACpB,IAAIC,EAAOC,KAEXF,EAAUA,GAAW,GAErBf,EAAOkB,GAAGL,KAAKM,KAAKH,EAAMF,EAASC,GAEnCE,KAAKG,cACLH,KAAKI,WAEL,GAAIJ,KAAKK,gBAAkBL,KAAKK,eAAeC,OAAS,EACpDN,KAAKO,0BAELP,KAAKQ,YAIbV,QAAS,CACLxB,KAAM,SACNmC,IAAK,KACLC,OAAQ,MACRC,UAAW,KACXC,SAAU,QACVrB,KAAM,KACNC,MAAO,KACPqB,QAAS,OACTC,KAAM,SACNC,MAAO,KACPtB,KAAM,KACNuB,WAAY,UACZC,KAAM3B,EAAYG,MAGtByB,OAAQ,GAERC,WAAY,SAASrB,GACjB,IAAIsB,EAAiBpB,KAAKF,QACtBuB,EAAUrB,KAAKqB,QACfC,EAAiB5C,EAAEiB,OAAO,GAAIyB,EAAgBtB,GAElDf,EAAOkB,GAAGkB,WAAWjB,KAAKF,KAAMF,GAEhC,IAAKwB,EAAeA,EAAeL,MAC/BG,EAAiBpB,KAAKuB,oBAAoBH,GAE9C,GAAIE,EAAeZ,SAAW,MAC1BW,EAAQG,YAAYtC,EAAcG,UAGtCgC,EAAQI,QAERzB,KAAKF,QAAUsB,EACfpB,KAAKI,WACLJ,KAAKQ,YAGTA,SAAU,WACN,IAAIkB,EAAO1B,KAAKqB,QAAQM,KAAK,UACzB7B,EAAUE,KAAKF,QACfmB,EAAOnB,EAAQmB,KACfW,EAEJ,GAAIX,IAAS3B,EAAYC,KACrBqC,EAAUlD,EAAE,2BAA6BoB,EAAQP,KAAO,WACrD,GAAI0B,IAAS3B,EAAYE,MAAO,CACnCoC,EAAUlD,EAAE,aAAeoB,EAAQN,MAAQ,MAE3C,GAAIM,EAAQW,IACRmB,EAAQC,KAAK,MAAO/B,EAAQW,UAE7B,GAAIQ,IAAS3B,EAAYG,KAC5BmC,EAAUlD,EAAE,SAAWoB,EAAQL,KAAO,WAG1CiC,EAAKI,OAAOF,IAGhBrB,mBAAoB,WAChB,IAAImB,EAAO1B,KAAKqB,QAAQM,KAAK,UAAUI,QAEvCL,EAAKI,OAAO9B,KAAKK,iBAGrBF,YAAa,WACT,IAAIN,EAAUG,KAAKH,QACfC,EAAUE,KAAKF,QACfN,EAAOD,EAEXM,EAAQmC,WAAWC,MAAM,GAAGC,SAE5B1C,EAAQK,EAAQmC,SAAS,OACzBzC,EAAOM,EAAQmC,SAAS,WAExB,GAAIxC,EAAMc,OAAS,EAAI,CACnBR,EAAQmB,KAAO3B,EAAYE,MAC3BQ,KAAKK,eAAiBb,EAAMuC,aACzB,GAAIxC,EAAKe,OAAS,EAAG,CACxBR,EAAQmB,KAAO3B,EAAYC,KAC3BS,KAAKK,eAAiBd,EAAKwC,aACxB,GAAIlC,EAAQmC,WAAW1B,OAAS,EAAG,CACtCR,EAAQmB,KAAO3B,EAAYG,KAC3BO,KAAKK,eAAiBR,EAAQmC,aAItCT,oBAAqB,SAASD,GAC1B,IAAID,EAAUrB,KAAKqB,QACfc,EAAS3C,EAEb,GAAI8B,EAAeL,OAAS3B,EAAYG,KACpC6B,EAAe7B,KAAO4B,EAAQ5B,OAAO2C,YAClC,GAAId,EAAeL,OAAS3B,EAAYC,KAAM,CACjD4C,EAAUd,EAAQM,KAAK,WAAWE,KAAK,SAASQ,MAAM,OAEtDF,EAAQG,QAAQ,SAAShE,GACrB,GAAIA,EAAKiE,QAAQ,UAAY,EACzBjB,EAAe/B,KAAOjB,EAAKkE,UAAU,UAG1C,GAAIlB,EAAeL,OAAS3B,EAAYE,MAAO,CAClDA,EAAQ6B,EAAQM,KAAK,OACrBL,EAAe9B,MAAQA,EAAMqC,KAAK,OAElC,GAAIrC,EAAMqC,KAAK,OACXP,EAAeb,IAAMjB,EAAMqC,KAAK,OAIxC,OAAOP,GAGXlB,SAAU,WACN,IAAIiB,EAAUrB,KAAKH,QACfC,EAAUE,KAAKF,QACf4B,EAAOhD,EAAE,UAEbsB,KAAKqB,QAAUA,EACfA,EAAQoB,SAASvD,EAAcE,QAE/BY,KAAK0C,mBAEL,GAAI5C,EAAQY,OACRW,EAAQoB,SAASvD,EAAcG,UAEnC,GAAIS,EAAQiB,MACRM,EAAQsB,IAAI7C,EAAQiB,OAExB,GAAIjB,EAAQa,UACRU,EAAQoB,SAAS3C,EAAQa,WAG7Be,EAAKe,SAASvD,EAAcE,OAASH,EAAOa,EAAQmB,MACpDI,EAAQuB,QAAQlB,MAe5B,OAXI9C,EAAMiE,cAAcC,eAAe,SAAU,aAE7ClE,EAAMiE,cAAcE,eAAe,SAAU,CAAC,CAC1CC,KAAM,UACNC,OAAQrE,EAAMiE,cAAcK,cAAcC,OAAO,CAAC,CAAC,OAAQ,aAG/DvE,EAAMI,GAAGoE,OAAO1D,GAIbf,OAAOC,QAtMd,CAwMoB,mBAAVT,QAAwBA,OAAOkF,IAAMlF,OAAS,SAASmF,EAAIC,EAAIC,IAAOA,GAAMD"}