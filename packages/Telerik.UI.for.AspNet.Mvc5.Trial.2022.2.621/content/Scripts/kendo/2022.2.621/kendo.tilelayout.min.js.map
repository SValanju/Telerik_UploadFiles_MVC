{"version":3,"file":"kendo.tilelayout.min.js","sources":["kendo.tilelayout.js"],"sourcesContent":["(function(f, define) {\n    define('kendo.tilelayout',[\"kendo.core\", \"kendo.draganddrop\", \"kendo.resizable\"], f);\n})(function() {\n\n    var __meta__ = { // jshint ignore:line\n        id: \"tilelayout\",\n        name: \"TileLayout\",\n        category: \"web\",\n        depends: [\"core\"],\n        features: [\n            {\n                id: \"tilelayout-resizable\",\n                name: \"Resizable\",\n                description: \"Support for resizing\",\n                depends: [\"resizable\"]\n            },\n            {\n                id: \"tilelayout-reorderable\",\n                name: \"Reorderable\",\n                description: \"Support for reordering\",\n                depends: [\"draganddrop\"]\n            }\n        ]\n    };\n\n    (function($) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            Draggable = ui.Draggable,\n            keys = kendo.keys,\n            selector = kendo.selectorFromClasses,\n            RESIZE = \"resize\",\n            REORDER = \"reorder\",\n            NS = \".kendoTileLayout\",\n            DOWNCURSOR = \"k-cursor-ns-resize\",\n            RIGHTCURSOR = \"k-cursor-ew-resize\",\n            DIAGONALCURSOR = \"k-cursor-nwse-resize\",\n            RTLDIAGONALCURSOR = \"k-cursor-nesw-resize\",\n            GRABCURSOR = \"k-cursor-grab\",\n            GRABBINGCURSOR = \"k-cursor-grabbing\",\n            MINIMALSPAN = 1,\n            CURSORCLASSES = \"k-cursor-nesw-resize k-cursor-nwse-resize k-cursor-ew-resize k-cursor-ns-resize\";\n\n        var tileLayoutStyles = {\n            wrapper: \"k-widget k-tilelayout\",\n            item: \"k-tilelayout-item k-card\",\n            itemHeader: \"k-tilelayout-item-header k-card-header\",\n            itemHeaderTitle: \"k-card-title\",\n            itemBody: \"k-tilelayout-item-body k-card-body\",\n            reorderHint: \"k-layout-item-hint k-layout-item-hint-reorder\",\n            resizeHint: \"k-layout-item-hint k-layout-item-hint-resize\"\n        };\n\n        var TileLayout = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                $.cssNumber.gridColumnStart = true;\n                $.cssNumber.gridColumnEnd = true;\n                $.cssNumber.gridRowStart = true;\n                $.cssNumber.gridRowEnd = true;\n\n                that.element = $(element).addClass(TileLayout.styles.wrapper);\n\n                that._setWrapperStyles();\n                that._initContainers();\n                that._resizable();\n                that._navigatable();\n                that._reorderable();\n            },\n\n            events: [\n                RESIZE,\n                REORDER\n            ],\n\n            options: {\n                name: \"TileLayout\",\n                columns: null,\n                gap: {\n                    columns: 16,\n                    rows: 16\n                },\n                containers: [],\n                resizable: false,\n                reorderable: false,\n                navigatable: false,\n                columnsWidth: \"1fr\",\n                rowsHeight: \"1fr\",\n                height: \"\",\n                width: \"\"\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                if (this._draggableInstance) {\n\n                    this.element.find(\".k-tilelayout-item\").each(function() {\n                        var item = $(this);\n                        if (item.data(\"kendoDropTarget\")) {\n                            item.data(\"kendoDropTarget\").destroy();\n                        }\n                    });\n\n                    this._draggableInstance.destroy();\n                    this._draggableInstance = null;\n                }\n\n                if (this.resizable) {\n                    this.resizable.destroy();\n                    this.resizable = null;\n                }\n\n                if (this.resizeHandle) {\n                    this.resizeHandle.off(NS).remove();\n                    this.resizeHandle = null;\n                }\n\n                this.element.off(NS);\n            },\n\n            setOptions: function(options) {\n                this.destroy();\n                kendo.deepExtend(this.options, options);\n                this.element.empty();\n                this.init(this.element, this.options);\n            },\n\n            getOptions: function() {\n                var result = $.extend(true, {}, this.options);\n                result.containers = kendo.deepExtend([], this.items);\n\n                return result;\n            },\n\n            _initContainers: function() {\n                var that = this;\n                var containers = that.options.containers;\n                var containerElements = that.element.children();\n                var hasElements = !!containerElements.length;\n                var id;\n                var container;\n                var header;\n                var headerSettings;\n                var body;\n                var containerSettings;\n                var headerContent;\n\n                that.items = [];\n                that.itemsMap = {};\n\n                if (hasElements) {\n                    containerElements.each(function(i, element) {\n                        id = kendo.guid();\n                        var current = $(element)\n                            .addClass(TileLayout.styles.item)\n                            .attr(\"id\", id);\n\n                        that._addContainer(current, containers[i], i, id);\n                    });\n                } else {\n                    for (var i = 0; i < containers.length; i++) {\n                        id = kendo.guid();\n                        containerSettings = containers[i];\n                        container = $(\"<div></div>\")\n                            .addClass(TileLayout.styles.item)\n                            .attr(\"id\", id);\n\n                        headerSettings = containerSettings.header;\n                        if (headerSettings && (headerSettings.template || headerSettings.text)) {\n                            header = $(\"<div></div>\").addClass(TileLayout.styles.itemHeader);\n                            if (that.options.reorderable) {\n                                header.addClass(GRABCURSOR);\n                            }\n\n                            headerContent = headerSettings.text ? \"<div class='\" + TileLayout.styles.itemHeaderTitle + \"'>\" + headerSettings.text + \"</div>\" : null;\n                            header.append(headerContent || kendo.template(headerSettings.template)({}));\n                            header.appendTo(container);\n                        }\n                        body = $(\"<div></div>\").addClass(TileLayout.styles.itemBody);\n                        if (!containerSettings.bodyTemplate) {\n                            throw new Error(\"Having a bodyTemplate for the container is mandatory\");\n                        }\n                        body.append(kendo.template(containerSettings.bodyTemplate)({}));\n                        body.appendTo(container);\n                        container.appendTo(that.element);\n\n                        that._addContainer(container, containerSettings, i, id);\n                    }\n                }\n            },\n\n            _addContainer: function(element, item, index, id) {\n                var that = this;\n                item.order = typeof item.order == 'number' ? item.order : index;\n                element.attr(kendo.attr(\"index\"), item.order);\n                item.id = id;\n                that._setContainerCoordinates(element, item);\n                that.itemsMap[id] = item;\n                that.items.push(that.itemsMap[id]);\n            },\n\n            _setWrapperStyles: function() {\n                var that = this;\n                var options = that.options;\n                that.element.css({\n                    \"grid-template-columns\": kendo.format(\"repeat({0}, minmax(0, {1}))\", options.columns, typeof options.columnsWidth === \"string\" ? options.columnsWidth : options.columnsWidth + \"px\"),\n                    \"grid-auto-rows\": kendo.format(\"minmax(0, {0})\", typeof options.rowsHeight === \"string\" ? options.rowsHeight : options.rowsHeight + \"px\"),\n                    \"column-gap\": options.gap.columns,\n                    \"width\": typeof options.width === \"string\" ? options.width : options.width + \"px\",\n                    \"height\": typeof options.height === \"string\" ? options.height : options.height + \"px\",\n                    \"padding\": options.gap.rows + \"px \" + options.gap.columns + \"px \",\n                    \"row-gap\": options.gap.rows\n                });\n            },\n\n            _setContainerCoordinates: function(element, settings) {\n                if (!settings) {\n                    return;\n                }\n                element.css({\n                    \"order\": settings.order,\n                    \"grid-column-end\": kendo.format(\"span {0}\", settings.colSpan),\n                    \"grid-row-end\": kendo.format(\"span {0}\", settings.rowSpan)\n                })\n                    .attr(kendo.attr(\"index\"), settings.order);\n            },\n\n            _updateContainers: function() {\n                var that = this;\n\n                for (var i = 0; i < that.items.length; i++) {\n                    that._setContainerCoordinates(that.element.find(\"#\" + that.items[i].id), that.items[i]);\n                }\n            },\n\n            _createResizeHandle: function(container, side, down) {\n                var that = this;\n\n                if (that._isresizing) {\n                    return;\n                }\n\n                if (that.resizeHandle && that.resizeHandle.data(\"div\")[0] !== container[0]) {\n                    that.resizeHandle.off(NS).remove();\n                    that.resizeHandle = null;\n                }\n\n                if (!that.resizeHandle) {\n                    that.resizeHandle = $(\n                        '<div class=\"k-resize-handle\"></div>'\n                    );\n                    that.resizeHandle.appendTo(container);\n                }\n\n                that._positionResizeHandle(container, side, down);\n            },\n\n            _positionResizeHandle: function(container, side, down) {\n                var that = this;\n                var leftBorderWidth = parseFloat(container.css(\"borderRightWidth\"));\n                var bottomBorderWidth = parseFloat(container.css(\"borderBottomWidth\"));\n                var containerHeight = container.height();\n                var containerWidth = container.width();\n                var top = down ? containerHeight - 6.5 - bottomBorderWidth : 0;\n                var left = side ? containerWidth - 4.5 - leftBorderWidth : 0;\n                var width = 9;\n                var height = 9;\n                var cursorClass;\n\n                if (side && down) {\n                    height = width = 25;\n                    top -= 12.5;\n                    left -= 12.5;\n                    cursorClass = kendo.support.isRtl(that.element) ? RTLDIAGONALCURSOR : DIAGONALCURSOR;\n                } else if (side && !down) {\n                    height = containerHeight;\n                    cursorClass = RIGHTCURSOR;\n                } else if (!side && down) {\n                    width = containerWidth;\n                    cursorClass = DOWNCURSOR;\n                }\n\n                that.resizeHandle\n                    .css({\n                        top: top,\n                        left: left,\n                        height: height,\n                        width: width\n                    })\n                    .attr(\"side\", side)\n                    .attr(\"down\", down)\n                    .removeClass(CURSORCLASSES)\n                    .addClass(cursorClass)\n                    .data(\"div\", container)\n                    .show();\n            },\n\n            _createResizeHint: function(container) {\n                var that = this;\n\n                if (that.hint) {\n                    return;\n                }\n\n                var colSpan = container.css(\"grid-column-end\");\n                var rowSpan = container.css(\"grid-row-end\");\n                var order = container.css(\"order\");\n\n                that.hint = $(\"<div class='\" + TileLayout.styles.resizeHint + \"'></div>\")\n                    .css({\n                        \"order\": order,\n                        \"grid-column-end\": colSpan,\n                        \"grid-row-end\": rowSpan\n                    })\n                    .insertAfter(container);\n            },\n\n            _removeResizeHint: function() {\n                if (this._isresizing) {\n                    return;\n                }\n\n                if (this.hint) {\n                    this.hint.remove();\n                    this.hint = null;\n                }\n            },\n\n            _positionHint: function(colSpan, rowSpan) {\n                var that = this;\n\n                if (colSpan) {\n                    that.hint.css(\"grid-column-end\", kendo.format(\"span {0}\", colSpan));\n                }\n\n                if (rowSpan) {\n                    that.hint.css(\"grid-row-end\", kendo.format(\"span {0}\", rowSpan));\n                }\n            },\n\n            _removeAbsoluteStyles: function(container) {\n                container.css(\"position\", \"\");\n                container.css(\"left\", \"\");\n                container.css(\"top\", \"\");\n                container.css(\"width\", \"\");\n                container.css(\"height\", \"\");\n                container.css(\"z-index\", \"\");\n            },\n\n            _positionAbsolutely: function(container) {\n                if (container.css(\"position\") == \"absolute\") {\n                    return;\n                }\n                var position = container.position();\n                var width = container.outerWidth();\n                var height = container.outerHeight();\n\n                container.css(\"position\", \"absolute\");\n                container.css(\"left\", position.left);\n                container.css(\"top\", position.top);\n                container.css(\"width\", width);\n                container.css(\"height\", height);\n                container.css(\"z-index\", 2);\n            },\n\n            _navigatable: function() {\n\n                if (!this.options.navigatable) {\n                    return;\n                }\n\n                var that = this;\n\n                that.element.children().attr(\"tabindex\", 0);\n                that.element.on(\"keydown\" + NS, that, that._keyDown.bind(that));\n            },\n\n            _keyDown: function(e) {\n                var target = $(e.target);\n                var canHandle = false;\n\n                if (!target.is(\".k-tilelayout-item.k-card\")) {\n                    return;\n                }\n\n\n                if (e.ctrlKey && e.keyCode == keys.LEFT) {\n                    canHandle = true;\n                    this._resizeItem(target, \"horizontal\", -1);\n                }\n\n                if (e.ctrlKey && e.keyCode == keys.RIGHT) {\n                    canHandle = true;\n                    this._resizeItem(target, \"horizontal\", 1);\n                }\n\n                if (e.ctrlKey && e.keyCode == keys.UP) {\n                    canHandle = true;\n                    this._resizeItem(target, \"vertical\", -1);\n                }\n\n                if (e.ctrlKey && e.keyCode == keys.DOWN) {\n                    canHandle = true;\n                    this._resizeItem(target, \"vertical\", 1);\n                }\n\n                if (e.shiftKey && e.keyCode == keys.LEFT) {\n                    canHandle = true;\n                    this._reorderItem(target, -1);\n                }\n\n                if (e.shiftKey && e.keyCode == keys.RIGHT) {\n                    canHandle = true;\n                    this._reorderItem(target, 1);\n                }\n\n                if (canHandle) {\n                    e.preventDefault();\n                }\n            },\n\n            _resizeItem: function(item, dir, delta) {\n                var that = this;\n                var id = item.attr(\"id\");\n                var newSpan;\n                var maxSpan;\n\n                if (!that.options.resizable) {\n                    return;\n                }\n\n                if (dir === \"horizontal\") {\n                    newSpan = parseInt(item.css(\"grid-column-end\").replace('span', ''), 10) + delta;\n                    maxSpan = that.element.css(\"grid-template-columns\").split(\" \").length;\n\n                    if (maxSpan >= newSpan && newSpan > 0) {\n                        that.itemsMap[id].colSpan = newSpan;\n                        item.css({\n                            \"grid-column-end\": kendo.format(\"span {0}\", newSpan)\n                        });\n                        that.trigger(RESIZE, {\n                            container: item\n                        });\n                    }\n                } else {\n                    newSpan = parseInt(item.css(\"grid-row-end\").replace('span', ''), 10) + delta;\n                    maxSpan = that.element.css(\"grid-template-rows\").split(\" \").length;\n\n                    if (maxSpan >= newSpan && newSpan > 0) {\n                        that.itemsMap[id].rowSpan = newSpan;\n                        item.css({\n                            \"grid-row-end\": kendo.format(\"span {0}\", newSpan)\n                        });\n                        that.trigger(RESIZE, {\n                            container: item\n                        });\n                    }\n                }\n            },\n\n            _reorderItem: function(item, newOrder) {\n                if (!this.options.reorderable) {\n                    return;\n                }\n\n                var oldOrder = parseInt(item.css(\"order\"), 10);\n                var maxOrder = this.element.children().length;\n                newOrder = oldOrder + newOrder;\n\n                if (newOrder >= 0 && newOrder < maxOrder) {\n                    var target = this.element.find(\"> [\" + kendo.attr(\"index\") + \"='\" + newOrder + \"']\");\n\n                    this.itemsMap[item.attr(\"id\")].order = newOrder;\n                    this.itemsMap[target.attr(\"id\")].order = oldOrder;\n\n                    this._updateContainers();\n                    this._updateDOM();\n                    item.trigger(\"focus\");// need to restore focus after DOM gets reordered\n\n                    this.trigger(REORDER, {\n                        newIndex: newOrder,\n                        oldIndex: oldOrder,\n                        container: item\n                    });\n                }\n            },\n\n            _sortContainers: function(containers) {\n                var indexAttr = kendo.attr(\"index\");\n\n                return containers.sort(function(a, b) {\n                    a = $(a);\n                    b = $(b);\n\n                    var indexA = a.attr(indexAttr);\n                    var indexB = b.attr(indexAttr);\n\n                    if (indexA === undefined) {\n                        indexA = $(a).index();\n                    }\n                    if (indexB === undefined) {\n                        indexB = $(b).index();\n                    }\n\n                    indexA = parseInt(indexA, 10);\n                    indexB = parseInt(indexB, 10);\n                    return indexA > indexB ? 1 : (indexA < indexB ? -1 : 0);\n                });\n            },\n            _updateDOM: function() {\n                var that = this;\n                var containers = that.element.children(\":visible\");\n\n                containers = that._sortContainers(containers);\n\n                containers.each(function() {\n                    $(this).appendTo(that.element);\n                });\n            },\n\n            _resizable: function() {\n                var that = this;\n                var side;\n                var down;\n                var id;\n                var fractionWidth;\n                var fractionHeight;\n                var currentContainer;\n                var lastXLocation = 0;\n                var lastYLocation = 0;\n                var initialWidth = 0;\n                var initialHeight = 0;\n                var startColSpan = 0;\n                var startRowSpan = 0;\n                var itemsMaxSpace = 0;\n                var rowsCount;\n\n                if (that.options.resizable) {\n                    that.element.on(\"mousemove\" + NS, selector(TileLayout.styles.item), function(e) {\n                        var rightPosition;\n                        var downPosition;\n                        var container = $(this);\n                        var rectPosition = container[0].getBoundingClientRect();\n\n                        rightPosition = Math.abs(rectPosition.right - e.clientX) < 16;\n                        downPosition = Math.abs(rectPosition.bottom - e.clientY) < 16;\n\n                        if (rightPosition && downPosition) {\n                            that._createResizeHandle(container, true, true);\n                        } else if (rightPosition) {\n                            that._createResizeHandle(container, true, false);\n                        } else if (downPosition) {\n                            that._createResizeHandle(container, false, true);\n                        }\n                    });\n\n                    that.resizable = new ui.Resizable(that.element, {\n                        handle: \"div.k-tilelayout-item > .k-resize-handle\",\n                        start: function(e) {\n                            var resizeHandle = $(e.currentTarget);\n                            currentContainer = resizeHandle.data(\"div\");\n                            id = currentContainer.attr(\"id\");\n                            side = resizeHandle.attr(\"side\");\n                            down = resizeHandle.attr(\"down\");\n                            rowsCount = that.element.css(\"grid-template-rows\").split(\" \").length;\n\n                            if (side) {\n                                fractionWidth = that._calculateFractionWidth();\n                                itemsMaxSpace = that._calculateRightEndSide(fractionWidth);\n                                lastXLocation = e.x.location;\n                                initialWidth = currentContainer.width();\n                                startColSpan = parseInt(currentContainer.css(\"grid-column-end\").replace('span', ''), 10);\n                            }\n\n                            if (down) {\n                                fractionHeight = (that.element[0].scrollHeight - (rowsCount + 1) * that.options.gap.rows) / rowsCount;\n                                lastYLocation = e.y.location;\n                                initialHeight = currentContainer.height();\n                                startRowSpan = parseInt(currentContainer.css(\"grid-row-end\").replace('span', ''), 10);\n                            }\n\n                            that._isresizing = true;\n                        },\n                        resize: function(e) {\n                            var hintColumns = 0;\n                            var hintRows = 0;\n                            var mouseDeltaX = 0;\n                            var mouseDeltaY = 0;\n                            var overflowsLayout;\n                            var isBeyondMinimum;\n                            var deltaFromStart = 0;\n                            var resizeRowsCount = 0;\n                            var resizeColumnsCount = 0;\n                            var clientRect = that.element[0].getBoundingClientRect();\n                            var height = that.element[0].style.height ? true : false;\n\n                            that._positionAbsolutely(currentContainer);\n                            that._createResizeHint(currentContainer);\n\n                            if (side == \"true\") {\n                                mouseDeltaX = e.x.location - lastXLocation;\n                                overflowsLayout = (clientRect.left + itemsMaxSpace - window.scrollX - e.x.location) < that.options.gap.columns;\n                                isBeyondMinimum = (initialWidth + mouseDeltaX) < fractionWidth;\n\n                                if (!overflowsLayout && !isBeyondMinimum) {\n                                    resizeColumnsCount = (mouseDeltaX) / (fractionWidth + that.options.gap.columns);\n                                    deltaFromStart = mouseDeltaX - (Math.floor(resizeColumnsCount) * (fractionWidth + that.options.gap.columns));\n                                    hintColumns = startColSpan + Math.floor(resizeColumnsCount) + ((deltaFromStart >= (fractionWidth / 2)) ? 1 : 0);\n                                    that.itemsMap[id].colSpan = Math.max(hintColumns, MINIMALSPAN);\n                                } else {\n                                    mouseDeltaX = 0;\n                                }\n                            }\n\n                            if (down == \"true\") {\n                                mouseDeltaY = e.y.location - lastYLocation;\n                                overflowsLayout = (clientRect.bottom + window.scrollY - e.y.location) < that.options.gap.rows;\n                                isBeyondMinimum = (initialHeight + mouseDeltaY) <= fractionHeight;\n\n                                if (!isBeyondMinimum && (!overflowsLayout || !height)) {\n                                    resizeRowsCount = (mouseDeltaY) / (fractionHeight + that.options.gap.rows);\n                                    deltaFromStart = mouseDeltaY - (Math.floor(resizeRowsCount) * (fractionHeight + that.options.gap.rows));\n                                    hintRows = startRowSpan + Math.floor(resizeRowsCount) + ((deltaFromStart >= (fractionHeight / 2)) ? 1 : 0);\n                                    that.itemsMap[id].rowSpan = Math.max(hintRows, MINIMALSPAN);\n                                } else {\n                                    mouseDeltaY = 0;\n                                }\n                            }\n\n                            that._positionHint(hintColumns, hintRows);\n                            that._positionResizeHandle(currentContainer, side == \"true\", down == \"true\");\n                            if (mouseDeltaY) {\n                                currentContainer.css(\"height\", initialHeight + mouseDeltaY);\n                            }\n                            if (mouseDeltaX) {\n                                currentContainer.css(\"width\", initialWidth + mouseDeltaX);\n                            }\n                        },\n                        resizeend: function() {\n                            that._isresizing = false;\n                            that._setContainerCoordinates(currentContainer, that.itemsMap[id]);\n                            that._removeAbsoluteStyles(currentContainer);\n                            that._removeResizeHint();\n                            that.trigger(RESIZE, {\n                                container: currentContainer\n                            });\n                        }\n                    });\n                }\n            },\n\n            _calculateFractionWidth: function() {\n                var that = this;\n                var container = that.element.children().first();\n                var colSpan = that.itemsMap[container.attr(\"id\")].colSpan;\n                var totalWidth = container.outerWidth();\n\n                return (totalWidth - (colSpan - 1) * (that.options.gap.columns)) / colSpan;\n            },\n\n            _calculateRightEndSide: function(fractionWidth) {\n                var that = this;\n                var columns = that.options.columns;\n                var columnGap = that.options.gap.columns;\n\n                return columns * (fractionWidth + columnGap) + columnGap;\n            },\n\n            _createDropHint: function(settings) {\n                this.dropHint = $(\"<div class='\" + TileLayout.styles.reorderHint + \"'></div>\")\n                    .css({\n                        \"order\": settings.order,\n                        \"grid-column-end\": settings.columnEnd,\n                        \"grid-row-end\": settings.rowEnd\n                    })\n                    .attr(kendo.attr(\"index\"), settings.order)\n                    .attr(\"direction\", settings.direction);\n            },\n\n            _insertDropHint: function(container, direction) {\n                if (direction == \"right\") {\n                    this.dropHint.insertAfter(container);\n                } else {\n                    this.dropHint.insertBefore(container);\n                }\n            },\n\n            _removeDropHint: function() {\n                if (this.dropHint) {\n                    this.dropHint.remove();\n                    this.dropHint = null;\n                }\n            },\n\n            _reorderable: function() {\n                if (!this.options.reorderable) {\n                    return;\n                }\n\n                var that = this;\n                var element = that.element;\n                var originalElement;\n                var itemSelector = selector(TileLayout.styles.item);\n                var headerSelector = selector(TileLayout.styles.itemHeader);\n                var group = kendo.guid();\n\n                this._draggableInstance = new Draggable(this.element, {\n                    filter: headerSelector,\n                    autoScroll: true,\n                    ignore: \":input\",\n                    group: group,\n                    hint: function(target) {\n                        var item = target.closest(itemSelector);\n                        var width = item.width();\n                        var height = item.height();\n                        var clone = item.clone();\n                        clone.find(headerSelector)\n                            .removeClass(GRABCURSOR)\n                            .addClass(GRABBINGCURSOR);\n                        return clone.width(width).height(height);\n                    },\n                    dragstart: function(e) {\n                        originalElement = $(e.currentTarget).closest(itemSelector);\n                    },\n                    drag: function(e) {\n                        var elementUnderCursor = kendo.elementUnderCursor(e);\n                        var hint = e.sender.hint;\n                        var dropContainer;\n                        var containerBoundaries;\n                        var pixelsToLeftBorder;\n                        var pixelsToRightBorder;\n                        var direction;\n\n                        var draggedItem = that._draggableInstance.currentTarget.closest(itemSelector);\n                        var newOrder;\n\n                        if (containsOrEqualTo(hint[0], elementUnderCursor)) {\n                            hint.hide();\n\n                            elementUnderCursor = kendo.elementUnderCursor(e);\n\n                            if (!containsOrEqualTo(originalElement[0], elementUnderCursor)) {\n\n                                if (that.dropHint && that.dropHint[0] == elementUnderCursor[0]) {\n                                    hint.show();\n                                    return;\n                                }\n\n                                dropContainer = $(elementUnderCursor);\n                                dropContainer = dropContainer.hasClass(TileLayout.styles.item) ? dropContainer : dropContainer.closest(itemSelector);\n\n                                if (dropContainer.hasClass(TileLayout.styles.item)) {\n                                    containerBoundaries = dropContainer[0].getBoundingClientRect();\n                                    pixelsToLeftBorder = e.clientX - containerBoundaries.left;\n                                    pixelsToRightBorder = containerBoundaries.right - e.clientX;\n                                    direction = pixelsToLeftBorder > pixelsToRightBorder ? \"right\" : \"left\";\n                                    newOrder = dropContainer.css(\"order\");\n\n                                    if (that.dropHint && that.dropHint.attr(\"direction\") !== direction) {\n                                        var clone = that.dropHint.clone();\n                                        clone.css(\"order\", newOrder);\n                                        that.dropHint.remove();\n                                        that.dropHint = clone;\n\n                                        that._insertDropHint(dropContainer, direction);\n\n                                        that.dropHint\n                                            .attr(\"direction\", direction)\n                                            .attr(kendo.attr(\"index\"), newOrder);\n                                    } else if (!that.dropHint) {\n\n                                        var futureContainer = direction == \"right\" ? dropContainer.next() : dropContainer.prev();\n\n                                        if (futureContainer[0] != originalElement[0]) {\n                                            that._createDropHint({ order: newOrder, columnEnd: draggedItem.css(\"grid-column-end\"), rowEnd: draggedItem.css(\"grid-row-end\"), direction: direction });\n                                            originalElement.hide();\n                                            that._insertDropHint(dropContainer, direction);\n                                        }\n                                    }\n                                }\n                            }\n                            hint.show();\n                        }\n                    },\n                    dragend: function(e) {\n                        if (!that.dropHint) {\n                            e.sender.hint.remove();\n                            that._removeDropHint();\n                            return;\n                        }\n                        var newOrder = parseInt(that.dropHint.css(\"order\"), 10);\n                        var container = e.currentTarget.closest(itemSelector);\n                        var items = that.element.find(itemSelector);\n                        var oldOrder = parseInt(container.css(\"order\"), 10);\n                        var itemId = container.attr(\"id\");\n                        var containers = that.element.children(\":visible\");\n                        var start;\n                        var end;\n                        var item;\n                        var direction;\n\n                        containers = that._sortContainers(containers);\n\n                        newOrder = containers.index(that.dropHint[0]);\n                        end = Math.max(newOrder, oldOrder);\n                        start = Math.min(newOrder, oldOrder);\n\n                        that.itemsMap[itemId].order = newOrder;\n\n                        direction = newOrder > oldOrder ? \"right\" : \"left\"; //this is direction of movement\n\n                        if (direction == \"left\") {\n                            end--;\n                        } else {\n                            start++;\n                        }\n\n                        for (var i = start; i <= end; i++) {\n                            item = items.filter(\"[\" + kendo.attr(\"index\") + \"='\" + i + \"']\");\n                            that.itemsMap[item.attr(\"id\")].order += direction == \"left\" ? 1 : -1;\n                        }\n\n                        container.show();\n\n                        that._updateContainers();\n\n                        e.sender.hint.remove();\n                        that._removeDropHint();\n\n                        if (that.options.navigatable) {\n                            that._updateDOM();\n                        }\n\n                        that.trigger(REORDER, {\n                            newIndex: newOrder,\n                            oldIndex: oldOrder,\n                            container: container\n                        });\n                    }\n                });\n\n                element.find(itemSelector).kendoDropTarget({\n                    group: group,\n                    dragenter: function(e) {\n                        if (that._isresizing) {\n                            return;\n                        }\n                        var dropContainer = $(e.dropTarget);\n                        var target = that._draggableInstance.currentTarget.closest(itemSelector);\n                        var dropContainerBoundaries;\n                        var pixelsToLeftBorder;\n                        var pixelsToRightBorder;\n                        var futureContainer;\n                        var direction;\n\n                        if (originalElement[0] != dropContainer[0]) {\n\n                            dropContainerBoundaries = dropContainer[0].getBoundingClientRect();\n                            pixelsToLeftBorder = e.clientX - dropContainerBoundaries.left;\n                            pixelsToRightBorder = dropContainerBoundaries.right - e.clientX;\n                            direction = pixelsToLeftBorder > pixelsToRightBorder ? \"right\" : \"left\";\n\n                            futureContainer = direction == \"right\" ? dropContainer.next() : dropContainer.prev();\n\n                            //handle the case when the container will be shown over the original one\n                            if (futureContainer[0] == originalElement[0]) {\n                                return;\n                            }\n\n                            that._removeDropHint();\n\n                            originalElement.hide();\n\n                            that._createDropHint({ order: dropContainer.css(\"order\"), columnEnd: target.css(\"grid-column-end\"), rowEnd: target.css(\"grid-row-end\"), direction: direction });\n\n                            originalElement.hide();\n                            that._insertDropHint(dropContainer, direction);\n                        }\n                    }\n                });\n            }\n        });\n\n        function containsOrEqualTo(parent, child) {\n            try {\n                return $.contains(parent, child) || parent == child;\n            } catch (e) {\n                return false;\n            }\n        }\n\n        ui.plugin(TileLayout);\n\n        $.extend(true, TileLayout, { styles: tileLayoutStyles });\n    })(window.kendo.jQuery);\n\n    return window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n\n"],"names":["define","__meta__","id","name","category","depends","features","description","$","window","kendo","jQuery","ui","Widget","Draggable","keys","selector","selectorFromClasses","RESIZE","REORDER","NS","DOWNCURSOR","RIGHTCURSOR","DIAGONALCURSOR","RTLDIAGONALCURSOR","GRABCURSOR","GRABBINGCURSOR","MINIMALSPAN","CURSORCLASSES","tileLayoutStyles","wrapper","item","itemHeader","itemHeaderTitle","itemBody","reorderHint","resizeHint","TileLayout","extend","init","element","options","that","this","fn","call","cssNumber","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","addClass","styles","_setWrapperStyles","_initContainers","_resizable","_navigatable","_reorderable","events","columns","gap","rows","containers","resizable","reorderable","navigatable","columnsWidth","rowsHeight","height","width","destroy","_draggableInstance","find","each","data","resizeHandle","off","remove","setOptions","deepExtend","empty","getOptions","result","items","containerElements","children","hasElements","length","container","header","headerSettings","body","containerSettings","headerContent","itemsMap","i","guid","current","attr","_addContainer","template","text","append","appendTo","bodyTemplate","Error","index","order","_setContainerCoordinates","push","css","grid-template-columns","format","grid-auto-rows","column-gap","padding","row-gap","settings","grid-column-end","colSpan","grid-row-end","rowSpan","_updateContainers","_createResizeHandle","side","down","_isresizing","_positionResizeHandle","leftBorderWidth","parseFloat","bottomBorderWidth","containerHeight","containerWidth","top","left","cursorClass","support","isRtl","removeClass","show","_createResizeHint","hint","insertAfter","_removeResizeHint","_positionHint","_removeAbsoluteStyles","_positionAbsolutely","position","outerWidth","outerHeight","on","_keyDown","bind","e","target","canHandle","is","ctrlKey","keyCode","LEFT","_resizeItem","RIGHT","UP","DOWN","shiftKey","_reorderItem","preventDefault","dir","delta","newSpan","maxSpan","parseInt","replace","split","trigger","newOrder","oldOrder","maxOrder","_updateDOM","newIndex","oldIndex","_sortContainers","indexAttr","sort","a","b","indexA","indexB","undefined","fractionWidth","fractionHeight","currentContainer","lastXLocation","lastYLocation","initialWidth","initialHeight","startColSpan","startRowSpan","itemsMaxSpace","rowsCount","rightPosition","downPosition","rectPosition","getBoundingClientRect","Math","abs","right","clientX","bottom","clientY","Resizable","handle","start","currentTarget","_calculateFractionWidth","_calculateRightEndSide","x","location","scrollHeight","y","resize","hintColumns","hintRows","mouseDeltaX","mouseDeltaY","overflowsLayout","isBeyondMinimum","deltaFromStart","resizeRowsCount","resizeColumnsCount","clientRect","style","scrollX","floor","max","scrollY","resizeend","first","totalWidth","columnGap","_createDropHint","dropHint","columnEnd","rowEnd","direction","_insertDropHint","insertBefore","_removeDropHint","originalElement","itemSelector","headerSelector","group","filter","autoScroll","ignore","closest","clone","dragstart","drag","elementUnderCursor","sender","dropContainer","containerBoundaries","pixelsToLeftBorder","pixelsToRightBorder","draggedItem","containsOrEqualTo","hide","hasClass","futureContainer","next","prev","dragend","itemId","end","min","kendoDropTarget","dragenter","dropTarget","dropContainerBoundaries","parent","child","contains","plugin","amd","a1","a2","a3"],"mappings":"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"}