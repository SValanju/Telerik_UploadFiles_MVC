{"version":3,"file":"kendo.scheduler.monthview.min.js","sources":["kendo.scheduler.monthview.js"],"sourcesContent":["(function(f, define) {\n    define('kendo.scheduler.monthview',[ \"kendo.scheduler.view\" ], f);\n})(function() {\n\nvar __meta__ = { // jshint ignore:line\n    id: \"scheduler.monthview\",\n    name: \"Scheduler Month View\",\n    category: \"web\",\n    description: \"The Scheduler Month View\",\n    depends: [ \"scheduler.view\" ],\n    hidden: true\n};\n\n(function($) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        SchedulerView = ui.SchedulerView,\n        NS = \".kendoMonthView\",\n        extend = $.extend,\n        getDate = kendo.date.getDate,\n        MS_PER_DAY = kendo.date.MS_PER_DAY,\n        NUMBER_OF_ROWS = 6,\n        NUMBER_OF_COLUMNS = 7,\n        INVERSE_COLOR_CLASS = \"k-event-inverse\",\n        DAY_TEMPLATE = kendo.template('<span class=\"k-link k-nav-day\">#:kendo.toString(date, \"dd\")#</span>'),\n        EVENT_WRAPPER_STRING = '<div role=\"button\" data-#=ns#uid=\"#=uid#\"' +\n                'aria-label=\"#: ariaLabel #\" ' +\n                '#if (resources[0]) { #' +\n                    'style=\"background-color:#=resources[0].color #; border-color: #=resources[0].color#\"' +\n                    'class=\"k-event\"' +\n                '#} else {#' +\n                    'class=\"k-event\"' +\n                '#}#' +\n                '>' +\n                '<span class=\"k-event-actions\">' +\n                    '# if (data.tail || data.middle) {#' +\n                        '<span class=\"k-icon k-i-arrow-60-left\"></span>' +\n                    '#}#' +\n                    '# if (data.isException()) {#' +\n                        '<span class=\"k-icon k-i-non-recurrence\"></span>' +\n                    '# } else if (data.isRecurring()) {#' +\n                        '<span class=\"k-icon k-i-reload\"></span>' +\n                    '#}#' +\n                '</span>' +\n                '{0}' +\n                '<span class=\"k-event-actions\">' +\n                    '#if (showDelete) {#' +\n                        '<a href=\"\\\\#\" class=\"k-link k-event-delete\" title=\"${data.messages.destroy}\" aria-label=\"${data.messages.destroy}\"><span class=\"k-icon k-i-close\"></span></a>' +\n                    '#}#' +\n                    '# if (data.head || data.middle) {#' +\n                        '<span class=\"k-icon k-i-arrow-60-right\"></span>' +\n                    '#}#' +\n                '</span>' +\n                '# if (resizable && !data.tail && !data.middle) {#' +\n                '<span class=\"k-resize-handle k-resize-w\"></span>' +\n                '#}#' +\n                '# if (resizable && !data.head && !data.middle) {#' +\n                '<span class=\"k-resize-handle k-resize-e\"></span>' +\n                '#}#' +\n                '</div>',\n        EVENT_TEMPLATE = kendo.template('<div title=\"#=title.replace(/\"/g,\"&\\\\#34;\")#\">' +\n                    '<div class=\"k-event-template\">#:title#</div>' +\n                '</div>');\n\n    var CELL_INNER_SPACING = 2;\n\n    var MORE_BUTTON_TEMPLATE = kendo.template(\n        '<div style=\"width:#=width#px;left:#=left#px;top:#=top#px\" class=\"k-more-events k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\"><span class=\"k-button-icon k-icon k-i-more-horizontal\"></span></div>'\n    );\n\n    var MonthGroupedView = kendo.Class.extend({\n        init: function(view) {\n            this._view = view;\n        },\n\n        _verticalRowCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._rowCountForLevel(level);\n        },\n\n        _horizontalGroupCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level);\n        },\n\n        _getCalendarRowsLength: function(cellsPerRow, cellCount) {\n            return cellCount / cellsPerRow;\n        },\n\n        _createRows: function(start, startIdx, horizontalGroupCount, verticalGroupIndex) {\n            var view = this._view;\n            var cellsPerRow = NUMBER_OF_COLUMNS;\n            var isVerticallyGrouped = view._isVerticallyGrouped();\n            var html = \"\";\n\n            for (var groupIdx = 0; groupIdx < horizontalGroupCount; groupIdx++) {\n                html += view._createRow(start, startIdx, cellsPerRow, isVerticallyGrouped ? verticalGroupIndex : groupIdx);\n            }\n\n            return html;\n        },\n\n        _adjustStartDate: function(start) {\n            return kendo.date.addDays(start, NUMBER_OF_COLUMNS);\n        },\n\n        _getContent: function(content, startDate, resources) {\n            return content({ date: startDate, resources: resources });\n        },\n\n        _getTimeSlotByPosition: function(x, y, groupIndex) {\n            var group = this._view.groups[groupIndex];\n\n            return group.daySlotByPosition(x, y);\n        },\n\n        _nextSlotStartDate: function(startDate) {\n            return kendo.date.nextDay(startDate);\n        },\n\n        _createRowsLayout: function(resources, rows, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createRowsLayout(resources, rows, groupHeaderTemplate);\n        },\n\n        _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n\n            return columns;\n        },\n\n        _createColumnsLayout: function(resources, columns, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, columns, groupHeaderTemplate);\n        },\n\n        _verticalGroupCount: function(level) {\n            var view = this._view;\n\n            return view._rowCountForLevel(level);\n        },\n\n        _horizontalGroupCount: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level) / view._columnOffsetForResource(level);\n        },\n\n        _positionMobileEvent: function(event, group, range, rangeCount, start, end, rangeIndex) {\n            var view = this._view;\n\n            if (rangeCount > 1) {\n                if (rangeIndex === 0) {\n                    end = range.end.endDate();\n                } else if (rangeIndex == rangeCount - 1) {\n                    start = range.start.startDate();\n                } else {\n                    start = range.start.startDate();\n                    end = range.end.endDate();\n                }\n            }\n\n            var occurrence = event.clone({ start: new Date(start), end: new Date(end), head: range.head, tail: range.tail });\n\n            view._positionMobileEvent(range, view._createEventElement(occurrence), group);\n        },\n\n        _positionEvent: function(event, group, range, rangeCount, start, end, rangeIndex) {\n            var view = this._view;\n\n            if (rangeCount > 1) {\n                if (rangeIndex === 0) {\n                    end = range.end.endDate();\n                } else if (rangeIndex == rangeCount - 1) {\n                    start = range.start.startDate();\n                } else {\n                    start = range.start.startDate();\n                    end = range.end.endDate();\n                }\n            }\n\n            var occurrence = event.clone({ start: start, end: end, head: range.head, tail: range.tail });\n\n            view._positionEvent(range, view._createEventElement(occurrence), group);\n        },\n\n        _addDaySlotCollections: function(groupCount, tableRows, startDate) {\n            var view = this._view;\n            var columnCount = NUMBER_OF_COLUMNS;\n            var rowCount = NUMBER_OF_ROWS;\n\n            for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                var cellCount = 0;\n                var rowMultiplier = 0;\n\n                if (view._isVerticallyGrouped()) {\n                    rowMultiplier = groupIndex;\n                }\n\n                for (var rowIndex = rowMultiplier * rowCount; rowIndex < (rowMultiplier + 1) * rowCount; rowIndex++) {\n                    var group = view.groups[groupIndex];\n                    var collection = group.addDaySlotCollection(kendo.date.addDays(startDate, cellCount), kendo.date.addDays(startDate, cellCount + columnCount));\n\n                    var tableRow = tableRows[rowIndex];\n                    var cells = tableRow.children;\n                    var cellMultiplier = 0;\n\n                    if (!view._isVerticallyGrouped()) {\n                        cellMultiplier = groupIndex;\n                    }\n\n                    for (var cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n                        var cell = cells[cellIndex];\n\n                        view.addDaySlot(collection, cell, startDate, cellCount);\n                        cellCount++;\n                    }\n                }\n            }\n        },\n\n        _changePeriodGroupIndex: function(reverse) {\n            var view = this._view;\n\n            return reverse ? view.groups.length - 1 : 0;\n        },\n\n        _createResizeHint: function(range) {\n            var view = this._view;\n            var left = range.startSlot().offsetLeft;\n            var top = range.start.offsetTop;\n            var width = range.innerWidth();\n            var height = range.start.clientHeight - 2;\n            var hint = SchedulerView.fn._createResizeHint.call(view, left, top, width, height);\n\n            view._appendResizeHint(hint);\n        },\n\n        _createMoveHint: function(range, event) {\n            var view = this._view;\n            var startSlot = range.startSlot();\n            var endSlot = range.endSlot();\n            var hint = view._createEventElement(event.clone({ head: range.head, tail: range.tail }));\n\n            hint.css({\n                left: startSlot.offsetLeft + 2,\n                top: startSlot.offsetTop + startSlot.firstChildHeight,\n                height: (view.options.eventHeight === \"auto\") ? 25 : view.options.eventHeight,\n                width: range.innerWidth() - (startSlot.index !== endSlot.index ? 3 : 2)\n            });\n\n            hint.addClass(\"k-event-drag-hint\");\n\n            if (event.inverseColor) {\n                hint.addClass(INVERSE_COLOR_CLASS);\n            }\n\n            view._appendMoveHint(hint);\n        }\n    });\n\n    var MonthGroupedByDateView = kendo.Class.extend({\n        init: function(view) {\n            this._view = view;\n        },\n\n        _verticalRowCountForLevel: function() {\n            return 1;\n        },\n\n        _horizontalGroupCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level + 1) / NUMBER_OF_COLUMNS;\n        },\n\n        _createRows: function(start, startIdx, horizontalGroupCount) {\n            var view = this._view;\n            var cellsPerRow = NUMBER_OF_COLUMNS;\n            var isVerticallyGrouped = view._isVerticallyGrouped();\n            var html = \"\";\n            var dateIdx = 0;\n\n            if (isVerticallyGrouped) {\n                var verticalStart = new Date(start);\n                var groupCount = view._groupCount();\n                for (dateIdx; dateIdx < NUMBER_OF_ROWS; dateIdx++) {\n                    html += view._createRow(verticalStart, startIdx, groupCount, dateIdx);\n\n                    verticalStart = kendo.date.addDays(verticalStart, cellsPerRow);\n                }\n                start = kendo.date.nextDay(start);\n            } else {\n                for (dateIdx; dateIdx < cellsPerRow; dateIdx++) {\n                    html += view._createRow(start, startIdx, horizontalGroupCount, dateIdx);\n                    start = kendo.date.nextDay(start);\n                }\n                start = kendo.date.addDays(start, cellsPerRow);\n            }\n\n            return html;\n        },\n\n        _adjustStartDate: function(start, isLastRow) {\n            var view = this._view;\n            var isVerticallyGrouped = view._isVerticallyGrouped();\n\n            if (isVerticallyGrouped) {\n                if (isLastRow) {\n                    return kendo.date.addDays(start, NUMBER_OF_COLUMNS * (NUMBER_OF_ROWS - 1) + 1);\n                } else {\n                    return kendo.date.nextDay(start);\n                }\n            }\n\n            return kendo.date.addDays(start, NUMBER_OF_COLUMNS);\n        },\n\n        _getContent: function(content, startDate, resources, cellIdx) {\n            if (cellIdx === 0) {\n                return content({ date: startDate, resources: resources });\n            }\n            return \"\";\n        },\n\n        _getTimeSlotByPosition: function(x, y, groupIndex) {\n            var group = this._view.groups[groupIndex];\n\n            return group.daySlotByPosition(x, y, true);\n        },\n\n        _nextSlotStartDate: function(startDate) {\n            return startDate;\n        },\n\n        _getCalendarRowsLength: function() {\n            var view = this._view;\n            var isVerticallyGrouped = view._isVerticallyGrouped();\n\n            return isVerticallyGrouped ? NUMBER_OF_COLUMNS : NUMBER_OF_ROWS;\n        },\n\n        _createRowsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n            var view = this._view;\n\n            return view._createDateLayout(columns, null, false);\n        },\n\n        _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate) {\n            var view = this._view;\n            var resource = resources[0];\n            var configuration = [];\n            var data = resource.dataSource.view();\n\n            for (var dataIndex = 0; dataIndex < data.length * NUMBER_OF_ROWS; dataIndex++) {\n                var value = kendo.getter(resource.dataValueField)(data[dataIndex % data.length]);\n                var obj = {\n                    text: groupHeaderTemplate({\n                        text: kendo.htmlEncode(kendo.getter(resource.dataTextField)(data[dataIndex % data.length])),\n                        color: kendo.getter(resource.dataColorField)(data[dataIndex % data.length]),\n                        field: resource.field,\n                        title: resource.title,\n                        name: resource.name,\n                        value: value\n                    }),\n                    className: \"k-slot-cell\",\n                    value: value\n                };\n\n                obj.columns = view._createColumnsLayout(resources.slice(1), null, groupHeaderTemplate, null, null, value);\n\n                configuration.push(obj);\n            }\n\n            return configuration;\n        },\n\n        _createColumnsLayout: function(resources, columns, groupHeaderTemplate, subColumns) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, columns, groupHeaderTemplate, subColumns, true);\n        },\n\n        _verticalGroupCount: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level) / NUMBER_OF_ROWS;\n        },\n\n        _horizontalGroupCount: function(level) {\n            var view = this._view;\n            return view._columnCountForLevel(level) / NUMBER_OF_COLUMNS;\n        },\n\n        _positionMobileEvent: function(event, group, range, rangeCount, start, end) {\n            var view = this._view;\n            var startIndex = range.start.index;\n            var endIndex = range.end.index;\n\n            for (var i = range.start.index; i <= range.end.index; i++) {\n                var currentSlot = range.collection._slots[i];\n                var dateRange = group.daySlotRanges(currentSlot.start, currentSlot.start, true)[0];\n\n                var occurrence = event.clone({\n                    start: i === startIndex ? start : currentSlot.startDate(),\n                    end: i === endIndex ? end : currentSlot.endDate(),\n                    head: i !== endIndex || range.head,\n                    tail: i !== startIndex || range.tail });\n\n                view._positionMobileEvent(dateRange, view._createEventElement(occurrence), group);\n            }\n        },\n\n        _positionEvent: function(event, group, range, rangeCount, start, end) {\n            var view = this._view;\n            var startIndex = range.start.index;\n            var endIndex = range.end.index;\n\n            for (var i = range.start.index; i <= range.end.index; i++) {\n                var currentSlot = range.collection._slots[i];\n                var dateRange = group.daySlotRanges(currentSlot.start, currentSlot.start, true)[0];\n\n                var occurrence = event.clone({\n                    start: i === startIndex ? start : currentSlot.startDate(),\n                    end: i === endIndex ? end : currentSlot.endDate(),\n                    head: i !== endIndex || range.head,\n                    tail: i !== startIndex || range.tail });\n\n                view._positionEvent(dateRange, view._createEventElement(occurrence), group);\n            }\n        },\n\n        _addDaySlotCollections: function(groupCount, tableRows, startDate) {\n            var view = this._view;\n            var columnCount = NUMBER_OF_COLUMNS;\n            var rowCount = NUMBER_OF_ROWS;\n            var isVerticallyGrouped = view._isVerticallyGrouped();\n\n            for (var dateIndex = 0; dateIndex < columnCount; dateIndex++) {\n                for (var rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n                    var groupIndex = 0;\n                    var currentTableIndex = isVerticallyGrouped ? dateIndex : rowIndex;\n                    var tableRow = tableRows[currentTableIndex];\n                    var cells = tableRow.children;\n                    var cellMultiplier = 0;\n\n                    if (!view._isVerticallyGrouped()) {\n                        cellMultiplier = dateIndex;\n                    }\n\n                    for (var cellIndex = cellMultiplier * groupCount; cellIndex < (cellMultiplier + 1) * groupCount; cellIndex++) {\n                        var cellCount = (rowIndex * columnCount) + dateIndex;\n                        var currentCellIndex = isVerticallyGrouped ? cellIndex + (rowIndex * groupCount) : cellIndex;\n                        var cell = cells[currentCellIndex];\n                        var currentGroupIndex = isVerticallyGrouped ? cellIndex : groupIndex;\n                        var group = view.groups[currentGroupIndex];\n                        var collection;\n                        if (dateIndex === 0) {\n                            collection = group.addDaySlotCollection(kendo.date.addDays(startDate, cellCount), kendo.date.addDays(startDate, cellCount + columnCount));\n                        } else {\n                            collection = group._daySlotCollections[rowIndex];\n                        }\n\n                        view.addDaySlot(collection, cell, startDate, cellCount);\n                        groupIndex++;\n                    }\n                }\n            }\n        },\n\n        _changePeriodGroupIndex: function(reverse, vertical, selectionGroupIndex) {\n            var view = this._view;\n\n            if (vertical && view._isVerticallyGrouped()) {\n                return reverse ? view.groups.length - 1 : 0;\n            }\n\n            return selectionGroupIndex;\n        },\n\n        _createResizeHint: function(range) {\n            var view = this._view;\n            var left, top, width, height, hint;\n\n            if (view._isVerticallyGrouped()) {\n            left = range.startSlot().offsetLeft;\n            top = range.start.offsetTop;\n            width = range.startSlot().offsetWidth;\n            height = range.endSlot().offsetTop + range.startSlot().offsetHeight - range.startSlot().offsetTop - 2;\n            hint = SchedulerView.fn._createResizeHint.call(view, left, top, width, height);\n\n            view._appendResizeHint(hint);\n            } else {\n                for (var slotIdx = range.startSlot().index; slotIdx <= range.endSlot().index; slotIdx++) {\n                    var slot = range.collection._slots[slotIdx];\n                    left = slot.offsetLeft;\n                    top = slot.offsetTop;\n                    width = slot.offsetWidth;\n                    height = slot.offsetHeight - 2;\n                    hint = SchedulerView.fn._createResizeHint.call(view, left, top, width, height);\n\n                    view._appendResizeHint(hint);\n                }\n            }\n        },\n\n        _createMoveHint: function(range, event) {\n            var view = this._view;\n            var startSlot = range.startSlot();\n            var endSlot = range.endSlot();\n\n            for (var slotIdx = startSlot.index; slotIdx <= endSlot.index; slotIdx++) {\n                var slot = range.collection._slots[slotIdx];\n                var hint = view._createEventElement(event.clone({ head: range.head, tail: range.tail }));\n\n                hint.css({\n                    left: slot.offsetLeft,\n                    top: slot.offsetTop + slot.firstChildHeight,\n                    height: (view.options.eventHeight === \"auto\") ? 25 : view.options.eventHeight,\n                    width: slot.offsetWidth - 2\n                });\n\n                hint.addClass(\"k-event-drag-hint\");\n\n                if (event.inverseColor) {\n                    hint.addClass(INVERSE_COLOR_CLASS);\n                }\n\n                view._appendMoveHint(hint);\n            }\n        }\n    });\n\n    kendo.ui.scheduler.MonthGroupedView = MonthGroupedView;\n    kendo.ui.scheduler.MonthGroupedByDateView = MonthGroupedByDateView;\n\n    ui.MonthView = SchedulerView.extend({\n        init: function(element, options) {\n            var that = this;\n\n            // Do not allow less than one event\n            if (options.eventsPerDay === 0) {\n                options.eventsPerDay = 1;\n            }\n\n            // Do not allow 0 height events\n            if (options.eventHeight === 0) {\n                options.eventHeight = 1;\n            }\n\n            // Do not allow 0 height more-button\n            if (options.moreButtonHeight === 0) {\n                options.moreButtonHeight = 1;\n            }\n\n            // Do not allow string values other than auto\n            if (typeof options.eventHeight === \"string\" && options.eventHeight !== \"auto\") {\n                options.eventHeight = 25;\n            }\n\n            // Set adaptiveSlotHeight to true if eventHeight is auto\n            if (options.eventHeight === \"auto\") {\n                options.adaptiveSlotHeight = true;\n            }\n\n            SchedulerView.fn.init.call(that, element, options);\n            that._groupedView = that._getGroupedView();\n\n            // Exception handling for invalid combinations\n            var isGroupedByDate = this._isGroupedByDate();\n            var adaptiveSlotHeight = this.options.adaptiveSlotHeight;\n            var eventHeight = this.options.eventHeight;\n\n            if (isGroupedByDate === true && adaptiveSlotHeight === true) {\n                throw new Error(\"Incompatible options: adaptive slot height and date grouping!\");\n            }\n\n            if (isGroupedByDate === true && eventHeight === \"auto\") {\n                throw new Error(\"Incompatible options: auto event height and date grouping!\");\n            }\n\n            that.title = that.options.title;\n\n            that._templates();\n\n            that._editable();\n\n            that._renderLayout(that.options.date);\n\n            that._groups();\n        },\n\n        name: \"month\",\n\n        _getGroupedView: function() {\n            if (this._isGroupedByDate()) {\n                return new kendo.ui.scheduler.MonthGroupedByDateView(this);\n            } else {\n                return new kendo.ui.scheduler.MonthGroupedView(this);\n            }\n        },\n\n        _updateDirection: function(selection, ranges, multiple, reverse, vertical) {\n            if (multiple) {\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                var isSameSlot = startSlot.index === endSlot.index;\n                var isSameCollection = startSlot.collectionIndex === endSlot.collectionIndex;\n                var updateDirection;\n\n                if (vertical) {\n                    updateDirection = (isSameSlot && isSameCollection) || isSameCollection;\n                } else {\n                    updateDirection = isSameSlot && isSameCollection;\n                }\n\n                if (updateDirection) {\n                    selection.backward = reverse;\n                }\n            }\n        },\n\n        _changeDate: function(selection, slot, previous) {\n            var group = this.groups[selection.groupIndex];\n            var collections, index;\n\n            if (previous) {\n                collections = group._getCollections(group.daySlotCollectionCount());\n                index = slot.collectionIndex - 1;\n\n                if (index >= 0) {\n                    return collections[index]._slots[collections[index]._slots.length - 1];\n                }\n            } else {\n                collections = group._getCollections(group.daySlotCollectionCount());\n                index = slot.collectionIndex + 1;\n                var slotIndex = 0;\n\n                if (collections[index] && collections[index]._slots[slotIndex]) {\n                    return collections[index]._slots[slotIndex];\n                }\n            }\n        },\n\n        _getNextHorizontalRange: function(group, method, horizontalRange) {\n            var isVertical = this._isVerticallyGrouped();\n\n            horizontalRange.startSlot = group[method](horizontalRange.startSlot, isVertical);\n            horizontalRange.endSlot = group[method](horizontalRange.endSlot, isVertical);\n\n            return horizontalRange;\n        },\n\n        _getNextVerticalRange: function(group, method, verticalRange, multiple) {\n            var isVertical = this._isVerticallyGrouped() && this._isGroupedByDate();\n\n            verticalRange.startSlot = group[method](verticalRange.startSlot, multiple, isVertical);\n            verticalRange.endSlot = group[method](verticalRange.endSlot, multiple, isVertical);\n\n            return verticalRange;\n        },\n\n        _changeViewPeriod: function(selection, reverse, vertical) {\n            var pad = vertical ? 7 : 1;\n            var newStart, newEnd;\n\n            if (reverse) {\n                pad *= -1;\n            }\n\n            newStart = kendo.date.addDays(selection.start, pad);\n            newEnd = kendo.date.addDays(selection.end, pad);\n\n            if (this._isInRange(newStart, newEnd)) {\n                return false;\n            }\n\n            selection.start = newStart;\n            selection.end = newEnd;\n\n            if (!vertical || (vertical && this._isVerticallyGrouped())) {\n                selection.groupIndex = this._groupedView._changePeriodGroupIndex(reverse, vertical, selection.groupIndex);\n            }\n\n            selection.events = [];\n\n            return true;\n        },\n\n        _continuousSlot: function(selection, ranges, reverse) {\n            var index = selection.backward ? 0 : ranges.length - 1;\n            var group = this.groups[selection.groupIndex];\n\n            return group.continuousSlot(ranges[index].start, reverse);\n        },\n\n        _changeGroupContinuously: function(selection, continuousSlot, multiple, reverse) {\n            if (!multiple) {\n                var groupIndex = selection.groupIndex;\n                var lastGroupIndex = this.groups.length - 1;\n                var vertical = this._isVerticallyGrouped();\n                var group = this.groups[groupIndex];\n\n                if (!continuousSlot && vertical) {\n\n                    continuousSlot = group[reverse ? \"lastSlot\" : \"firstSlot\"]();\n\n                    groupIndex += (reverse ? -1 : 1);\n\n                } else if (continuousSlot && !vertical) {\n                    groupIndex = reverse ? lastGroupIndex : 0;\n                }\n\n                if (groupIndex < 0 || groupIndex > lastGroupIndex) {\n                    groupIndex = reverse ? lastGroupIndex : 0;\n                    continuousSlot = null;\n                }\n\n                selection.groupIndex = groupIndex;\n            }\n\n            return continuousSlot;\n        },\n\n        _normalizeHorizontalSelection: function(selection, ranges, reverse) {\n            var slot;\n\n            if (reverse) {\n                slot = ranges[0].start;\n            } else {\n                slot = ranges[ranges.length - 1].end;\n            }\n\n            return slot;\n        },\n\n        _normalizeVerticalSelection: function(selection, ranges) {\n            var slot;\n\n            if (selection.backward) {\n                slot = ranges[0].start;\n            } else {\n                slot = ranges[ranges.length - 1].end;\n            }\n\n            return slot;\n        },\n\n        _templates: function() {\n            var options = this.options,\n                settings = extend({}, kendo.Template, options.templateSettings);\n\n            this.eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_STRING);\n            this.dayTemplate = kendo.template(options.dayTemplate, settings);\n            this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n        },\n\n        dateForTitle: function() {\n            return kendo.format(this.options.selectedDateFormat, this._firstDayOfMonth, this._lastDayOfMonth);\n        },\n\n        shortDateForTitle: function() {\n            return kendo.format(this.options.selectedShortDateFormat, this._firstDayOfMonth, this._lastDayOfMonth);\n        },\n\n        mobileDateForTitle: function() {\n            return kendo.format(this.options.selectedMobileDateFormat, this._firstDayOfMonth, this._lastDayOfMonth);\n        },\n\n        nextDate: function() {\n            return kendo.date.nextDay(this._lastDayOfMonth);\n        },\n\n        previousDate: function() {\n            return kendo.date.previousDay(this._firstDayOfMonth);\n        },\n\n        startDate: function() {\n            return this._startDate;\n        },\n\n        endDate: function() {\n            return this._endDate;\n        },\n\n        _renderLayout: function(date) {\n            var that = this;\n\n            this._firstDayOfMonth = kendo.date.firstDayOfMonth(date);\n\n            this._lastDayOfMonth = kendo.date.lastDayOfMonth(date);\n\n            this._startDate = firstVisibleMonthDay(date, this.calendarInfo());\n\n            this.createLayout(this._layout());\n\n            this._content();\n\n            this._initSlotHeight();\n\n            this.refreshLayout();\n\n            if (this._isVirtualized()) {\n                this._tryRenderContent();\n            }\n\n            this.content.on(\"click\" + NS, \".k-nav-day,.k-more-events\", function(e) {\n                var offset = $(e.currentTarget).offset();\n                var slot = that._slotByPosition(offset.left, offset.top);\n\n                e.preventDefault();\n                that.trigger(\"navigate\", { view: \"day\", date: slot.startDate() });\n            });\n\n            this._footer();\n        },\n\n        _editable: function() {\n            if (this.options.editable) {\n                if (this._isMobile()) {\n                    this._touchEditable();\n                } else {\n                    this._mouseEditable();\n                }\n\n            }\n        },\n\n        _mouseEditable: function() {\n            var that = this;\n            that.element.on(\"click\" + NS, \".k-scheduler-monthview .k-event a:has(.k-i-close)\", function(e) {\n                that.trigger(\"remove\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                e.preventDefault();\n            });\n\n            if (that.options.editable.create !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-scheduler-monthview .k-scheduler-content td\", function(e) {\n                    var offset = $(e.currentTarget).offset();\n                    var slot = that._slotByPosition(offset.left, offset.top);\n\n                    if (slot) {\n                        var resourceInfo = that._resourceBySlot(slot);\n                        that.trigger(\"add\", { eventInfo: extend({ isAllDay: true, start: slot.startDate(), end: slot.startDate() }, resourceInfo ) });\n                    }\n\n                    e.preventDefault();\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-scheduler-monthview .k-event\", function(e) {\n                    that.trigger(\"edit\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                    e.preventDefault();\n                });\n            }\n        },\n\n        _touchEditable: function() {\n            var that = this;\n            var threshold = 0;\n\n            if (kendo.support.mobileOS.android) {\n                threshold = 5;\n            }\n\n            if (that.options.editable.create !== false) {\n                that._addUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-scheduler-monthview .k-scheduler-content td\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var offset = $(e.target).offset();\n                        var slot = that._slotByPosition(offset.left, offset.top);\n\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({ isAllDay: true, start: slot.startDate(), end: slot.startDate() }, resourceInfo ) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n        },\n\n        selectionByElement: function(cell) {\n            var offset = $(cell).offset();\n            return this._slotByPosition(offset.left, offset.top);\n        },\n\n        _columnCountForLevel: function(level) {\n            var columnLevel = this.columnLevels[level];\n            return columnLevel ? columnLevel.length : 0;\n        },\n\n        _rowCountForLevel: function(level) {\n            var rowLevel = this.rowLevels[level];\n            return rowLevel ? rowLevel.length : 0;\n        },\n\n        _content: function() {\n            var html = '<tbody>';\n            var verticalGroupCount = 1;\n            var groupedView = this._groupedView;\n            var resources = this.groupedResources;\n\n            if (resources.length) {\n                if (this._isVerticallyGrouped()) {\n                    verticalGroupCount = groupedView._verticalRowCountForLevel(resources.length - 1);\n                }\n            }\n\n            for (var verticalGroupIdx = 0; verticalGroupIdx < verticalGroupCount; verticalGroupIdx++) {\n                html += this._createCalendar(verticalGroupIdx);\n                this._cachedGroupIndex = verticalGroupIdx;\n            }\n\n            html += \"</tbody>\";\n\n            this.content.find(\"table\").html(html);\n        },\n\n        _virtualContent: function() {\n            var that = this;\n            var html = '';\n\n            html += this._createCalendar(++this._cachedGroupIndex);\n\n            that.content.find(\"table tbody\").append(html);\n\n            that._initSlotHeight();\n        },\n\n        _calcSlotHeight: function(eventsPerDay) {\n            var options = this.options;\n            var eventHeight = options.eventHeight;\n            var eventSpacing = options.eventSpacing;\n            var moreButtonHeight = options.moreButtonHeight;\n            var firstCell = this.content.find(\"table tr td\")[0];\n            var dateHeader;\n\n            if (eventHeight === \"auto\" || !firstCell) {\n                return undefined;\n            }\n\n            dateHeader = firstCell.firstChild;\n\n            return Math.round(\n                // border of cell\n                ( firstCell.offsetHeight - firstCell.clientHeight ) +\n\n                // top padding\n                dateHeader.offsetTop +\n\n                // height of date header\n                dateHeader.offsetHeight +\n\n                // cell inner spacing\n                CELL_INNER_SPACING +\n\n                // all visible events and spacing\n                ( eventsPerDay * eventHeight ) + ( ( eventsPerDay - 1 ) * eventSpacing ) +\n\n                // leading space, more button\n                ( CELL_INNER_SPACING + moreButtonHeight ) +\n\n                // traling spacing\n                CELL_INNER_SPACING\n            );\n        },\n\n        _initSlotHeight: function() {\n            var options = this.options;\n            var eventsPerDay = options.eventsPerDay;\n            var eventHeight = options.eventHeight;\n            var isMobile = this._isMobile();\n            var table = this.content.find(\"table\");\n            var rowHeight;\n\n            if (isMobile) {\n                return;\n            }\n\n            if (typeof eventHeight === \"number\") {\n                rowHeight = this._calcSlotHeight(eventsPerDay);\n\n                table.find(\"tr\").height( rowHeight );\n\n                table.addClass(\"k-scheduler-table-auto\");\n            }\n        },\n\n        _adjustSlotHeight: function(group) {\n            var options = this.options;\n            var eventHeight = options.eventHeight;\n            var eventSpacing = options.eventSpacing;\n            var moreButtonHeight = options.moreButtonHeight;\n\n            if (this._canAdjustSlotHeight !== true) {\n                return;\n            }\n\n            var weeks = group._daySlotCollections;\n\n            this.content.find(\"table\").addClass(\"k-scheduler-table-auto\");\n\n            weeks.forEach(function(week) {\n                var events = week._events;\n                var eventIndex = 0;\n                var slots = week._slots;\n                var firstSlot = slots[0];\n                var weekOffsetTop = firstSlot.element.offsetTop;\n                var weekHeight = 0;\n\n                // Ensure event meta exists in each slot\n                slots.forEach(function(slot) {\n                    if (!slot.eventMeta) {\n                        slot.eventMeta = [];\n                        slot.actualEventCount = 0;\n                    } else {\n                        slot.actualEventCount = slot.eventMeta.length;\n                    }\n                });\n\n                // Ensure spanning event meta is present in all related slots\n                slots.forEach(function(slot, slotIndex) {\n\n                    slot.eventMeta.forEach(function(meta, eventIndex) {\n\n                        // Skip events not starting in this slot\n                        if (meta.startIndex !== slotIndex) {\n                            return;\n                        }\n\n                        // Skip non-spanning events\n                        if (meta.startIndex === meta.endIndex) {\n                            return;\n                        }\n\n                        // Copy spanning event meta in all related slots\n                        slots.slice(slotIndex, meta.endIndex + 1).forEach(function(adjSlot) {\n\n                            var adjMeta = adjSlot.eventMeta;\n\n                            if (adjMeta.indexOf(meta) > -1) {\n                                return;\n                            }\n\n                            // adjMeta.push(meta);\n                            adjMeta[adjMeta.length] = slot.eventMeta[eventIndex];\n                            adjSlot.actualEventCount = adjMeta.length;\n                            adjSlot.dirty = true;\n                        });\n\n                    });\n\n                    // Set correct order\n                    if (slot.dirty === true) {\n                        slot.eventMeta.sort(function(first, second) {\n                            return first.order - second.order;\n                        });\n                        delete slot.dirty;\n                    }\n\n                });\n\n                if (eventHeight === \"auto\") {\n                    slots.forEach(function(slot, slotIndex) { // jshint ignore:line\n                        var slotHeight = slot.firstChildTop + slot.firstChildHeight + CELL_INNER_SPACING;\n\n                        slot.eventMeta.forEach(function(meta, eventIndex) { // jshint ignore:line\n                            meta.top = Math.max(meta.top, weekOffsetTop + slotHeight);\n                            slotHeight = (meta.top - weekOffsetTop) + eventSpacing + meta.height;\n                        });\n                    });\n                }\n\n                // Position events\n                slots.forEach(function(slot, slotIndex) {\n                    var slotHeight = slot.firstChildTop + slot.firstChildHeight + CELL_INNER_SPACING;\n\n                    slot.eventMeta.forEach(function(meta) {\n                        meta.top = Math.max(meta.top, weekOffsetTop + slotHeight);\n                        slotHeight = (meta.top - weekOffsetTop) + eventSpacing + meta.height;\n\n                        if (meta.startIndex === slotIndex) {\n                            events[eventIndex].element[0].style.top = meta.top + \"px\";\n                            eventIndex++;\n                        }\n                    });\n\n                    if (slot.eventMeta.length > 0) {\n                        slotHeight -= eventSpacing;\n                        slotHeight += CELL_INNER_SPACING;\n                    } else {\n                        slotHeight += (eventHeight === \"auto\" ? 25 : eventHeight);\n                    }\n\n                    if (slot.more) {\n                        slot.more[0].style.top = weekOffsetTop + slotHeight + \"px\";\n                        slotHeight += CELL_INNER_SPACING + moreButtonHeight;\n                    }\n\n                    weekHeight = Math.max(weekHeight, slotHeight + 1);\n\n                });\n\n                // Update slot size and meta\n                firstSlot.element.parentNode.style.height = weekHeight + \"px\";\n                slots.forEach(function(slot) {\n                    slot.offsetTop = weekOffsetTop;\n                    slot.offsetHeight = weekHeight;\n                    slot.clientHeight = weekHeight - 1;\n                });\n\n            });\n        },\n\n        _createCalendar: function(verticalGroupIndex) {\n            var start = this.startDate();\n            var cellCount = NUMBER_OF_COLUMNS * NUMBER_OF_ROWS;\n            var cellsPerRow = NUMBER_OF_COLUMNS;\n            var weekStartDates = [start];\n            var html = '';\n            var horizontalGroupCount = 1;\n            var isVerticallyGrouped = this._isVerticallyGrouped();\n            var groupedView = this._groupedView;\n\n            var resources = this.groupedResources;\n\n            if (resources.length) {\n                if (!isVerticallyGrouped) {\n                    horizontalGroupCount = groupedView._horizontalGroupCountForLevel(resources.length - 1);\n                }\n            }\n\n            this._slotIndices = {};\n\n            var calendarRowsLength = groupedView._getCalendarRowsLength(cellsPerRow, cellCount);\n\n            for (var rowIdx = 0; rowIdx < calendarRowsLength; rowIdx++) {\n                html += \"<tr>\";\n\n                weekStartDates.push(start);\n\n                var startIdx = rowIdx * cellsPerRow;\n\n                html += groupedView._createRows(start, startIdx, horizontalGroupCount, verticalGroupIndex);\n                start = groupedView._adjustStartDate(start, rowIdx === calendarRowsLength - 1);\n\n                html += \"</tr>\";\n            }\n\n            this._weekStartDates = weekStartDates;\n            this._endDate = kendo.date.previousDay(start);\n\n            return html;\n        },\n\n        _createRow: function(startDate, startIdx, cellsPerRow, groupIndex) {\n            var that = this;\n            var min = that._firstDayOfMonth;\n            var max = that._lastDayOfMonth;\n            var content = that.dayTemplate;\n            var classes = \"\";\n            var html = \"\";\n            var groupedView = this._groupedView;\n\n            var resources = function() {\n                return that._resourceBySlot({ groupIndex: groupIndex });\n            };\n\n            for (var cellIdx = 0; cellIdx < cellsPerRow; cellIdx++) {\n                classes = \"\";\n\n                if (kendo.date.isToday(startDate)) {\n                    classes += \"k-today\";\n                }\n\n                if (!kendo.date.isInDateRange(startDate, min, max)) {\n                    classes += \" k-other-month\";\n                }\n\n                html += \"<td \";\n\n                if (classes !== \"\") {\n                    html += 'class=\"' + classes + '\"';\n                }\n\n                html += \">\";\n                html += groupedView._getContent(content, startDate, resources, cellIdx);\n                html += \"</td>\";\n\n                that._slotIndices[getDate(startDate).getTime()] = startIdx + cellIdx;\n\n                startDate = groupedView._nextSlotStartDate(startDate);\n            }\n\n            return html;\n        },\n\n        _layout: function() {\n            var calendarInfo = this.calendarInfo();\n\n            var weekDayNames = this._isMobile() ? calendarInfo.days.namesShort.map(function(name) {\n                return name[0];\n            }) : calendarInfo.days.names;\n\n            var names = shiftArray(weekDayNames, calendarInfo.firstDay);\n            var columns = $.map(names, function(value) { return { text: value }; });\n            var resources = this.groupedResources;\n            var rows;\n            var groupedView = this._groupedView;\n\n            if (resources.length) {\n                if (this._isVerticallyGrouped()) {\n                    var inner = []; //add hidden cells in order to sync the content rows\n                    for (var idx = 0; idx < 6; idx++) {\n                        inner.push({ text: \"<div>&nbsp;</div>\", className: \"k-hidden k-slot-cell\" });\n                    }\n                    rows = groupedView._createRowsLayout(resources, inner, this.groupHeaderTemplate, columns);\n                    columns = groupedView._createVerticalColumnsLayout(resources, inner, this.groupHeaderTemplate, columns);\n\n                } else {\n                    columns = groupedView._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                }\n            }\n\n            return {\n                columns: columns,\n                rows: rows\n            };\n        },\n\n        _createEventElement: function(event) {\n            var options = this.options;\n            var editable = options.editable;\n\n            var isMobile = this._isMobile();\n\n            event.showDelete = editable && editable.destroy !== false && !isMobile;\n            event.resizable = editable && editable.resize !== false && !isMobile;\n            event.ns = kendo.ns;\n            event.resources = this.eventResources(event);\n            event.inverseColor = false;\n            event.messages = options.messages || { destroy: \"Delete\" };\n\n            var element = $(this.eventTemplate($.extend({}, event, {\n                ariaLabel: this._formatEventAriaLabel(event.title, event.start, event.end, event.isAllDay)\n            })));\n\n            this.angular(\"compile\", function() {\n                return {\n                    elements: element,\n                    data: [ { dataItem: event } ]\n                };\n            });\n\n            return element;\n        },\n\n        _isInDateSlot: function(event) {\n            var groups = this.groups[0];\n            var slotStart = groups.firstSlot().start;\n            var slotEnd = groups.lastSlot().end - 1;\n\n            var startTime = kendo.date.toUtcTime(event.start);\n            var endTime = kendo.date.toUtcTime(event.end);\n\n            return (isInDateRange(startTime, slotStart, slotEnd) ||\n                isInDateRange(endTime, slotStart, slotEnd) ||\n                isInDateRange(slotStart, startTime, endTime) ||\n                isInDateRange(slotEnd, startTime, endTime)) &&\n                (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay );\n        },\n\n        _slotIndex: function(date) {\n            return this._slotIndices[getDate(date).getTime()];\n        },\n\n        _positionMobileEvent: function(slotRange, element, group) {\n            var startSlot = slotRange.start,\n                tableEl = this.table.find(\".k-scheduler-content .k-scheduler-table\")[0],\n                contentEl = this.table.find(\".k-scheduler-content\")[0],\n                offsetLeft;\n\n            if (slotRange.start.offsetLeft > slotRange.end.offsetLeft) {\n               startSlot = slotRange.end;\n            }\n\n            var startIndex = slotRange.start.index;\n            var endIndex = startIndex;\n\n            var eventCount = 3;\n            var events = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n\n            events.push({ element: element, start: startIndex, end: endIndex });\n\n            var rows = SchedulerView.createRows(events);\n\n            var slot = slotRange.collection.at(startIndex);\n\n            var container = slot.container;\n\n            if (!container) {\n                if (this._isRtl && contentEl.clientWidth < contentEl.scrollWidth) {\n                    // RTL mobile rendering with horizontal scroll\n                    offsetLeft = startSlot.offsetLeft - (tableEl.clientWidth - contentEl.clientWidth) + \"px\";\n                } else {\n                    offsetLeft = startSlot.offsetLeft + \"px\";\n                }\n\n                container = $(kendo.format('<div class=\"k-events-container\" style=\"top:{0};left:{1};width:{2}\"></div>',\n                    startSlot.offsetTop + startSlot.firstChildTop + startSlot.firstChildHeight + \"px\",\n                    offsetLeft,\n                    startSlot.offsetWidth + \"px\"\n                ));\n\n                slot.container = container;\n\n                this.content[0].appendChild(container[0]);\n            }\n\n            if (rows.length <= eventCount) {\n                slotRange.addEvent({ element: element, start: startIndex, end: endIndex, groupIndex: startSlot.groupIndex });\n\n                group._continuousEvents.push({\n                    element: element,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    start: slotRange.start,\n                    end: slotRange.end\n                });\n\n                container[0].appendChild(element[0]);\n            }\n        },\n\n        _positionEvent: function(slotRange, element, group) {\n            var eventHeight = this.options.eventHeight;\n            var eventSpacing = this.options.eventSpacing;\n            var startSlot = slotRange.start;\n\n            if (slotRange.start.offsetLeft > slotRange.end.offsetLeft) {\n                startSlot = slotRange.end;\n            }\n\n            var startIndex = slotRange.start.index;\n            var endIndex = slotRange.end.index;\n            var eventCount = startSlot.eventCount;\n            var events = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n            var rightOffset = startIndex !== endIndex ? 3 : 2;\n\n            events.push({ element: element, start: startIndex, end: endIndex });\n\n            var rows = SchedulerView.createRows(events);\n\n            for (var idx = 0, length = Math.min(rows.length, eventCount); idx < length; idx++) {\n                var rowEvents = rows[idx].events;\n                var eventTop = (eventHeight === \"auto\")\n                    ? \"\" // jshint ignore:line\n                    : (\n                        startSlot.offsetTop +\n                        startSlot.firstChildTop +\n                        startSlot.firstChildHeight +\n                        CELL_INNER_SPACING +\n                        idx * (eventHeight + eventSpacing) +\n                        \"px\"\n                    );\n\n                for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                    rowEvents[j].element[0].style.top = eventTop;\n                    rowEvents[j].element.attr(kendo.attr(\"order\"), idx);\n                }\n            }\n\n            if (rows.length > eventCount) {\n                for (var slotIndex = startIndex; slotIndex <= endIndex; slotIndex++) {\n                    var collection = slotRange.collection;\n\n                    var slot = collection.at(slotIndex);\n\n                    if (slot.more) {\n                        continue;\n                    }\n\n                    slot.more = $(MORE_BUTTON_TEMPLATE({\n                        ns: kendo.ns,\n                        start: slotIndex,\n                        end: slotIndex,\n                        width: slot.clientWidth - 2,\n                        left: slot.offsetLeft + 2,\n                        top: (eventHeight === \"auto\")\n                            ? \"\" // jshint ignore:line\n                            : (\n                                slot.offsetTop +\n                                slot.firstChildTop +\n                                slot.firstChildHeight +\n                                CELL_INNER_SPACING +\n                                (eventCount * eventHeight) +\n                                ( (eventCount - 1) * eventSpacing) +\n                                CELL_INNER_SPACING\n                            )\n                    }));\n\n                    this.content[0].appendChild(slot.more[0]);\n                }\n            } else {\n                slotRange.addEvent({ element: element, start: startIndex, end: endIndex, groupIndex: startSlot.groupIndex });\n\n                element[0].style.width = slotRange.innerWidth() - rightOffset + \"px\";\n                element[0].style.left = startSlot.offsetLeft + 2 + \"px\";\n                element[0].style.height = (eventHeight === \"auto\") ? \"\" : eventHeight + \"px\";\n\n                group._continuousEvents.push({\n                    element: element,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    start: slotRange.start,\n                    end: slotRange.end,\n                    order: parseInt(element.attr(kendo.attr(\"order\")), 10)\n                });\n\n                element.appendTo(this.content);\n\n                this._inverseEventColor(element);\n\n                // Add event meta to slot\n                var _collectionIndex = slotRange.start.collectionIndex;\n                var _startSlotIndex = slotRange.start.index;\n                var _startSlot = group._daySlotCollections[_collectionIndex]._slots[_startSlotIndex];\n\n                if (!_startSlot.eventMeta) {\n                    _startSlot.eventMeta = [];\n                }\n\n                _startSlot.eventMeta.push({\n                    height: (eventHeight === \"auto\") ? element.outerHeight() : eventHeight,\n                    top: 0,\n                    startIndex: _startSlotIndex,\n                    endIndex: slotRange.end.index,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    order: parseInt(element.attr(kendo.attr(\"order\")), 10)\n                });\n            }\n        },\n\n        _slotByPosition: function(x, y) {\n            var offset = this.content.offset();\n\n            x -= offset.left;\n            y -= offset.top;\n            y += this.content[0].scrollTop;\n            x += this.content[0].scrollLeft;\n\n            x = Math.ceil(x);\n            y = Math.ceil(y);\n\n            for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                var slot = this._groupedView._getTimeSlotByPosition(x, y, groupIndex);\n\n                if (slot) {\n                    return slot;\n                }\n            }\n\n            return null;\n        },\n\n        _appendResizeHint: function(hint) {\n            hint.appendTo(this.content);\n\n            this._resizeHint = this._resizeHint.add(hint);\n        },\n\n        _updateResizeHint: function(event, groupIndex, startTime, endTime) {\n            this._removeResizeHint();\n\n            var group = this.groups[groupIndex];\n\n            var ranges = group.ranges(startTime, endTime, true, event.isAllDay);\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                this._groupedView._createResizeHint(ranges[rangeIndex]);\n            }\n\n            this._resizeHint.find(\".k-label-top,.k-label-bottom\").text(\"\");\n\n            this._resizeHint.first().addClass(\"k-first\").find(\".k-label-top\").text(kendo.toString(kendo.timezone.toLocalDate(startTime), \"M/dd\"));\n\n            this._resizeHint.last().addClass(\"k-last\").find(\".k-label-bottom\").text(kendo.toString(kendo.timezone.toLocalDate(endTime), \"M/dd\"));\n        },\n\n        _updateMoveHint: function(event, groupIndex, distance) {\n            var start = kendo.date.toUtcTime(event.start) + distance;\n\n            var end = start + event.duration();\n\n            var group = this.groups[groupIndex];\n\n            var ranges = group.ranges(start, end, true, event.isAllDay);\n\n            this._removeMoveHint(event.uid);\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                this._groupedView._createMoveHint(ranges[rangeIndex], event);\n            }\n        },\n\n        _appendMoveHint: function(hint) {\n            hint.appendTo(this.content);\n\n            this._moveHint = this._moveHint.add(hint);\n        },\n\n        _groups: function() {\n            var groupCount = this._groupCount();\n            var tableRows = this.content[0].getElementsByTagName(\"tr\");\n            var startDate = this.startDate();\n            this.groups = [];\n\n            for (var idx = 0; idx < groupCount; idx++) {\n                this._addResourceView(idx);\n            }\n\n            this._groupedView._addDaySlotCollections(groupCount, tableRows, startDate);\n        },\n\n\n        addDaySlot: function(collection, cell, startDate, cellCount) {\n            var start = kendo.date.addDays(startDate, cellCount);\n            var end = kendo.date.MS_PER_DAY;\n            var eventsPerDay = this.options.eventsPerDay;\n\n            if (startDate.getHours() !== start.getHours()) {\n                end += (startDate.getHours() - start.getHours()) * kendo.date.MS_PER_HOUR;\n            }\n\n            start = kendo.date.toUtcTime(start);\n            end += start;\n\n            collection.addDaySlot(cell, start, end, eventsPerDay);\n        },\n\n        render: function(events) {\n            this.content.children(\".k-event,.k-more-events,.k-events-container\").remove();\n\n            this._cachedEvents = events;\n\n            this._groups();\n\n            events = new kendo.data.Query(events)\n                .sort([{ field: \"start\", dir: \"asc\" },{ field: \"end\", dir: \"desc\" }])\n                .toArray()\n                .filter(function(event) {\n                    return this._isInDateSlot(event);\n                }.bind(this));\n\n            var resources = this.groupedResources;\n            var isMobile = this._isMobile();\n            var isGroupedByDate = this._isGroupedByDate();\n            var adaptiveSlotHeight = this.options.adaptiveSlotHeight;\n\n            this._canAdjustSlotHeight = isMobile !== true && isGroupedByDate !== true && resources.length === 0 && adaptiveSlotHeight === true;\n\n            if (resources.length) {\n                this._renderGroups(events, resources, 0, 1);\n            } else {\n                this._renderEvents(events, 0);\n            }\n\n            this.refreshLayout();\n            this.trigger(\"activate\");\n        },\n\n        _renderEvents: function(events, groupIndex) {\n            var group = this.groups[groupIndex];\n            var view = this._groupedView._view;\n            var isMobile = view._isMobile();\n\n            if (!group) {\n                return;\n            }\n\n            if (!group._continuousEvents) {\n                group._continuousEvents = [];\n            }\n\n            if (isMobile) {\n\n                events.forEach(function(event) {\n                    var ranges = group.slotRanges(event, true);\n                    var range = ranges[0];\n                    var start = range.start.start;\n                    var end = range.end.end;\n                    var rangeStart = new Date(range.start.start);\n                    var rangeEnd = ranges[ranges.length - 1].end.end;\n                    var newStart = new Date(rangeStart);\n                    var newEnd = new Date(end);\n\n                    while (rangeStart.getTime() <= rangeEnd &&\n                        event.end >= kendo.timezone.toLocalDate(rangeStart) &&\n                        event.start <= kendo.timezone.toLocalDate(rangeEnd)) {\n                        var dateRange = group.daySlotRanges(newStart.getTime(), newEnd.getTime(), true)[0];\n                        newEnd.setDate(newEnd.getDate() + 1);\n                        newStart.setDate(newStart.getDate() + 1);\n\n                        if (dateRange) {\n                            dateRange.head = null;\n                            dateRange.middle = null;\n                            dateRange.tail = null;\n                            this._groupedView._positionMobileEvent(event, group, dateRange, 1, start, end, 0);\n                        }\n\n                        rangeStart = kendo.date.addDays(rangeStart, 1);\n                    }\n\n                }.bind(this));\n\n            } else {\n\n                events.forEach(function(event) {\n                    var range;\n                    var start = event.start;\n                    var end = event.end;\n                    var ranges = group.slotRanges(event, true);\n                    var rangeCount = ranges.length;\n\n                    for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                        range = ranges[rangeIndex];\n\n                        this._groupedView._positionEvent(event, group, range, rangeCount, start, end, rangeIndex);\n                    }\n\n                }.bind(this));\n\n                if (this._canAdjustSlotHeight === true) {\n                    this._adjustSlotHeight(group);\n                }\n\n            }\n        },\n\n        _renderGroups: function(events, resources, offset, columnLevel, parentValue) {\n            var resource = resources[0];\n\n            if (resource) {\n                var view = resource.dataSource.view();\n\n                view = view.filter(function(item) {\n                    var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                    return itemParentValue === null || itemParentValue === undefined || itemParentValue === parentValue;\n                });\n\n                for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                    var value = this._resourceValue(resource, view[itemIdx]);\n\n                    var tmp = new kendo.data.Query(events).filter({ field: resource.field, operator: SchedulerView.groupEqFilter(value) }).toArray();\n\n                    if (resources.length > 1) {\n                        offset = this._renderGroups(tmp, resources.slice(1), offset++, columnLevel + 1, value);\n                    } else {\n                        this._renderEvents(tmp, offset++);\n                    }\n                }\n            }\n            return offset;\n        },\n\n        _groupCount: function() {\n            var resources = this.groupedResources;\n            var groupedView = this._groupedView;\n\n            if (resources.length) {\n                if (this._isVerticallyGrouped()) {\n                    return groupedView._verticalGroupCount(resources.length - 1);\n                } else {\n                    return groupedView._horizontalGroupCount(resources.length);\n                }\n            }\n            return 1;\n        },\n\n        _columnOffsetForResource: function(index) {\n            return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n        },\n\n        destroy: function() {\n            if (this.table) {\n                this.table.removeClass(\"k-scheduler-monthview\");\n            }\n\n            if (this.content) {\n                this.content.off(NS);\n            }\n\n            if (this.element) {\n                this.element.off(NS);\n            }\n\n            SchedulerView.fn.destroy.call(this);\n\n            if (this._isMobile() && this.options.editable) {\n                if (this.options.editable.create !== false) {\n                    this._addUserEvents.destroy();\n                }\n            }\n        },\n\n        events: [\"remove\", \"add\", \"edit\", \"navigate\"],\n\n        options: {\n            title: \"Month\",\n            name: \"month\",\n            eventHeight: 25,\n            moreButtonHeight: 13,\n            editable: true,\n            selectedDateFormat: \"{0:y}\",\n            selectedShortDateFormat: \"{0:y}\",\n            selectedMobileDateFormat: \"{0:MMMM}\",\n            groupHeaderTemplate: \"#=text#\",\n            dayTemplate: DAY_TEMPLATE,\n            eventTemplate: EVENT_TEMPLATE,\n            eventsPerDay: 2,\n            adaptiveSlotHeight: false,\n            eventSpacing: 3\n        }\n    });\n\n\n    function shiftArray(array, idx) {\n        return array.slice(idx).concat(array.slice(0, idx));\n    }\n\n    function firstVisibleMonthDay(date, calendarInfo) {\n        var firstDay = calendarInfo.firstDay,\n            firstVisibleDay = new Date(date.getFullYear(), date.getMonth(), 0, date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n\n        while (firstVisibleDay.getDay() != firstDay) {\n            kendo.date.setTime(firstVisibleDay, -1 * MS_PER_DAY);\n        }\n\n        return firstVisibleDay;\n    }\n\n    function isInDateRange(value, min, max) {\n        var msMin = min,\n            msMax = max,\n            msValue;\n\n        msValue = value;\n\n        return msValue >= msMin && msValue <= msMax;\n    }\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n\n"],"names":["define","__meta__","id","name","category","description","depends","hidden","$","window","kendo","jQuery","ui","SchedulerView","NS","extend","getDate","date","MS_PER_DAY","NUMBER_OF_ROWS","NUMBER_OF_COLUMNS","INVERSE_COLOR_CLASS","DAY_TEMPLATE","template","EVENT_WRAPPER_STRING","EVENT_TEMPLATE","CELL_INNER_SPACING","MORE_BUTTON_TEMPLATE","MonthGroupedView","Class","init","view","this","_view","_verticalRowCountForLevel","level","_rowCountForLevel","_horizontalGroupCountForLevel","_columnCountForLevel","_getCalendarRowsLength","cellsPerRow","cellCount","_createRows","start","startIdx","horizontalGroupCount","verticalGroupIndex","isVerticallyGrouped","_isVerticallyGrouped","html","groupIdx","_createRow","_adjustStartDate","addDays","_getContent","content","startDate","resources","_getTimeSlotByPosition","x","y","groupIndex","group","groups","daySlotByPosition","_nextSlotStartDate","nextDay","_createRowsLayout","rows","groupHeaderTemplate","_createVerticalColumnsLayout","columns","_createColumnsLayout","_verticalGroupCount","_horizontalGroupCount","_columnOffsetForResource","_positionMobileEvent","event","range","rangeCount","end","rangeIndex","endDate","occurrence","clone","Date","head","tail","_createEventElement","_positionEvent","_addDaySlotCollections","groupCount","tableRows","columnCount","rowCount","rowMultiplier","rowIndex","collection","addDaySlotCollection","tableRow","cells","children","cellMultiplier","cellIndex","cell","addDaySlot","_changePeriodGroupIndex","reverse","length","_createResizeHint","left","startSlot","offsetLeft","top","offsetTop","width","innerWidth","height","clientHeight","hint","fn","call","_appendResizeHint","_createMoveHint","endSlot","css","firstChildHeight","options","eventHeight","index","addClass","inverseColor","_appendMoveHint","MonthGroupedByDateView","dateIdx","verticalStart","_groupCount","isLastRow","cellIdx","_createDateLayout","resource","configuration","data","dataSource","dataIndex","value","getter","dataValueField","obj","text","htmlEncode","dataTextField","color","dataColorField","field","title","className","slice","push","subColumns","startIndex","endIndex","i","currentSlot","_slots","dateRange","daySlotRanges","dateIndex","currentTableIndex","currentCellIndex","currentGroupIndex","_daySlotCollections","vertical","selectionGroupIndex","offsetWidth","offsetHeight","slotIdx","slot","shiftArray","array","idx","concat","firstVisibleMonthDay","calendarInfo","firstDay","firstVisibleDay","getFullYear","getMonth","getHours","getMinutes","getSeconds","getMilliseconds","getDay","setTime","isInDateRange","min","max","msMin","msMax","msValue","scheduler","MonthView","element","that","eventsPerDay","moreButtonHeight","adaptiveSlotHeight","_groupedView","_getGroupedView","isGroupedByDate","_isGroupedByDate","Error","_templates","_editable","_renderLayout","_groups","_updateDirection","selection","ranges","multiple","isSameSlot","isSameCollection","collectionIndex","updateDirection","backward","_changeDate","previous","collections","_getCollections","daySlotCollectionCount","slotIndex","_getNextHorizontalRange","method","horizontalRange","isVertical","_getNextVerticalRange","verticalRange","_changeViewPeriod","pad","newStart","newEnd","_isInRange","events","_continuousSlot","continuousSlot","_changeGroupContinuously","lastGroupIndex","_normalizeHorizontalSelection","_normalizeVerticalSelection","settings","Template","templateSettings","eventTemplate","_eventTmpl","dayTemplate","dateForTitle","format","selectedDateFormat","_firstDayOfMonth","_lastDayOfMonth","shortDateForTitle","selectedShortDateFormat","mobileDateForTitle","selectedMobileDateFormat","nextDate","previousDate","previousDay","_startDate","_endDate","firstDayOfMonth","lastDayOfMonth","createLayout","_layout","_content","_initSlotHeight","refreshLayout","_isVirtualized","_tryRenderContent","on","e","offset","currentTarget","_slotByPosition","preventDefault","trigger","_footer","editable","_isMobile","_touchEditable","_mouseEditable","uid","closest","attr","create","resourceInfo","_resourceBySlot","eventInfo","isAllDay","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","useClickAsTap","browser","edge","filter","tap","_scrolling","target","selectionByElement","columnLevel","columnLevels","rowLevel","rowLevels","verticalGroupCount","groupedView","groupedResources","verticalGroupIdx","_createCalendar","_cachedGroupIndex","find","_virtualContent","append","_calcSlotHeight","eventSpacing","firstCell","dateHeader","undefined","firstChild","Math","round","isMobile","table","rowHeight","_adjustSlotHeight","_canAdjustSlotHeight","weeks","forEach","week","_events","eventIndex","slots","firstSlot","weekOffsetTop","weekHeight","eventMeta","actualEventCount","meta","adjSlot","adjMeta","indexOf","dirty","sort","first","second","order","slotHeight","firstChildTop","style","more","parentNode","weekStartDates","_slotIndices","calendarRowsLength","rowIdx","_weekStartDates","classes","isToday","getTime","weekDayNames","days","namesShort","map","names","inner","showDelete","destroy","resizable","resize","ns","eventResources","messages","ariaLabel","_formatEventAriaLabel","angular","elements","dataItem","_isInDateSlot","slotStart","slotEnd","lastSlot","startTime","toUtcTime","endTime","_slotIndex","slotRange","tableEl","contentEl","eventCount","collidingEvents","createRows","at","container","_isRtl","clientWidth","scrollWidth","appendChild","addEvent","_continuousEvents","rightOffset","rowEvents","eventTop","j","eventLength","parseInt","appendTo","_inverseEventColor","_collectionIndex","_startSlotIndex","_startSlot","outerHeight","scrollTop","scrollLeft","ceil","_resizeHint","add","_updateResizeHint","_removeResizeHint","toString","timezone","toLocalDate","last","_updateMoveHint","distance","duration","_removeMoveHint","_moveHint","getElementsByTagName","_addResourceView","MS_PER_HOUR","render","remove","_cachedEvents","Query","dir","toArray","bind","_renderGroups","_renderEvents","slotRanges","rangeStart","rangeEnd","setDate","middle","parentValue","item","itemParentValue","dataParentValueField","itemIdx","_resourceValue","tmp","operator","groupEqFilter","removeClass","off","amd","a1","a2","a3"],"mappings":"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"}